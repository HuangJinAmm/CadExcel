# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.6.1 |Anaconda 4.4.0 (64-bit)| (default, May 11 2017, 13:25:24) [MSC v.1900 64 bit (AMD64)]
# From type library 'acax17enu.tlb'
# On Wed Oct 31 14:23:21 2018
'AutoCAD 2008 Type Library'
makepy_version = '0.5.01'
python_version = 0x30601f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{851A4561-F4EC-4631-9B0C-E7DC407512C9}')
MajorVersion = 1
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

class constants:
	acCubicSpline3DPoly           =2          # from enum Ac3DPolylineType
	acQuadSpline3DPoly            =1          # from enum Ac3DPolylineType
	acSimple3DPoly                =0          # from enum Ac3DPolylineType
	acDemanLoadDisable            =0          # from enum AcARXDemandLoad
	acDemandLoadCmdInvoke         =2          # from enum AcARXDemandLoad
	acDemandLoadOnObjectDetect    =1          # from enum AcARXDemandLoad
	acModelSpace                  =1          # from enum AcActiveSpace
	acPaperSpace                  =0          # from enum AcActiveSpace
	acAlignmentAligned            =3          # from enum AcAlignment
	acAlignmentBottomCenter       =13         # from enum AcAlignment
	acAlignmentBottomLeft         =12         # from enum AcAlignment
	acAlignmentBottomRight        =14         # from enum AcAlignment
	acAlignmentCenter             =1          # from enum AcAlignment
	acAlignmentFit                =5          # from enum AcAlignment
	acAlignmentLeft               =0          # from enum AcAlignment
	acAlignmentMiddle             =4          # from enum AcAlignment
	acAlignmentMiddleCenter       =10         # from enum AcAlignment
	acAlignmentMiddleLeft         =9          # from enum AcAlignment
	acAlignmentMiddleRight        =11         # from enum AcAlignment
	acAlignmentRight              =2          # from enum AcAlignment
	acAlignmentTopCenter          =7          # from enum AcAlignment
	acAlignmentTopLeft            =6          # from enum AcAlignment
	acAlignmentTopRight           =8          # from enum AcAlignment
	acAlignPntAcquisitionAutomatic=0          # from enum AcAlignmentPointAcquisition
	acAlignPntAcquisitionShiftToAcquire=1          # from enum AcAlignmentPointAcquisition
	acDegreeMinuteSeconds         =1          # from enum AcAngleUnits
	acDegrees                     =0          # from enum AcAngleUnits
	acGrads                       =2          # from enum AcAngleUnits
	acRadians                     =3          # from enum AcAngleUnits
	acAttachmentPointBottomCenter =8          # from enum AcAttachmentPoint
	acAttachmentPointBottomLeft   =7          # from enum AcAttachmentPoint
	acAttachmentPointBottomRight  =9          # from enum AcAttachmentPoint
	acAttachmentPointMiddleCenter =5          # from enum AcAttachmentPoint
	acAttachmentPointMiddleLeft   =4          # from enum AcAttachmentPoint
	acAttachmentPointMiddleRight  =6          # from enum AcAttachmentPoint
	acAttachmentPointTopCenter    =2          # from enum AcAttachmentPoint
	acAttachmentPointTopLeft      =1          # from enum AcAttachmentPoint
	acAttachmentPointTopRight     =3          # from enum AcAttachmentPoint
	acAttributeModeConstant       =2          # from enum AcAttributeMode
	acAttributeModeInvisible      =1          # from enum AcAttributeMode
	acAttributeModeLockPosition   =16         # from enum AcAttributeMode
	acAttributeModeMultipleLine   =32         # from enum AcAttributeMode
	acAttributeModeNormal         =0          # from enum AcAttributeMode
	acAttributeModePreset         =8          # from enum AcAttributeMode
	acAttributeModeVerify         =4          # from enum AcAttributeMode
	acConnectBase                 =1          # from enum AcBlockConnectionType
	acConnectExtents              =0          # from enum AcBlockConnectionType
	acAny                         =0          # from enum AcBlockScaling
	acUniform                     =1          # from enum AcBlockScaling
	acFalse                       =0          # from enum AcBoolean
	acTrue                        =1          # from enum AcBoolean
	acIntersection                =1          # from enum AcBooleanType
	acSubtraction                 =2          # from enum AcBooleanType
	acUnion                       =0          # from enum AcBooleanType
	acBottomCenter                =8          # from enum AcCellAlignment
	acBottomLeft                  =7          # from enum AcCellAlignment
	acBottomRight                 =9          # from enum AcCellAlignment
	acMiddleCenter                =5          # from enum AcCellAlignment
	acMiddleLeft                  =4          # from enum AcCellAlignment
	acMiddleRight                 =6          # from enum AcCellAlignment
	acTopCenter                   =2          # from enum AcCellAlignment
	acTopLeft                     =1          # from enum AcCellAlignment
	acTopRight                    =3          # from enum AcCellAlignment
	acCellContentLayoutFlow       =1          # from enum AcCellContentLayout
	acCellContentLayoutStackedHorizontal=2          # from enum AcCellContentLayout
	acCellContentLayoutStackedVertical=4          # from enum AcCellContentLayout
	acCellContentTypeBlock        =4          # from enum AcCellContentType
	acCellContentTypeField        =2          # from enum AcCellContentType
	acCellContentTypeUnknown      =0          # from enum AcCellContentType
	acCellContentTypeValue        =1          # from enum AcCellContentType
	acBottomMask                  =4          # from enum AcCellEdgeMask
	acLeftMask                    =8          # from enum AcCellEdgeMask
	acRightMask                   =2          # from enum AcCellEdgeMask
	acTopMask                     =1          # from enum AcCellEdgeMask
	acCellMarginBottom            =4          # from enum AcCellMargin
	acCellMarginHorzSpacing       =16         # from enum AcCellMargin
	acCellMarginLeft              =2          # from enum AcCellMargin
	acCellMarginRight             =8          # from enum AcCellMargin
	acCellMarginTop               =1          # from enum AcCellMargin
	acCellMarginVertSpacing       =32         # from enum AcCellMargin
	kCellOptionNone               =0          # from enum AcCellOption
	kInheritCellFormat            =1          # from enum AcCellOption
	acAlignmentProperty           =32         # from enum AcCellProperty
	acAllCellProperties           =524287     # from enum AcCellProperty
	acAutoScale                   =32768      # from enum AcCellProperty
	acBackgroundColor             =128        # from enum AcCellProperty
	acBitProperties               =245760     # from enum AcCellProperty
	acContentColor                =64         # from enum AcCellProperty
	acContentLayout               =262144     # from enum AcCellProperty
	acContentProperties           =33662      # from enum AcCellProperty
	acDataFormat                  =4          # from enum AcCellProperty
	acDataType                    =2          # from enum AcCellProperty
	acDataTypeAndFormat           =6          # from enum AcCellProperty
	acEnableBackgroundColor       =16384      # from enum AcCellProperty
	acFlowDirBtoT                 =131072     # from enum AcCellProperty
	acInvalidCellProperty         =0          # from enum AcCellProperty
	acLock                        =1          # from enum AcCellProperty
	acMarginBottom                =8192       # from enum AcCellProperty
	acMarginLeft                  =1024       # from enum AcCellProperty
	acMarginRight                 =4096       # from enum AcCellProperty
	acMarginTop                   =2048       # from enum AcCellProperty
	acMergeAll                    =65536      # from enum AcCellProperty
	acRotation                    =8          # from enum AcCellProperty
	acScale                       =16         # from enum AcCellProperty
	acTextHeight                  =512        # from enum AcCellProperty
	acTextStyle                   =256        # from enum AcCellProperty
	acCellStateContentLocked      =1          # from enum AcCellState
	acCellStateContentModified    =32         # from enum AcCellState
	acCellStateContentReadOnly    =2          # from enum AcCellState
	acCellStateFormatLocked       =4          # from enum AcCellState
	acCellStateFormatModified     =64         # from enum AcCellState
	acCellStateFormatReadOnly     =8          # from enum AcCellState
	acCellStateLinked             =16         # from enum AcCellState
	acCellStateNone               =0          # from enum AcCellState
	acBlockCell                   =2          # from enum AcCellType
	acTextCell                    =1          # from enum AcCellType
	acUnknownCell                 =0          # from enum AcCellType
	acBlue                        =5          # from enum AcColor
	acByBlock                     =0          # from enum AcColor
	acByLayer                     =256        # from enum AcColor
	acCyan                        =4          # from enum AcColor
	acGreen                       =3          # from enum AcColor
	acMagenta                     =6          # from enum AcColor
	acRed                         =1          # from enum AcColor
	acWhite                       =7          # from enum AcColor
	acYellow                      =2          # from enum AcColor
	acColorMethodByACI            =195        # from enum AcColorMethod
	acColorMethodByBlock          =193        # from enum AcColorMethod
	acColorMethodByLayer          =192        # from enum AcColorMethod
	acColorMethodByRGB            =194        # from enum AcColorMethod
	acColorMethodForeground       =197        # from enum AcColorMethod
	acDisplayDCS                  =2          # from enum AcCoordinateSystem
	acOCS                         =4          # from enum AcCoordinateSystem
	acPaperSpaceDCS               =3          # from enum AcCoordinateSystem
	acUCS                         =1          # from enum AcCoordinateSystem
	acWorld                       =0          # from enum AcCoordinateSystem
	acUpdateDataFromSource        =1          # from enum AcDataLinkUpdateDirection
	acUpdateSourceFromData        =2          # from enum AcDataLinkUpdateDirection
	acUpdateOptionIncludeXrefs    =1048576    # from enum AcDataLinkUpdateOption
	acUpdateOptionNone            =0          # from enum AcDataLinkUpdateOption
	acUpdateOptionOverwriteContentModifiedAfterUpdate=131072     # from enum AcDataLinkUpdateOption
	acUpdateOptionOverwriteFormatModifiedAfterUpdate=262144     # from enum AcDataLinkUpdateOption
	acUpdateOptionUpdateFullSourceRange=524288     # from enum AcDataLinkUpdateOption
	acSymAbove                    =1          # from enum AcDimArcLengthSymbol
	acSymInFront                  =0          # from enum AcDimArcLengthSymbol
	acSymNone                     =2          # from enum AcDimArcLengthSymbol
	acArrowArchTick               =4          # from enum AcDimArrowheadType
	acArrowBoxBlank               =14         # from enum AcDimArrowheadType
	acArrowBoxFilled              =15         # from enum AcDimArrowheadType
	acArrowClosed                 =2          # from enum AcDimArrowheadType
	acArrowClosedBlank            =1          # from enum AcDimArrowheadType
	acArrowDatumBlank             =16         # from enum AcDimArrowheadType
	acArrowDatumFilled            =17         # from enum AcDimArrowheadType
	acArrowDefault                =0          # from enum AcDimArrowheadType
	acArrowDot                    =3          # from enum AcDimArrowheadType
	acArrowDotBlank               =12         # from enum AcDimArrowheadType
	acArrowDotSmall               =11         # from enum AcDimArrowheadType
	acArrowIntegral               =18         # from enum AcDimArrowheadType
	acArrowNone                   =19         # from enum AcDimArrowheadType
	acArrowOblique                =5          # from enum AcDimArrowheadType
	acArrowOpen                   =6          # from enum AcDimArrowheadType
	acArrowOpen30                 =10         # from enum AcDimArrowheadType
	acArrowOpen90                 =9          # from enum AcDimArrowheadType
	acArrowOrigin                 =7          # from enum AcDimArrowheadType
	acArrowOrigin2                =8          # from enum AcDimArrowheadType
	acArrowSmall                  =13         # from enum AcDimArrowheadType
	acArrowUserDefined            =20         # from enum AcDimArrowheadType
	acCenterLine                  =1          # from enum AcDimCenterType
	acCenterMark                  =0          # from enum AcDimCenterType
	acCenterNone                  =2          # from enum AcDimCenterType
	acArrowsOnly                  =1          # from enum AcDimFit
	acBestFit                     =3          # from enum AcDimFit
	acTextAndArrows               =0          # from enum AcDimFit
	acTextOnly                    =2          # from enum AcDimFit
	acDiagonal                    =1          # from enum AcDimFractionType
	acHorizontal                  =0          # from enum AcDimFractionType
	acNotStacked                  =2          # from enum AcDimFractionType
	acFirstExtensionLine          =1          # from enum AcDimHorizontalJustification
	acHorzCentered                =0          # from enum AcDimHorizontalJustification
	acOverFirstExtension          =3          # from enum AcDimHorizontalJustification
	acOverSecondExtension         =4          # from enum AcDimHorizontalJustification
	acSecondExtensionLine         =2          # from enum AcDimHorizontalJustification
	acDimLArchitectural           =4          # from enum AcDimLUnits
	acDimLDecimal                 =2          # from enum AcDimLUnits
	acDimLEngineering             =3          # from enum AcDimLUnits
	acDimLFractional              =5          # from enum AcDimLUnits
	acDimLScientific              =1          # from enum AcDimLUnits
	acDimLWindowsDesktop          =6          # from enum AcDimLUnits
	acDimPrecisionEight           =8          # from enum AcDimPrecision
	acDimPrecisionFive            =5          # from enum AcDimPrecision
	acDimPrecisionFour            =4          # from enum AcDimPrecision
	acDimPrecisionOne             =1          # from enum AcDimPrecision
	acDimPrecisionSeven           =7          # from enum AcDimPrecision
	acDimPrecisionSix             =6          # from enum AcDimPrecision
	acDimPrecisionThree           =3          # from enum AcDimPrecision
	acDimPrecisionTwo             =2          # from enum AcDimPrecision
	acDimPrecisionZero            =0          # from enum AcDimPrecision
	acDimLineWithText             =0          # from enum AcDimTextMovement
	acMoveTextAddLeader           =1          # from enum AcDimTextMovement
	acMoveTextNoLeader            =2          # from enum AcDimTextMovement
	acTolBottom                   =0          # from enum AcDimToleranceJustify
	acTolMiddle                   =1          # from enum AcDimToleranceJustify
	acTolTop                      =2          # from enum AcDimToleranceJustify
	acTolBasic                    =4          # from enum AcDimToleranceMethod
	acTolDeviation                =2          # from enum AcDimToleranceMethod
	acTolLimits                   =3          # from enum AcDimToleranceMethod
	acTolNone                     =0          # from enum AcDimToleranceMethod
	acTolSymmetrical              =1          # from enum AcDimToleranceMethod
	acDimArchitectural            =6          # from enum AcDimUnits
	acDimArchitecturalStacked     =4          # from enum AcDimUnits
	acDimDecimal                  =2          # from enum AcDimUnits
	acDimEngineering              =3          # from enum AcDimUnits
	acDimFractional               =7          # from enum AcDimUnits
	acDimFractionalStacked        =5          # from enum AcDimUnits
	acDimScientific               =1          # from enum AcDimUnits
	acDimWindowsDesktop           =8          # from enum AcDimUnits
	acAbove                       =1          # from enum AcDimVerticalJustification
	acJIS                         =3          # from enum AcDimVerticalJustification
	acOutside                     =2          # from enum AcDimVerticalJustification
	acVertCentered                =0          # from enum AcDimVerticalJustification
	acDragDisplayAutomatically    =2          # from enum AcDragDisplayMode
	acDragDisplayOnRequest        =1          # from enum AcDragDisplayMode
	acDragDoNotDisplay            =0          # from enum AcDragDisplayMode
	acDrawLeaderHeadFirst         =0          # from enum AcDrawLeaderOrderType
	acDrawLeaderTailFirst         =1          # from enum AcDrawLeaderOrderType
	acDrawContentFirst            =0          # from enum AcDrawMLeaderOrderType
	acDrawLeaderFirst             =1          # from enum AcDrawMLeaderOrderType
	acEnableSCM                   =2          # from enum AcDrawingAreaSCMCommand
	acEnableSCMOptions            =1          # from enum AcDrawingAreaSCMCommand
	acEnter                       =0          # from enum AcDrawingAreaSCMCommand
	acRepeatLastCommand           =0          # from enum AcDrawingAreaSCMDefault
	acSCM                         =1          # from enum AcDrawingAreaSCMDefault
	acEdRepeatLastCommand         =0          # from enum AcDrawingAreaSCMEdit
	acEdSCM                       =1          # from enum AcDrawingAreaSCMEdit
	acNoDrawingAreaShortCutMenu   =0          # from enum AcDrawingAreaShortCutMenu
	acUseDefaultDrawingAreaShortCutMenu=1          # from enum AcDrawingAreaShortCutMenu
	acBottomToTop                 =4          # from enum AcDrawingDirection
	acByStyle                     =5          # from enum AcDrawingDirection
	acLeftToRight                 =1          # from enum AcDrawingDirection
	acRightToLeft                 =2          # from enum AcDrawingDirection
	acTopToBottom                 =3          # from enum AcDrawingDirection
	acAngular                     =1          # from enum AcDynamicBlockReferencePropertyUnitsType
	acArea                        =3          # from enum AcDynamicBlockReferencePropertyUnitsType
	acDistance                    =2          # from enum AcDynamicBlockReferencePropertyUnitsType
	acNoUnits                     =0          # from enum AcDynamicBlockReferencePropertyUnitsType
	ac3dFace                      =1          # from enum AcEntityName
	ac3dPolyline                  =2          # from enum AcEntityName
	ac3dSolid                     =3          # from enum AcEntityName
	acArc                         =4          # from enum AcEntityName
	acAttribute                   =5          # from enum AcEntityName
	acAttributeReference          =6          # from enum AcEntityName
	acBlockReference              =7          # from enum AcEntityName
	acCircle                      =8          # from enum AcEntityName
	acDgnUnderlay                 =47         # from enum AcEntityName
	acDim3PointAngular            =41         # from enum AcEntityName
	acDimAligned                  =9          # from enum AcEntityName
	acDimAngular                  =10         # from enum AcEntityName
	acDimArcLength                =44         # from enum AcEntityName
	acDimDiametric                =12         # from enum AcEntityName
	acDimOrdinate                 =13         # from enum AcEntityName
	acDimRadial                   =14         # from enum AcEntityName
	acDimRadialLarge              =45         # from enum AcEntityName
	acDimRotated                  =15         # from enum AcEntityName
	acDwfUnderlay                 =46         # from enum AcEntityName
	acEllipse                     =16         # from enum AcEntityName
	acExternalReference           =42         # from enum AcEntityName
	acGroup                       =37         # from enum AcEntityName
	acHatch                       =17         # from enum AcEntityName
	acLeader                      =18         # from enum AcEntityName
	acLine                        =19         # from enum AcEntityName
	acMInsertBlock                =38         # from enum AcEntityName
	acMLeader                     =48         # from enum AcEntityName
	acMLine                       =40         # from enum AcEntityName
	acMtext                       =21         # from enum AcEntityName
	acPViewport                   =35         # from enum AcEntityName
	acPoint                       =22         # from enum AcEntityName
	acPolyfaceMesh                =39         # from enum AcEntityName
	acPolyline                    =23         # from enum AcEntityName
	acPolylineLight               =24         # from enum AcEntityName
	acPolymesh                    =25         # from enum AcEntityName
	acRaster                      =26         # from enum AcEntityName
	acRay                         =27         # from enum AcEntityName
	acRegion                      =28         # from enum AcEntityName
	acShape                       =29         # from enum AcEntityName
	acSolid                       =30         # from enum AcEntityName
	acSpline                      =31         # from enum AcEntityName
	acTable                       =43         # from enum AcEntityName
	acText                        =32         # from enum AcEntityName
	acTolerance                   =33         # from enum AcEntityName
	acTrace                       =34         # from enum AcEntityName
	acXline                       =36         # from enum AcEntityName
	acExtendBoth                  =3          # from enum AcExtendOption
	acExtendNone                  =0          # from enum AcExtendOption
	acExtendOtherEntity           =2          # from enum AcExtendOption
	acExtendThisEntity            =1          # from enum AcExtendOption
	acForEditing                  =1          # from enum AcFormatOption
	acForExpression               =2          # from enum AcFormatOption
	acIgnoreMtextFormat           =8          # from enum AcFormatOption
	acUseMaximumPrecision         =4          # from enum AcFormatOption
	kFormatOptionNone             =0          # from enum AcFormatOption
	acPreDefinedGradient          =0          # from enum AcGradientPatternType
	acUserDefinedGradient         =1          # from enum AcGradientPatternType
	acGridLineStyleDouble         =2          # from enum AcGridLineStyle
	acGridLineStyleSingle         =1          # from enum AcGridLineStyle
	acHorzBottom                  =4          # from enum AcGridLineType
	acHorzInside                  =2          # from enum AcGridLineType
	acHorzTop                     =1          # from enum AcGridLineType
	acInvalidGridLine             =0          # from enum AcGridLineType
	acVertInside                  =16         # from enum AcGridLineType
	acVertLeft                    =8          # from enum AcGridLineType
	acVertRight                   =32         # from enum AcGridLineType
	acGradientObject              =1          # from enum AcHatchObjectType
	acHatchObject                 =0          # from enum AcHatchObjectType
	acHatchStyleIgnore            =2          # from enum AcHatchStyle
	acHatchStyleNormal            =0          # from enum AcHatchStyle
	acHatchStyleOuter             =1          # from enum AcHatchStyle
	acHeight                      =2          # from enum AcHelixConstrainType
	acTurnHeight                  =0          # from enum AcHelixConstrainType
	acTurns                       =1          # from enum AcHelixConstrainType
	acCCW                         =0          # from enum AcHelixTwistType
	acCW                          =1          # from enum AcHelixTwistType
	acHorizontalAlignmentAligned  =3          # from enum AcHorizontalAlignment
	acHorizontalAlignmentCenter   =1          # from enum AcHorizontalAlignment
	acHorizontalAlignmentFit      =5          # from enum AcHorizontalAlignment
	acHorizontalAlignmentLeft     =0          # from enum AcHorizontalAlignment
	acHorizontalAlignmentMiddle   =4          # from enum AcHorizontalAlignment
	acHorizontalAlignmentRight    =2          # from enum AcHorizontalAlignment
	acPenWidth013                 =13         # from enum AcISOPenWidth
	acPenWidth018                 =18         # from enum AcISOPenWidth
	acPenWidth025                 =25         # from enum AcISOPenWidth
	acPenWidth035                 =35         # from enum AcISOPenWidth
	acPenWidth050                 =50         # from enum AcISOPenWidth
	acPenWidth070                 =70         # from enum AcISOPenWidth
	acPenWidth100                 =100        # from enum AcISOPenWidth
	acPenWidth140                 =140        # from enum AcISOPenWidth
	acPenWidth200                 =200        # from enum AcISOPenWidth
	acPenWidthUnk                 =-1         # from enum AcISOPenWidth
	acInsertUnitsAngstroms        =11         # from enum AcInsertUnits
	acInsertUnitsAstronomicalUnits=18         # from enum AcInsertUnits
	acInsertUnitsCentimeters      =5          # from enum AcInsertUnits
	acInsertUnitsDecameters       =15         # from enum AcInsertUnits
	acInsertUnitsDecimeters       =14         # from enum AcInsertUnits
	acInsertUnitsFeet             =2          # from enum AcInsertUnits
	acInsertUnitsGigameters       =17         # from enum AcInsertUnits
	acInsertUnitsHectometers      =16         # from enum AcInsertUnits
	acInsertUnitsInches           =1          # from enum AcInsertUnits
	acInsertUnitsKilometers       =7          # from enum AcInsertUnits
	acInsertUnitsLightYears       =19         # from enum AcInsertUnits
	acInsertUnitsMeters           =6          # from enum AcInsertUnits
	acInsertUnitsMicroinches      =8          # from enum AcInsertUnits
	acInsertUnitsMicrons          =13         # from enum AcInsertUnits
	acInsertUnitsMiles            =3          # from enum AcInsertUnits
	acInsertUnitsMillimeters      =4          # from enum AcInsertUnits
	acInsertUnitsMils             =9          # from enum AcInsertUnits
	acInsertUnitsNanometers       =12         # from enum AcInsertUnits
	acInsertUnitsParsecs          =20         # from enum AcInsertUnits
	acInsertUnitsUnitless         =0          # from enum AcInsertUnits
	acInsertUnitsYards            =10         # from enum AcInsertUnits
	acInsertUnitsAutoAssign       =1          # from enum AcInsertUnitsAction
	acInsertUnitsPrompt           =0          # from enum AcInsertUnitsAction
	acPreferenceClassic           =0          # from enum AcKeyboardAccelerator
	acPreferenceCustom            =1          # from enum AcKeyboardAccelerator
	acKeyboardEntry               =1          # from enum AcKeyboardPriority
	acKeyboardEntryExceptScripts  =2          # from enum AcKeyboardPriority
	acKeyboardRunningObjSnap      =0          # from enum AcKeyboardPriority
	acLsAll                       =65535      # from enum AcLayerStateMask
	acLsColor                     =32         # from enum AcLayerStateMask
	acLsFrozen                    =2          # from enum AcLayerStateMask
	acLsLineType                  =64         # from enum AcLayerStateMask
	acLsLineWeight                =128        # from enum AcLayerStateMask
	acLsLocked                    =4          # from enum AcLayerStateMask
	acLsNewViewport               =16         # from enum AcLayerStateMask
	acLsNone                      =0          # from enum AcLayerStateMask
	acLsOn                        =1          # from enum AcLayerStateMask
	acLsPlot                      =8          # from enum AcLayerStateMask
	acLsPlotStyle                 =256        # from enum AcLayerStateMask
	acLineNoArrow                 =0          # from enum AcLeaderType
	acLineWithArrow               =2          # from enum AcLeaderType
	acSplineNoArrow               =1          # from enum AcLeaderType
	acSplineWithArrow             =3          # from enum AcLeaderType
	acLineSpacingStyleAtLeast     =1          # from enum AcLineSpacingStyle
	acLineSpacingStyleExactly     =2          # from enum AcLineSpacingStyle
	acLnWt000                     =0          # from enum AcLineWeight
	acLnWt005                     =5          # from enum AcLineWeight
	acLnWt009                     =9          # from enum AcLineWeight
	acLnWt013                     =13         # from enum AcLineWeight
	acLnWt015                     =15         # from enum AcLineWeight
	acLnWt018                     =18         # from enum AcLineWeight
	acLnWt020                     =20         # from enum AcLineWeight
	acLnWt025                     =25         # from enum AcLineWeight
	acLnWt030                     =30         # from enum AcLineWeight
	acLnWt035                     =35         # from enum AcLineWeight
	acLnWt040                     =40         # from enum AcLineWeight
	acLnWt050                     =50         # from enum AcLineWeight
	acLnWt053                     =53         # from enum AcLineWeight
	acLnWt060                     =60         # from enum AcLineWeight
	acLnWt070                     =70         # from enum AcLineWeight
	acLnWt080                     =80         # from enum AcLineWeight
	acLnWt090                     =90         # from enum AcLineWeight
	acLnWt100                     =100        # from enum AcLineWeight
	acLnWt106                     =106        # from enum AcLineWeight
	acLnWt120                     =120        # from enum AcLineWeight
	acLnWt140                     =140        # from enum AcLineWeight
	acLnWt158                     =158        # from enum AcLineWeight
	acLnWt200                     =200        # from enum AcLineWeight
	acLnWt211                     =211        # from enum AcLineWeight
	acLnWtByBlock                 =-2         # from enum AcLineWeight
	acLnWtByLayer                 =-1         # from enum AcLineWeight
	acLnWtByLwDefault             =-3         # from enum AcLineWeight
	acPaletteByDrawing            =0          # from enum AcLoadPalette
	acPaletteBySession            =1          # from enum AcLoadPalette
	acAllNormal                   =5          # from enum AcLoftedSurfaceNormalType
	acEndsNormal                  =4          # from enum AcLoftedSurfaceNormalType
	acFirstNormal                 =2          # from enum AcLoftedSurfaceNormalType
	acLastNormal                  =3          # from enum AcLoftedSurfaceNormalType
	acRuled                       =0          # from enum AcLoftedSurfaceNormalType
	acSmooth                      =1          # from enum AcLoftedSurfaceNormalType
	acUseDraftAngles              =6          # from enum AcLoftedSurfaceNormalType
	acHatchLoopTypeDefault        =0          # from enum AcLoopType
	acHatchLoopTypeDerived        =4          # from enum AcLoopType
	acHatchLoopTypeExternal       =1          # from enum AcLoopType
	acHatchLoopTypePolyline       =2          # from enum AcLoopType
	acHatchLoopTypeTextbox        =8          # from enum AcLoopType
	acBlockContent                =1          # from enum AcMLeaderContentType
	acMTextContent                =2          # from enum AcMLeaderContentType
	acNoneContent                 =0          # from enum AcMLeaderContentType
	acInVisibleLeader             =0          # from enum AcMLeaderType
	acSplineLeader                =2          # from enum AcMLeaderType
	acStraightLeader              =1          # from enum AcMLeaderType
	acBottom                      =2          # from enum AcMLineJustification
	acTop                         =0          # from enum AcMLineJustification
	acZero                        =1          # from enum AcMLineJustification
	acEnglish                     =0          # from enum AcMeasurementUnits
	acMetric                      =1          # from enum AcMeasurementUnits
	acMenuFileCompiled            =0          # from enum AcMenuFileType
	acMenuFileSource              =1          # from enum AcMenuFileType
	acBaseMenuGroup               =0          # from enum AcMenuGroupType
	acPartialMenuGroup            =1          # from enum AcMenuGroupType
	acMenuItem                    =0          # from enum AcMenuItemType
	acMenuSeparator               =1          # from enum AcMenuItemType
	acMenuSubMenu                 =2          # from enum AcMenuItemType
	acMergeCellStyleConvertDuplicatesToOverrides=4          # from enum AcMergeCellStyleOption
	acMergeCellStyleCopyDuplicates=1          # from enum AcMergeCellStyleOption
	acMergeCellStyleIgnoreNewStyles=8          # from enum AcMergeCellStyleOption
	acMergeCellStyleNone          =0          # from enum AcMergeCellStyleOption
	acMergeCellStyleOverwriteDuplicates=2          # from enum AcMergeCellStyleOption
	acOPQHighGraphics             =2          # from enum AcOlePlotQuality
	acOPQLowGraphics              =1          # from enum AcOlePlotQuality
	acOPQMonochrome               =0          # from enum AcOlePlotQuality
	acOQGraphics                  =2          # from enum AcOleQuality
	acOQHighPhoto                 =4          # from enum AcOleQuality
	acOQLineArt                   =0          # from enum AcOleQuality
	acOQPhoto                     =3          # from enum AcOleQuality
	acOQText                      =1          # from enum AcOleQuality
	acOTEmbedded                  =2          # from enum AcOleType
	acOTLink                      =1          # from enum AcOleType
	acOTStatic                    =3          # from enum AcOleType
	acOff                         =0          # from enum AcOnOff
	acOn                          =1          # from enum AcOnOff
	acParseOptionNone             =0          # from enum AcParseOption
	acPreserveMtextFormat         =2          # from enum AcParseOption
	acSetDefaultFormat            =1          # from enum AcParseOption
	acHatchPatternTypeCustomDefined=2          # from enum AcPatternType
	acHatchPatternTypePreDefined  =1          # from enum AcPatternType
	acHatchPatternTypeUserDefined =0          # from enum AcPatternType
	acPlotOrientationLandscape    =1          # from enum AcPlotOrientation
	acPlotOrientationPortrait     =0          # from enum AcPlotOrientation
	acInches                      =0          # from enum AcPlotPaperUnits
	acMillimeters                 =1          # from enum AcPlotPaperUnits
	acPixels                      =2          # from enum AcPlotPaperUnits
	acPolicyLegacy                =1          # from enum AcPlotPolicy
	acPolicyNamed                 =0          # from enum AcPlotPolicy
	acPolicyLegacyDefault         =0          # from enum AcPlotPolicyForLegacyDwgs
	acPolicyLegacyLegacy          =2          # from enum AcPlotPolicyForLegacyDwgs
	acPolicyLegacyQuery           =1          # from enum AcPlotPolicyForLegacyDwgs
	acPolicyNewDefault            =0          # from enum AcPlotPolicyForNewDwgs
	acPolicyNewLegacy             =1          # from enum AcPlotPolicyForNewDwgs
	ac0degrees                    =0          # from enum AcPlotRotation
	ac180degrees                  =2          # from enum AcPlotRotation
	ac270degrees                  =3          # from enum AcPlotRotation
	ac90degrees                   =1          # from enum AcPlotRotation
	ac100_1                       =31         # from enum AcPlotScale
	ac10_1                        =30         # from enum AcPlotScale
	ac1_1                         =16         # from enum AcPlotScale
	ac1_10                        =20         # from enum AcPlotScale
	ac1_100                       =26         # from enum AcPlotScale
	ac1_128in_1ft                 =1          # from enum AcPlotScale
	ac1_16                        =21         # from enum AcPlotScale
	ac1_16in_1ft                  =4          # from enum AcPlotScale
	ac1_2                         =17         # from enum AcPlotScale
	ac1_20                        =22         # from enum AcPlotScale
	ac1_2in_1ft                   =10         # from enum AcPlotScale
	ac1_30                        =23         # from enum AcPlotScale
	ac1_32in_1ft                  =3          # from enum AcPlotScale
	ac1_4                         =18         # from enum AcPlotScale
	ac1_40                        =24         # from enum AcPlotScale
	ac1_4in_1ft                   =8          # from enum AcPlotScale
	ac1_50                        =25         # from enum AcPlotScale
	ac1_64in_1ft                  =2          # from enum AcPlotScale
	ac1_8                         =19         # from enum AcPlotScale
	ac1_8in_1ft                   =6          # from enum AcPlotScale
	ac1ft_1ft                     =15         # from enum AcPlotScale
	ac1in_1ft                     =12         # from enum AcPlotScale
	ac2_1                         =27         # from enum AcPlotScale
	ac3_16in_1ft                  =7          # from enum AcPlotScale
	ac3_32in_1ft                  =5          # from enum AcPlotScale
	ac3_4in_1ft                   =11         # from enum AcPlotScale
	ac3_8in_1ft                   =9          # from enum AcPlotScale
	ac3in_1ft                     =13         # from enum AcPlotScale
	ac4_1                         =28         # from enum AcPlotScale
	ac6in_1ft                     =14         # from enum AcPlotScale
	ac8_1                         =29         # from enum AcPlotScale
	acScaleToFit                  =0          # from enum AcPlotScale
	acDisplay                     =0          # from enum AcPlotType
	acExtents                     =1          # from enum AcPlotType
	acLayout                      =5          # from enum AcPlotType
	acLimits                      =2          # from enum AcPlotType
	acView                        =3          # from enum AcPlotType
	acWindow                      =4          # from enum AcPlotType
	acCubicSplinePoly             =3          # from enum AcPolylineType
	acFitCurvePoly                =1          # from enum AcPolylineType
	acQuadSplinePoly              =2          # from enum AcPolylineType
	acSimplePoly                  =0          # from enum AcPolylineType
	acBezierSurfaceMesh           =8          # from enum AcPolymeshType
	acCubicSurfaceMesh            =6          # from enum AcPolymeshType
	acQuadSurfaceMesh             =5          # from enum AcPolymeshType
	acSimpleMesh                  =0          # from enum AcPolymeshType
	acBlockBox                    =3          # from enum AcPredefBlockType
	acBlockCircle                 =2          # from enum AcPredefBlockType
	acBlockHexagon                =4          # from enum AcPredefBlockType
	acBlockImperial               =0          # from enum AcPredefBlockType
	acBlockSlot                   =1          # from enum AcPredefBlockType
	acBlockTriangle               =5          # from enum AcPredefBlockType
	acBlockUserDefined            =6          # from enum AcPredefBlockType
	acFullPreview                 =1          # from enum AcPreviewMode
	acPartialPreview              =0          # from enum AcPreviewMode
	acPrinterAlertOnce            =1          # from enum AcPrinterSpoolAlert
	acPrinterAlwaysAlert          =0          # from enum AcPrinterSpoolAlert
	acPrinterNeverAlert           =3          # from enum AcPrinterSpoolAlert
	acPrinterNeverAlertLogOnce    =2          # from enum AcPrinterSpoolAlert
	acProxyBoundingBox            =2          # from enum AcProxyImage
	acProxyNotShow                =0          # from enum AcProxyImage
	acProxyShow                   =1          # from enum AcProxyImage
	acActiveViewport              =0          # from enum AcRegenType
	acAllViewports                =1          # from enum AcRegenType
	acDegrees000                  =0          # from enum AcRotationAngle
	acDegrees090                  =1          # from enum AcRotationAngle
	acDegrees180                  =2          # from enum AcRotationAngle
	acDegrees270                  =3          # from enum AcRotationAngle
	acDegreesUnknown              =-1         # from enum AcRotationAngle
	acDataRow                     =1          # from enum AcRowType
	acHeaderRow                   =4          # from enum AcRowType
	acTitleRow                    =2          # from enum AcRowType
	acUnknownRow                  =0          # from enum AcRowType
	ac2000_Template               =14         # from enum AcSaveAsType
	ac2000_dwg                    =12         # from enum AcSaveAsType
	ac2000_dxf                    =13         # from enum AcSaveAsType
	ac2004_Template               =26         # from enum AcSaveAsType
	ac2004_dwg                    =24         # from enum AcSaveAsType
	ac2004_dxf                    =25         # from enum AcSaveAsType
	ac2007_Template               =38         # from enum AcSaveAsType
	ac2007_dwg                    =36         # from enum AcSaveAsType
	ac2007_dxf                    =37         # from enum AcSaveAsType
	acNative                      =36         # from enum AcSaveAsType
	acR12_dxf                     =1          # from enum AcSaveAsType
	acR13_dwg                     =4          # from enum AcSaveAsType
	acR13_dxf                     =5          # from enum AcSaveAsType
	acR14_dwg                     =8          # from enum AcSaveAsType
	acR14_dxf                     =9          # from enum AcSaveAsType
	acR15_Template                =14         # from enum AcSaveAsType
	acR15_dwg                     =12         # from enum AcSaveAsType
	acR15_dxf                     =13         # from enum AcSaveAsType
	acR18_Template                =26         # from enum AcSaveAsType
	acR18_dwg                     =24         # from enum AcSaveAsType
	acR18_dxf                     =25         # from enum AcSaveAsType
	acUnknown                     =-1         # from enum AcSaveAsType
	acSectionGenerationDestinationFile=64         # from enum AcSectionGeneration
	acSectionGenerationDestinationNewBlock=16         # from enum AcSectionGeneration
	acSectionGenerationDestinationReplaceBlock=32         # from enum AcSectionGeneration
	acSectionGenerationSourceAllObjects=1          # from enum AcSectionGeneration
	acSectionGenerationSourceSelectedObjects=2          # from enum AcSectionGeneration
	acSectionStateBoundary        =2          # from enum AcSectionState
	acSectionStatePlane           =1          # from enum AcSectionState
	acSectionStateVolume          =4          # from enum AcSectionState
	acSectionSubItemBackLine      =8          # from enum AcSectionSubItem
	acSectionSubItemBackLineBottom=32         # from enum AcSectionSubItem
	acSectionSubItemBackLineTop   =16         # from enum AcSectionSubItem
	acSectionSubItemSectionLine   =1          # from enum AcSectionSubItem
	acSectionSubItemSectionLineBottom=4          # from enum AcSectionSubItem
	acSectionSubItemSectionLineTop=2          # from enum AcSectionSubItem
	acSectionSubItemVerticalLineBottom=128        # from enum AcSectionSubItem
	acSectionSubItemVerticalLineTop=64         # from enum AcSectionSubItem
	acSectionSubItemkNone         =0          # from enum AcSectionSubItem
	acSectionType2dSection        =2          # from enum AcSectionType
	acSectionType3dSection        =4          # from enum AcSectionType
	acSectionTypeLiveSection      =1          # from enum AcSectionType
	acDegrees15                   =1          # from enum AcSegmentAngleType
	acDegrees30                   =2          # from enum AcSegmentAngleType
	acDegrees45                   =3          # from enum AcSegmentAngleType
	acDegrees60                   =4          # from enum AcSegmentAngleType
	acDegrees90                   =6          # from enum AcSegmentAngleType
	acDegreesAny                  =0          # from enum AcSegmentAngleType
	acDegreesHorz                 =12         # from enum AcSegmentAngleType
	acSelectionSetAll             =5          # from enum AcSelect
	acSelectionSetCrossing        =1          # from enum AcSelect
	acSelectionSetCrossingPolygon =7          # from enum AcSelect
	acSelectionSetFence           =2          # from enum AcSelect
	acSelectionSetLast            =4          # from enum AcSelect
	acSelectionSetPrevious        =3          # from enum AcSelect
	acSelectionSetWindow          =0          # from enum AcSelect
	acSelectionSetWindowPolygon   =6          # from enum AcSelect
	acTableSelectCrossing         =2          # from enum AcSelectType
	acTableSelectWindow           =1          # from enum AcSelectType
	acShadePlotAsDisplayed        =0          # from enum AcShadePlot
	acShadePlotHidden             =2          # from enum AcShadePlot
	acShadePlotRendered           =3          # from enum AcShadePlot
	acShadePlotWireframe          =1          # from enum AcShadePlot
	acCastsAndReceivesShadows     =0          # from enum AcShadowDisplayType
	acCastsShadows                =1          # from enum AcShadowDisplayType
	acIgnoreShadows               =3          # from enum AcShadowDisplayType
	acReceivesShadows             =2          # from enum AcShadowDisplayType
	acTableBottomToTop            =1          # from enum AcTableDirection
	acTableTopToBottom            =0          # from enum AcTableDirection
	acTableFlowDownOrUp           =2          # from enum AcTableFlowDirection
	acTableFlowLeft               =4          # from enum AcTableFlowDirection
	acTableFlowRight              =1          # from enum AcTableFlowDirection
	acCellAlign                   =130        # from enum AcTableStyleOverrides
	acCellBackgroundColor         =132        # from enum AcTableStyleOverrides
	acCellBackgroundFillNone      =131        # from enum AcTableStyleOverrides
	acCellBottomGridColor         =138        # from enum AcTableStyleOverrides
	acCellBottomGridLineWeight    =142        # from enum AcTableStyleOverrides
	acCellBottomVisibility        =146        # from enum AcTableStyleOverrides
	acCellContentColor            =133        # from enum AcTableStyleOverrides
	acCellDataType                =148        # from enum AcTableStyleOverrides
	acCellLeftGridColor           =139        # from enum AcTableStyleOverrides
	acCellLeftGridLineWeight      =143        # from enum AcTableStyleOverrides
	acCellLeftVisibility          =147        # from enum AcTableStyleOverrides
	acCellRightGridColor          =137        # from enum AcTableStyleOverrides
	acCellRightGridLineWeight     =141        # from enum AcTableStyleOverrides
	acCellRightVisibility         =145        # from enum AcTableStyleOverrides
	acCellTextHeight              =135        # from enum AcTableStyleOverrides
	acCellTextStyle               =134        # from enum AcTableStyleOverrides
	acCellTopGridColor            =136        # from enum AcTableStyleOverrides
	acCellTopGridLineWeight       =140        # from enum AcTableStyleOverrides
	acCellTopVisibility           =144        # from enum AcTableStyleOverrides
	acDataHorzBottomColor         =54         # from enum AcTableStyleOverrides
	acDataHorzBottomLineWeight    =84         # from enum AcTableStyleOverrides
	acDataHorzBottomVisibility    =114        # from enum AcTableStyleOverrides
	acDataHorzInsideColor         =53         # from enum AcTableStyleOverrides
	acDataHorzInsideLineWeight    =83         # from enum AcTableStyleOverrides
	acDataHorzInsideVisibility    =113        # from enum AcTableStyleOverrides
	acDataHorzTopColor            =52         # from enum AcTableStyleOverrides
	acDataHorzTopLineWeight       =82         # from enum AcTableStyleOverrides
	acDataHorzTopVisibility       =112        # from enum AcTableStyleOverrides
	acDataRowAlignment            =17         # from enum AcTableStyleOverrides
	acDataRowColor                =8          # from enum AcTableStyleOverrides
	acDataRowDataType             =26         # from enum AcTableStyleOverrides
	acDataRowFillColor            =14         # from enum AcTableStyleOverrides
	acDataRowFillNone             =11         # from enum AcTableStyleOverrides
	acDataRowTextHeight           =23         # from enum AcTableStyleOverrides
	acDataRowTextStyle            =20         # from enum AcTableStyleOverrides
	acDataVertInsideColor         =56         # from enum AcTableStyleOverrides
	acDataVertInsideLineWeight    =86         # from enum AcTableStyleOverrides
	acDataVertInsideVisibility    =116        # from enum AcTableStyleOverrides
	acDataVertLeftColor           =55         # from enum AcTableStyleOverrides
	acDataVertLeftLineWeight      =85         # from enum AcTableStyleOverrides
	acDataVertLeftVisibility      =115        # from enum AcTableStyleOverrides
	acDataVertRightColor          =57         # from enum AcTableStyleOverrides
	acDataVertRightLineWeight     =87         # from enum AcTableStyleOverrides
	acDataVertRightVisibility     =117        # from enum AcTableStyleOverrides
	acFlowDirection               =3          # from enum AcTableStyleOverrides
	acHeaderHorzBottomColor       =48         # from enum AcTableStyleOverrides
	acHeaderHorzBottomLineWeight  =78         # from enum AcTableStyleOverrides
	acHeaderHorzBottomVisibility  =108        # from enum AcTableStyleOverrides
	acHeaderHorzInsideColor       =47         # from enum AcTableStyleOverrides
	acHeaderHorzInsideLineWeight  =77         # from enum AcTableStyleOverrides
	acHeaderHorzInsideVisibility  =107        # from enum AcTableStyleOverrides
	acHeaderHorzTopColor          =46         # from enum AcTableStyleOverrides
	acHeaderHorzTopLineWeight     =76         # from enum AcTableStyleOverrides
	acHeaderHorzTopVisibility     =106        # from enum AcTableStyleOverrides
	acHeaderRowAlignment          =16         # from enum AcTableStyleOverrides
	acHeaderRowColor              =7          # from enum AcTableStyleOverrides
	acHeaderRowDataType           =25         # from enum AcTableStyleOverrides
	acHeaderRowFillColor          =13         # from enum AcTableStyleOverrides
	acHeaderRowFillNone           =10         # from enum AcTableStyleOverrides
	acHeaderRowTextHeight         =22         # from enum AcTableStyleOverrides
	acHeaderRowTextStyle          =19         # from enum AcTableStyleOverrides
	acHeaderSuppressed            =2          # from enum AcTableStyleOverrides
	acHeaderVertInsideColor       =50         # from enum AcTableStyleOverrides
	acHeaderVertInsideLineWeight  =80         # from enum AcTableStyleOverrides
	acHeaderVertInsideVisibility  =110        # from enum AcTableStyleOverrides
	acHeaderVertLeftColor         =49         # from enum AcTableStyleOverrides
	acHeaderVertLeftLineWeight    =79         # from enum AcTableStyleOverrides
	acHeaderVertLeftVisibility    =109        # from enum AcTableStyleOverrides
	acHeaderVertRightColor        =51         # from enum AcTableStyleOverrides
	acHeaderVertRightLineWeight   =81         # from enum AcTableStyleOverrides
	acHeaderVertRightVisibility   =111        # from enum AcTableStyleOverrides
	acHorzCellMargin              =4          # from enum AcTableStyleOverrides
	acTitleHorzBottomColor        =42         # from enum AcTableStyleOverrides
	acTitleHorzBottomLineWeight   =72         # from enum AcTableStyleOverrides
	acTitleHorzBottomVisibility   =102        # from enum AcTableStyleOverrides
	acTitleHorzInsideColor        =41         # from enum AcTableStyleOverrides
	acTitleHorzInsideLineWeight   =71         # from enum AcTableStyleOverrides
	acTitleHorzInsideVisibility   =101        # from enum AcTableStyleOverrides
	acTitleHorzTopColor           =40         # from enum AcTableStyleOverrides
	acTitleHorzTopLineWeight      =70         # from enum AcTableStyleOverrides
	acTitleHorzTopVisibility      =100        # from enum AcTableStyleOverrides
	acTitleRowAlignment           =15         # from enum AcTableStyleOverrides
	acTitleRowColor               =6          # from enum AcTableStyleOverrides
	acTitleRowDataType            =24         # from enum AcTableStyleOverrides
	acTitleRowFillColor           =12         # from enum AcTableStyleOverrides
	acTitleRowFillNone            =9          # from enum AcTableStyleOverrides
	acTitleRowTextHeight          =21         # from enum AcTableStyleOverrides
	acTitleRowTextStyle           =18         # from enum AcTableStyleOverrides
	acTitleSuppressed             =1          # from enum AcTableStyleOverrides
	acTitleVertInsideColor        =44         # from enum AcTableStyleOverrides
	acTitleVertInsideLineWeight   =74         # from enum AcTableStyleOverrides
	acTitleVertInsideVisibility   =104        # from enum AcTableStyleOverrides
	acTitleVertLeftColor          =43         # from enum AcTableStyleOverrides
	acTitleVertLeftLineWeight     =73         # from enum AcTableStyleOverrides
	acTitleVertLeftVisibility     =103        # from enum AcTableStyleOverrides
	acTitleVertRightColor         =45         # from enum AcTableStyleOverrides
	acTitleVertRightLineWeight    =75         # from enum AcTableStyleOverrides
	acTitleVertRightVisibility    =105        # from enum AcTableStyleOverrides
	acVertCellMargin              =5          # from enum AcTableStyleOverrides
	acCenterAlignment             =1          # from enum AcTextAlignmentType
	acLeftAlignment               =0          # from enum AcTextAlignmentType
	acRightAlignment              =2          # from enum AcTextAlignmentType
	acAlwaysRightReadingAngle     =2          # from enum AcTextAngleType
	acHorizontalAngle             =1          # from enum AcTextAngleType
	acInsertAngle                 =0          # from enum AcTextAngleType
	acAttachmentAllLine           =8          # from enum AcTextAttachmentType
	acAttachmentBottomLine        =7          # from enum AcTextAttachmentType
	acAttachmentBottomOfBottom    =6          # from enum AcTextAttachmentType
	acAttachmentBottomOfTop       =2          # from enum AcTextAttachmentType
	acAttachmentBottomOfTopLine   =3          # from enum AcTextAttachmentType
	acAttachmentMiddle            =4          # from enum AcTextAttachmentType
	acAttachmentMiddleOfBottom    =5          # from enum AcTextAttachmentType
	acAttachmentMiddleOfTop       =1          # from enum AcTextAttachmentType
	acAttachmentTopOfTop          =0          # from enum AcTextAttachmentType
	acFontBold                    =2          # from enum AcTextFontStyle
	acFontBoldItalic              =3          # from enum AcTextFontStyle
	acFontItalic                  =1          # from enum AcTextFontStyle
	acFontRegular                 =0          # from enum AcTextFontStyle
	acTextFlagBackward            =2          # from enum AcTextGenerationFlag
	acTextFlagUpsideDown          =4          # from enum AcTextGenerationFlag
	acToolbarDockBottom           =1          # from enum AcToolbarDockStatus
	acToolbarDockLeft             =2          # from enum AcToolbarDockStatus
	acToolbarDockRight            =3          # from enum AcToolbarDockStatus
	acToolbarDockTop              =0          # from enum AcToolbarDockStatus
	acToolbarFloating             =4          # from enum AcToolbarDockStatus
	acToolbarButton               =0          # from enum AcToolbarItemType
	acToolbarControl              =2          # from enum AcToolbarItemType
	acToolbarFlyout               =3          # from enum AcToolbarItemType
	acToolbarSeparator            =1          # from enum AcToolbarItemType
	acApplied                     =1          # from enum AcUnderlayLayerOverrideType
	acNoOverrides                 =0          # from enum AcUnderlayLayerOverrideType
	acArchitectural               =4          # from enum AcUnits
	acDecimal                     =2          # from enum AcUnits
	acDefaultUnits                =-1         # from enum AcUnits
	acEngineering                 =3          # from enum AcUnits
	acFractional                  =5          # from enum AcUnits
	acScientific                  =1          # from enum AcUnits
	acBuffer                      =128        # from enum AcValueDataType
	acDate                        =8          # from enum AcValueDataType
	acDouble                      =2          # from enum AcValueDataType
	acGeneral                     =512        # from enum AcValueDataType
	acLong                        =1          # from enum AcValueDataType
	acObjectId                    =64         # from enum AcValueDataType
	acPoint2d                     =16         # from enum AcValueDataType
	acPoint3d                     =32         # from enum AcValueDataType
	acResbuf                      =256        # from enum AcValueDataType
	acString                      =4          # from enum AcValueDataType
	acUnknownDataType             =0          # from enum AcValueDataType
	acUnitAngle                   =2          # from enum AcValueUnitType
	acUnitArea                    =4          # from enum AcValueUnitType
	acUnitDistance                =1          # from enum AcValueUnitType
	acUnitVolume                  =8          # from enum AcValueUnitType
	acUnitless                    =0          # from enum AcValueUnitType
	acVerticalAlignmentBaseline   =0          # from enum AcVerticalAlignment
	acVerticalAlignmentBottom     =1          # from enum AcVerticalAlignment
	acVerticalAlignmentMiddle     =2          # from enum AcVerticalAlignment
	acVerticalAlignmentTop        =3          # from enum AcVerticalAlignment
	acVp1                         =2          # from enum AcViewportScale
	acVp10                        =11         # from enum AcViewportScale
	acVp100                       =101        # from enum AcViewportScale
	acVp100_1                     =17         # from enum AcViewportScale
	acVp10_1                      =16         # from enum AcViewportScale
	acVp11                        =12         # from enum AcViewportScale
	acVp12                        =13         # from enum AcViewportScale
	acVp13                        =14         # from enum AcViewportScale
	acVp14                        =15         # from enum AcViewportScale
	acVp15                        =16         # from enum AcViewportScale
	acVp16                        =17         # from enum AcViewportScale
	acVp17                        =18         # from enum AcViewportScale
	acVp18                        =19         # from enum AcViewportScale
	acVp19                        =20         # from enum AcViewportScale
	acVp1_1                       =2          # from enum AcViewportScale
	acVp1_10                      =6          # from enum AcViewportScale
	acVp1_100                     =12         # from enum AcViewportScale
	acVp1_128in_1ft               =18         # from enum AcViewportScale
	acVp1_16                      =7          # from enum AcViewportScale
	acVp1_16in_1ft                =21         # from enum AcViewportScale
	acVp1_2                       =3          # from enum AcViewportScale
	acVp1_20                      =8          # from enum AcViewportScale
	acVp1_2in_1ft                 =27         # from enum AcViewportScale
	acVp1_30                      =9          # from enum AcViewportScale
	acVp1_32in_1ft                =20         # from enum AcViewportScale
	acVp1_4                       =4          # from enum AcViewportScale
	acVp1_40                      =10         # from enum AcViewportScale
	acVp1_4in_1ft                 =25         # from enum AcViewportScale
	acVp1_50                      =11         # from enum AcViewportScale
	acVp1_64in_1ft                =19         # from enum AcViewportScale
	acVp1_8                       =5          # from enum AcViewportScale
	acVp1_8in_1ft                 =23         # from enum AcViewportScale
	acVp1and1_2in_1ft             =30         # from enum AcViewportScale
	acVp1ft_1ft                   =33         # from enum AcViewportScale
	acVp1in_1ft                   =29         # from enum AcViewportScale
	acVp2                         =3          # from enum AcViewportScale
	acVp20                        =21         # from enum AcViewportScale
	acVp21                        =22         # from enum AcViewportScale
	acVp22                        =23         # from enum AcViewportScale
	acVp23                        =24         # from enum AcViewportScale
	acVp24                        =25         # from enum AcViewportScale
	acVp25                        =26         # from enum AcViewportScale
	acVp26                        =27         # from enum AcViewportScale
	acVp27                        =28         # from enum AcViewportScale
	acVp28                        =29         # from enum AcViewportScale
	acVp29                        =30         # from enum AcViewportScale
	acVp2_1                       =13         # from enum AcViewportScale
	acVp3                         =4          # from enum AcViewportScale
	acVp30                        =31         # from enum AcViewportScale
	acVp31                        =32         # from enum AcViewportScale
	acVp32                        =33         # from enum AcViewportScale
	acVp33                        =34         # from enum AcViewportScale
	acVp34                        =35         # from enum AcViewportScale
	acVp35                        =36         # from enum AcViewportScale
	acVp36                        =37         # from enum AcViewportScale
	acVp37                        =38         # from enum AcViewportScale
	acVp38                        =39         # from enum AcViewportScale
	acVp39                        =40         # from enum AcViewportScale
	acVp3_16in_1ft                =24         # from enum AcViewportScale
	acVp3_32in_1ft                =22         # from enum AcViewportScale
	acVp3_4in_1ft                 =28         # from enum AcViewportScale
	acVp3_8in_1ft                 =26         # from enum AcViewportScale
	acVp3in_1ft                   =31         # from enum AcViewportScale
	acVp4                         =5          # from enum AcViewportScale
	acVp40                        =41         # from enum AcViewportScale
	acVp41                        =42         # from enum AcViewportScale
	acVp42                        =43         # from enum AcViewportScale
	acVp43                        =44         # from enum AcViewportScale
	acVp44                        =45         # from enum AcViewportScale
	acVp45                        =46         # from enum AcViewportScale
	acVp46                        =47         # from enum AcViewportScale
	acVp47                        =48         # from enum AcViewportScale
	acVp48                        =49         # from enum AcViewportScale
	acVp49                        =50         # from enum AcViewportScale
	acVp4_1                       =14         # from enum AcViewportScale
	acVp5                         =6          # from enum AcViewportScale
	acVp50                        =51         # from enum AcViewportScale
	acVp51                        =52         # from enum AcViewportScale
	acVp52                        =53         # from enum AcViewportScale
	acVp53                        =54         # from enum AcViewportScale
	acVp54                        =55         # from enum AcViewportScale
	acVp55                        =56         # from enum AcViewportScale
	acVp56                        =57         # from enum AcViewportScale
	acVp57                        =58         # from enum AcViewportScale
	acVp58                        =59         # from enum AcViewportScale
	acVp59                        =60         # from enum AcViewportScale
	acVp6                         =7          # from enum AcViewportScale
	acVp60                        =61         # from enum AcViewportScale
	acVp61                        =62         # from enum AcViewportScale
	acVp62                        =63         # from enum AcViewportScale
	acVp63                        =64         # from enum AcViewportScale
	acVp64                        =65         # from enum AcViewportScale
	acVp65                        =66         # from enum AcViewportScale
	acVp66                        =67         # from enum AcViewportScale
	acVp67                        =68         # from enum AcViewportScale
	acVp68                        =69         # from enum AcViewportScale
	acVp69                        =70         # from enum AcViewportScale
	acVp6in_1ft                   =32         # from enum AcViewportScale
	acVp7                         =8          # from enum AcViewportScale
	acVp70                        =71         # from enum AcViewportScale
	acVp71                        =72         # from enum AcViewportScale
	acVp72                        =73         # from enum AcViewportScale
	acVp73                        =74         # from enum AcViewportScale
	acVp74                        =75         # from enum AcViewportScale
	acVp75                        =76         # from enum AcViewportScale
	acVp76                        =77         # from enum AcViewportScale
	acVp77                        =78         # from enum AcViewportScale
	acVp78                        =79         # from enum AcViewportScale
	acVp79                        =80         # from enum AcViewportScale
	acVp8                         =9          # from enum AcViewportScale
	acVp80                        =81         # from enum AcViewportScale
	acVp81                        =82         # from enum AcViewportScale
	acVp82                        =83         # from enum AcViewportScale
	acVp83                        =84         # from enum AcViewportScale
	acVp84                        =85         # from enum AcViewportScale
	acVp85                        =86         # from enum AcViewportScale
	acVp86                        =87         # from enum AcViewportScale
	acVp87                        =88         # from enum AcViewportScale
	acVp88                        =89         # from enum AcViewportScale
	acVp89                        =90         # from enum AcViewportScale
	acVp8_1                       =15         # from enum AcViewportScale
	acVp9                         =10         # from enum AcViewportScale
	acVp90                        =91         # from enum AcViewportScale
	acVp91                        =92         # from enum AcViewportScale
	acVp92                        =93         # from enum AcViewportScale
	acVp93                        =94         # from enum AcViewportScale
	acVp94                        =95         # from enum AcViewportScale
	acVp95                        =96         # from enum AcViewportScale
	acVp96                        =97         # from enum AcViewportScale
	acVp97                        =98         # from enum AcViewportScale
	acVp98                        =99         # from enum AcViewportScale
	acVp99                        =100        # from enum AcViewportScale
	acVpCustomScale               =1          # from enum AcViewportScale
	acVpScaleToFit                =0          # from enum AcViewportScale
	acViewport2Horizontal         =0          # from enum AcViewportSplitType
	acViewport2Vertical           =1          # from enum AcViewportSplitType
	acViewport3Above              =6          # from enum AcViewportSplitType
	acViewport3Below              =7          # from enum AcViewportSplitType
	acViewport3Horizontal         =4          # from enum AcViewportSplitType
	acViewport3Left               =2          # from enum AcViewportSplitType
	acViewport3Right              =3          # from enum AcViewportSplitType
	acViewport3Vertical           =5          # from enum AcViewportSplitType
	acViewport4                   =8          # from enum AcViewportSplitType
	acMax                         =3          # from enum AcWindowState
	acMin                         =2          # from enum AcWindowState
	acNorm                        =1          # from enum AcWindowState
	acDemandLoadDisabled          =0          # from enum AcXRefDemandLoad
	acDemandLoadEnabled           =1          # from enum AcXRefDemandLoad
	acDemandLoadEnabledWithCopy   =2          # from enum AcXRefDemandLoad
	acZoomScaledAbsolute          =0          # from enum AcZoomScaleType
	acZoomScaledRelative          =1          # from enum AcZoomScaleType
	acZoomScaledRelativePSpace    =2          # from enum AcZoomScaleType
	ACADSECURITYPARAMS_ALGID_RC4  =26625      # from enum AcadSecurityParamsConstants
	ACADSECURITYPARAMS_ADD_TIMESTAMP=32         # from enum AcadSecurityParamsType
	ACADSECURITYPARAMS_ENCRYPT_DATA=1          # from enum AcadSecurityParamsType
	ACADSECURITYPARAMS_ENCRYPT_PROPS=2          # from enum AcadSecurityParamsType
	ACADSECURITYPARAMS_SIGN_DATA  =16         # from enum AcadSecurityParamsType

from win32com.client import DispatchBaseClass
class IAcad3DFace(DispatchBaseClass):
	CLSID = IID('{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
	coclass_clsid = IID('{8AA16DFC-DFC6-4B51-8FA2-A5D812BE33BF}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(8, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetInvisibleEdge(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetInvisibleEdge(self, Index=defaultNamedNotOptArg, State=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (11, 1)),Index
			, State)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VisibilityEdge1": (2, 2, (11, 0), (), "VisibilityEdge1", None),
		"VisibilityEdge2": (3, 2, (11, 0), (), "VisibilityEdge2", None),
		"VisibilityEdge3": (4, 2, (11, 0), (), "VisibilityEdge3", None),
		"VisibilityEdge4": (5, 2, (11, 0), (), "VisibilityEdge4", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VisibilityEdge1": ((2, LCID, 4, 0),()),
		"VisibilityEdge2": ((3, LCID, 4, 0),()),
		"VisibilityEdge3": ((4, LCID, 4, 0),()),
		"VisibilityEdge4": ((5, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcad3DPolyline(DispatchBaseClass):
	CLSID = IID('{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
	coclass_clsid = IID('{46C56738-39C6-4240-8B9B-008CCD769A84}')

	def AppendVertex(self, vertex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vertex
			)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(3, 1, (12, 0), (), 'Explode', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Closed": (6, 2, (11, 0), (), "Closed", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Length": (7, 2, (5, 0), (), "Length", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Type": (5, 2, (3, 0), (), "Type", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Closed": ((6, LCID, 4, 0),()),
		"Coordinates": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Type": ((5, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcad3DSolid(DispatchBaseClass):
	CLSID = IID('{DF94C736-F717-4469-A886-B9902747352D}')
	coclass_clsid = IID('{70DBCAE8-8C2B-450C-9E1D-43E4686C6512}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Boolean(self, Operation=defaultNamedNotOptArg, SolidObject=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((3, 1), (9, 1)),Operation
			, SolidObject)

	# Result is of type IAcad3DSolid
	def CheckInterference(self, Object=defaultNamedNotOptArg, CreateInterferenceSolid=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((9, 1), (11, 1)),Object
			, CreateInterferenceSolid)
		if ret is not None:
			ret = Dispatch(ret, 'CheckInterference', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# Result is of type IAcadRegion
	def SectionSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'SectionSolid', '{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	# Result is of type IAcad3DSolid
	def SliceSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Negative=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),Point1
			, Point2, point3, Negative)
		if ret is not None:
			ret = Dispatch(ret, 'SliceSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Centroid": (1, 2, (12, 0), (), "Centroid", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"History": (14, 2, (11, 0), (), "History", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"MomentOfInertia": (2, 2, (12, 0), (), "MomentOfInertia", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Position": (13, 2, (12, 0), (), "Position", None),
		"PrincipalDirections": (3, 2, (12, 0), (), "PrincipalDirections", None),
		"PrincipalMoments": (4, 2, (12, 0), (), "PrincipalMoments", None),
		"ProductOfInertia": (5, 2, (12, 0), (), "ProductOfInertia", None),
		"RadiiOfGyration": (6, 2, (12, 0), (), "RadiiOfGyration", None),
		"ShowHistory": (15, 2, (11, 0), (), "ShowHistory", None),
		"SolidType": (12, 2, (8, 0), (), "SolidType", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Volume": (7, 2, (5, 0), (), "Volume", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"History": ((14, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Position": ((13, LCID, 4, 0),()),
		"ShowHistory": ((15, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadAcCmColor(DispatchBaseClass):
	CLSID = IID('{7382F647-BC48-456E-B877-D18F58BE6878}')
	coclass_clsid = IID('{C8C18F89-794D-466B-8B97-95634D9890EF}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def SetColorBookColor(self, BookName=defaultNamedNotOptArg, ColorName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (8, 1)),BookName
			, ColorName)

	def SetNames(self, ColorName=defaultNamedNotOptArg, BookName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 1), (8, 1)),ColorName
			, BookName)

	def SetRGB(self, Red=defaultNamedNotOptArg, Green=defaultNamedNotOptArg, Blue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),Red
			, Green, Blue)

	_prop_map_get_ = {
		"Blue": (7, 2, (3, 0), (), "Blue", None),
		"BookName": (3, 2, (8, 0), (), "BookName", None),
		"ColorIndex": (17, 2, (3, 0), (), "ColorIndex", None),
		"ColorMethod": (16, 2, (3, 0), (), "ColorMethod", None),
		"ColorName": (2, 2, (8, 0), (), "ColorName", None),
		"EntityColor": (1, 2, (3, 0), (), "EntityColor", None),
		"Green": (8, 2, (3, 0), (), "Green", None),
		"Red": (6, 2, (3, 0), (), "Red", None),
	}
	_prop_map_put_ = {
		"ColorIndex": ((17, LCID, 4, 0),()),
		"ColorMethod": ((16, LCID, 4, 0),()),
		"EntityColor": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadApplication(DispatchBaseClass):
	CLSID = IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')
	coclass_clsid = IID('{6AB55F46-2523-4701-A912-B226F46252BA}')

	def Eval(self, Expression=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((8, 1),),Expression
			)

	# Result is of type IAcadState
	def GetAcadState(self):
		ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetAcadState', '{144790A6-6C66-49EC-96B0-DC148D06DB98}')
		return ret

	def GetInterfaceObject(self, ProgID=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), ((8, 1),),ProgID
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetInterfaceObject', None)
		return ret

	def ListArx(self):
		return self._ApplyTypes_(18, 1, (12, 0), (), 'ListArx', None,)

	def LoadArx(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def LoadDVB(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def Quit(self):
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def RunMacro(self, MacroPath=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((8, 1),),MacroPath
			)

	# The method StatusId is actually a property, but must be used as a method to correctly pass the arguments
	def StatusId(self, VportObj=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(17, LCID, 2, (11, 0), ((9, 1),),VportObj
			)

	def UnloadArx(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def UnloadDVB(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

	def Zoom(self, Type=defaultNamedNotOptArg, vParams=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (16396, 1)),Type
			, vParams)

	def ZoomAll(self):
		return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), (),)

	def ZoomCenter(self, Center=defaultNamedNotOptArg, Magnify=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((12, 1), (5, 1)),Center
			, Magnify)

	def ZoomExtents(self):
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

	def ZoomPickWindow(self):
		return self._oleobj_.InvokeTypes(41, LCID, 1, (24, 0), (),)

	def ZoomPrevious(self):
		return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), (),)

	def ZoomScaled(self, scale=defaultNamedNotOptArg, ScaleType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), ((5, 1), (3, 1)),scale
			, ScaleType)

	def ZoomWindow(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
			, UpperRight)

	_prop_map_get_ = {
		# Method 'ActiveDocument' returns object of type 'IAcadDocument'
		"ActiveDocument": (5, 2, (9, 0), (), "ActiveDocument", '{0EB66A59-8FF4-410B-B697-8813116B2C5F}'),
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (4, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Caption": (3, 2, (8, 0), (), "Caption", None),
		# Method 'Documents' returns object of type 'IAcadDocuments'
		"Documents": (32, 2, (9, 0), (), "Documents", '{CDF18C05-94F9-4902-856D-137AC54CEADF}'),
		"FullName": (6, 2, (8, 0), (), "FullName", None),
		"HWND": (44, 2, (3, 0), (), "HWND", None),
		"Height": (7, 2, (3, 0), (), "Height", None),
		"LocaleId": (10, 2, (3, 0), (), "LocaleId", None),
		# Method 'MenuBar' returns object of type 'IAcadMenuBar'
		"MenuBar": (29, 2, (9, 0), (), "MenuBar", '{BD7E485E-3CD1-4DD5-9959-EB76B03024A5}'),
		# Method 'MenuGroups' returns object of type 'IAcadMenuGroups'
		"MenuGroups": (28, 2, (9, 0), (), "MenuGroups", '{38931362-4638-4A2F-8201-E7B2AA52CA37}'),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Path": (9, 2, (8, 0), (), "Path", None),
		# Method 'Preferences' returns object of type 'IAcadPreferences'
		"Preferences": (14, 2, (9, 0), (), "Preferences", '{5A6047B5-55E8-456B-A5D1-D42C5DC90B96}'),
		"VBE": (27, 2, (9, 0), (), "VBE", None),
		"Version": (12, 2, (8, 0), (), "Version", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (13, 2, (3, 0), (), "Width", None),
		"WindowLeft": (8, 2, (3, 0), (), "WindowLeft", None),
		"WindowState": (34, 2, (3, 0), (), "WindowState", None),
		"WindowTop": (11, 2, (3, 0), (), "WindowTop", None),
	}
	_prop_map_put_ = {
		"ActiveDocument": ((5, LCID, 4, 0),()),
		"Height": ((7, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((13, LCID, 4, 0),()),
		"WindowLeft": ((8, LCID, 4, 0),()),
		"WindowState": ((34, LCID, 4, 0),()),
		"WindowTop": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadArc(DispatchBaseClass):
	CLSID = IID('{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
	coclass_clsid = IID('{EF01D98A-747B-4522-AD70-991B90855DBF}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(10, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArcLength": (8, 2, (5, 0), (), "ArcLength", None),
		"Area": (11, 2, (5, 0), (), "Area", None),
		"Center": (2, 2, (12, 0), (), "Center", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EndAngle": (6, 2, (5, 0), (), "EndAngle", None),
		"EndPoint": (3, 2, (12, 0), (), "EndPoint", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (12, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Radius": (4, 2, (5, 0), (), "Radius", None),
		"StartAngle": (5, 2, (5, 0), (), "StartAngle", None),
		"StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
		"Thickness": (9, 2, (5, 0), (), "Thickness", None),
		"TotalAngle": (7, 2, (5, 0), (), "TotalAngle", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Center": ((2, LCID, 4, 0),()),
		"EndAngle": ((6, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((12, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Radius": ((4, LCID, 4, 0),()),
		"StartAngle": ((5, LCID, 4, 0),()),
		"Thickness": ((9, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadAttribute(DispatchBaseClass):
	CLSID = IID('{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
	coclass_clsid = IID('{E29F6C45-6927-4508-8F3F-34105FD3FC5F}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Alignment": (6, 2, (3, 0), (), "Alignment", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Backward": (20, 2, (11, 0), (), "Backward", None),
		"Constant": (22, 2, (11, 0), (), "Constant", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FieldLength": (1, 2, (3, 0), (), "FieldLength", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (9, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (7, 2, (3, 0), (), "HorizontalAlignment", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (14, 2, (12, 0), (), "InsertionPoint", None),
		"Invisible": (21, 2, (11, 0), (), "Invisible", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Mode": (18, 2, (3, 0), (), "Mode", None),
		"Normal": (15, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (12, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Preset": (24, 2, (11, 0), (), "Preset", None),
		"PromptString": (3, 2, (8, 0), (), "PromptString", None),
		"Rotation": (10, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (11, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (5, 2, (8, 0), (), "StyleName", None),
		"TagString": (2, 2, (8, 0), (), "TagString", None),
		"TextAlignmentPoint": (13, 2, (12, 0), (), "TextAlignmentPoint", None),
		"TextGenerationFlag": (16, 2, (3, 0), (), "TextGenerationFlag", None),
		"TextString": (4, 2, (8, 0), (), "TextString", None),
		"Thickness": (17, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UpsideDown": (19, 2, (11, 0), (), "UpsideDown", None),
		"Verify": (23, 2, (11, 0), (), "Verify", None),
		"VerticalAlignment": (8, 2, (3, 0), (), "VerticalAlignment", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Alignment": ((6, LCID, 4, 0),()),
		"Backward": ((20, LCID, 4, 0),()),
		"Constant": ((22, LCID, 4, 0),()),
		"FieldLength": ((1, LCID, 4, 0),()),
		"Height": ((9, LCID, 4, 0),()),
		"HorizontalAlignment": ((7, LCID, 4, 0),()),
		"InsertionPoint": ((14, LCID, 4, 0),()),
		"Invisible": ((21, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"LockPosition": ((25, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Mode": ((18, LCID, 4, 0),()),
		"Normal": ((15, LCID, 4, 0),()),
		"ObliqueAngle": ((12, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Preset": ((24, LCID, 4, 0),()),
		"PromptString": ((3, LCID, 4, 0),()),
		"Rotation": ((10, LCID, 4, 0),()),
		"ScaleFactor": ((11, LCID, 4, 0),()),
		"StyleName": ((5, LCID, 4, 0),()),
		"TagString": ((2, LCID, 4, 0),()),
		"TextAlignmentPoint": ((13, LCID, 4, 0),()),
		"TextGenerationFlag": ((16, LCID, 4, 0),()),
		"TextString": ((4, LCID, 4, 0),()),
		"Thickness": ((17, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UpsideDown": ((19, LCID, 4, 0),()),
		"Verify": ((23, LCID, 4, 0),()),
		"VerticalAlignment": ((8, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadAttribute2(DispatchBaseClass):
	CLSID = IID('{078BE9CC-452F-4ED8-81CF-017C7C6A3D14}')
	coclass_clsid = IID('{E29F6C45-6927-4508-8F3F-34105FD3FC5F}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	def UpdateMTextAttribute(self):
		return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Alignment": (6, 2, (3, 0), (), "Alignment", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Backward": (20, 2, (11, 0), (), "Backward", None),
		"Constant": (22, 2, (11, 0), (), "Constant", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FieldLength": (1, 2, (3, 0), (), "FieldLength", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (9, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (7, 2, (3, 0), (), "HorizontalAlignment", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (14, 2, (12, 0), (), "InsertionPoint", None),
		"Invisible": (21, 2, (11, 0), (), "Invisible", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
		"MTextAttribute": (26, 2, (11, 0), (), "MTextAttribute", None),
		"MTextAttributeContent": (27, 2, (8, 0), (), "MTextAttributeContent", None),
		"MTextBoundaryWidth": (29, 2, (5, 0), (), "MTextBoundaryWidth", None),
		"MTextDrawingDirection": (30, 2, (3, 0), (), "MTextDrawingDirection", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Mode": (18, 2, (3, 0), (), "Mode", None),
		"Normal": (15, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (12, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Preset": (24, 2, (11, 0), (), "Preset", None),
		"PromptString": (3, 2, (8, 0), (), "PromptString", None),
		"Rotation": (10, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (11, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (5, 2, (8, 0), (), "StyleName", None),
		"TagString": (2, 2, (8, 0), (), "TagString", None),
		"TextAlignmentPoint": (13, 2, (12, 0), (), "TextAlignmentPoint", None),
		"TextGenerationFlag": (16, 2, (3, 0), (), "TextGenerationFlag", None),
		"TextString": (4, 2, (8, 0), (), "TextString", None),
		"Thickness": (17, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UpsideDown": (19, 2, (11, 0), (), "UpsideDown", None),
		"Verify": (23, 2, (11, 0), (), "Verify", None),
		"VerticalAlignment": (8, 2, (3, 0), (), "VerticalAlignment", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Alignment": ((6, LCID, 4, 0),()),
		"Backward": ((20, LCID, 4, 0),()),
		"Constant": ((22, LCID, 4, 0),()),
		"FieldLength": ((1, LCID, 4, 0),()),
		"Height": ((9, LCID, 4, 0),()),
		"HorizontalAlignment": ((7, LCID, 4, 0),()),
		"InsertionPoint": ((14, LCID, 4, 0),()),
		"Invisible": ((21, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"LockPosition": ((25, LCID, 4, 0),()),
		"MTextAttribute": ((26, LCID, 4, 0),()),
		"MTextAttributeContent": ((27, LCID, 4, 0),()),
		"MTextBoundaryWidth": ((29, LCID, 4, 0),()),
		"MTextDrawingDirection": ((30, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Mode": ((18, LCID, 4, 0),()),
		"Normal": ((15, LCID, 4, 0),()),
		"ObliqueAngle": ((12, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Preset": ((24, LCID, 4, 0),()),
		"PromptString": ((3, LCID, 4, 0),()),
		"Rotation": ((10, LCID, 4, 0),()),
		"ScaleFactor": ((11, LCID, 4, 0),()),
		"StyleName": ((5, LCID, 4, 0),()),
		"TagString": ((2, LCID, 4, 0),()),
		"TextAlignmentPoint": ((13, LCID, 4, 0),()),
		"TextGenerationFlag": ((16, LCID, 4, 0),()),
		"TextString": ((4, LCID, 4, 0),()),
		"Thickness": ((17, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UpsideDown": ((19, LCID, 4, 0),()),
		"Verify": ((23, LCID, 4, 0),()),
		"VerticalAlignment": ((8, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadAttributeReference(DispatchBaseClass):
	CLSID = IID('{A9930D00-3154-46E9-9101-E5E963F0D1FF}')
	coclass_clsid = IID('{40770568-0D5E-49D4-BE47-BC47A4F0B0A4}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Alignment": (16, 2, (3, 0), (), "Alignment", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Backward": (18, 2, (11, 0), (), "Backward", None),
		"Constant": (20, 2, (11, 0), (), "Constant", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FieldLength": (15, 2, (3, 0), (), "FieldLength", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (1, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (2, 2, (3, 0), (), "HorizontalAlignment", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (3, 2, (12, 0), (), "InsertionPoint", None),
		"Invisible": (19, 2, (11, 0), (), "Invisible", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (4, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (5, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (6, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (7, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (8, 2, (8, 0), (), "StyleName", None),
		"TagString": (9, 2, (8, 0), (), "TagString", None),
		"TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
		"TextGenerationFlag": (11, 2, (3, 0), (), "TextGenerationFlag", None),
		"TextString": (12, 2, (8, 0), (), "TextString", None),
		"Thickness": (13, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UpsideDown": (17, 2, (11, 0), (), "UpsideDown", None),
		"VerticalAlignment": (14, 2, (3, 0), (), "VerticalAlignment", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Alignment": ((16, LCID, 4, 0),()),
		"Backward": ((18, LCID, 4, 0),()),
		"FieldLength": ((15, LCID, 4, 0),()),
		"Height": ((1, LCID, 4, 0),()),
		"HorizontalAlignment": ((2, LCID, 4, 0),()),
		"InsertionPoint": ((3, LCID, 4, 0),()),
		"Invisible": ((19, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((4, LCID, 4, 0),()),
		"ObliqueAngle": ((5, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((6, LCID, 4, 0),()),
		"ScaleFactor": ((7, LCID, 4, 0),()),
		"StyleName": ((8, LCID, 4, 0),()),
		"TagString": ((9, LCID, 4, 0),()),
		"TextAlignmentPoint": ((10, LCID, 4, 0),()),
		"TextGenerationFlag": ((11, LCID, 4, 0),()),
		"TextString": ((12, LCID, 4, 0),()),
		"Thickness": ((13, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UpsideDown": ((17, LCID, 4, 0),()),
		"VerticalAlignment": ((14, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadAttributeReference2(DispatchBaseClass):
	CLSID = IID('{04533CAF-7880-41D7-B4C7-0EEB9735DF22}')
	coclass_clsid = IID('{40770568-0D5E-49D4-BE47-BC47A4F0B0A4}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	def UpdateMTextAttribute(self):
		return self._oleobj_.InvokeTypes(29, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Alignment": (16, 2, (3, 0), (), "Alignment", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Backward": (18, 2, (11, 0), (), "Backward", None),
		"Constant": (20, 2, (11, 0), (), "Constant", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FieldLength": (15, 2, (3, 0), (), "FieldLength", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (1, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (2, 2, (3, 0), (), "HorizontalAlignment", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (3, 2, (12, 0), (), "InsertionPoint", None),
		"Invisible": (19, 2, (11, 0), (), "Invisible", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
		"MTextAttribute": (26, 2, (11, 0), (), "MTextAttribute", None),
		"MTextAttributeContent": (27, 2, (8, 0), (), "MTextAttributeContent", None),
		"MTextBoundaryWidth": (30, 2, (5, 0), (), "MTextBoundaryWidth", None),
		"MTextDrawingDirection": (31, 2, (3, 0), (), "MTextDrawingDirection", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (4, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (5, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (6, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (7, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (8, 2, (8, 0), (), "StyleName", None),
		"TagString": (9, 2, (8, 0), (), "TagString", None),
		"TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
		"TextGenerationFlag": (11, 2, (3, 0), (), "TextGenerationFlag", None),
		"TextString": (12, 2, (8, 0), (), "TextString", None),
		"Thickness": (13, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UpsideDown": (17, 2, (11, 0), (), "UpsideDown", None),
		"VerticalAlignment": (14, 2, (3, 0), (), "VerticalAlignment", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Alignment": ((16, LCID, 4, 0),()),
		"Backward": ((18, LCID, 4, 0),()),
		"FieldLength": ((15, LCID, 4, 0),()),
		"Height": ((1, LCID, 4, 0),()),
		"HorizontalAlignment": ((2, LCID, 4, 0),()),
		"InsertionPoint": ((3, LCID, 4, 0),()),
		"Invisible": ((19, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"MTextAttribute": ((26, LCID, 4, 0),()),
		"MTextAttributeContent": ((27, LCID, 4, 0),()),
		"MTextBoundaryWidth": ((30, LCID, 4, 0),()),
		"MTextDrawingDirection": ((31, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((4, LCID, 4, 0),()),
		"ObliqueAngle": ((5, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((6, LCID, 4, 0),()),
		"ScaleFactor": ((7, LCID, 4, 0),()),
		"StyleName": ((8, LCID, 4, 0),()),
		"TagString": ((9, LCID, 4, 0),()),
		"TextAlignmentPoint": ((10, LCID, 4, 0),()),
		"TextGenerationFlag": ((11, LCID, 4, 0),()),
		"TextString": ((12, LCID, 4, 0),()),
		"Thickness": ((13, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UpsideDown": ((17, LCID, 4, 0),()),
		"VerticalAlignment": ((14, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadBlock(DispatchBaseClass):
	CLSID = IID('{165531B8-67A4-46D8-AC99-F8150FA7A412}')
	coclass_clsid = IID('{20E47D5B-529A-45BD-8E77-BF1A3064A008}')

	# Result is of type IAcad3DFace
	def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DFace', '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
		return ret

	# Result is of type IAcadPolygonMesh
	def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
			, N, PointsMatrix)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DMesh', '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
		return ret

	# Result is of type IAcad3DPolyline
	def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DPoly', '{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
		return ret

	# Result is of type IAcadArc
	def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Radius, StartAngle, EndAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddArc', '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
		return ret

	# Result is of type IAcadAttribute
	def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
			, Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
			, Mode, Prompt, InsertionPoint, Tag, Value
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddAttribute', '{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
		return ret

	# Result is of type IAcad3DSolid
	def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddBox', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadCircle
	def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddCircle', '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
		return ret

	# Result is of type IAcad3DSolid
	def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, BaseRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomObject', None)
		return ret

	# Result is of type IAcad3DSolid
	def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Radius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadDim3PointAngular
	def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDim3PointAngular', '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
		return ret

	# Result is of type IAcadDimAligned
	def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
			, ExtLine2Point, TextPosition)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAligned', '{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
		return ret

	# Result is of type IAcadDimAngular
	def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAngular', '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
		return ret

	# Result is of type IAcadDimArcLength
	def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
			, FirstEndPoint, SecondEndPoint, ArcPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimArc', '{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
		return ret

	# Result is of type IAcadDimDiametric
	def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
			, FarChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimDiametric', '{CE984151-66ED-4500-B99D-85ACCEC10820}')
		return ret

	# Result is of type IAcadDimOrdinate
	def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
			, LeaderEndPoint, UseXAxis)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimOrdinate', '{8BBE360E-DC9A-4640-8597-C54166887E54}')
		return ret

	# Result is of type IAcadDimRadial
	def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadial', '{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
		return ret

	# Result is of type IAcadDimRadialLarge
	def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
			, JogAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, OverrideCenter, JogPoint, JogAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadialLarge', '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
		return ret

	# Result is of type IAcadDimRotated
	def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
			, ExtLine2Point, DimLineLocation, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRotated', '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
		return ret

	# Result is of type IAcadEllipse
	def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, MajorAxis, RadiusRatio)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipse', '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
			, Height, TaperAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
			, Path)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadHatch
	def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
			, PatternName, Associativity, HatchObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddHatch', '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
		return ret

	# Result is of type IAcadLeader
	def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
			, Annotation, Type)
		if ret is not None:
			ret = Dispatch(ret, 'AddLeader', '{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
		return ret

	# Result is of type IAcadLWPolyline
	def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLightWeightPolyline', '{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
		return ret

	# Result is of type IAcadLine
	def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
		return ret

	# Result is of type IAcadMInsertBlock
	def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
			, ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMInsertBlock', '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
		return ret

	# Result is of type IAcadMLine
	def AddMLine(self, VertexList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMLine', '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
		return ret

	# Result is of type IAcadMText
	def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
			, Width, Text)
		if ret is not None:
			ret = Dispatch(ret, 'AddMText', '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
		return ret

	# Result is of type IAcadPoint
	def AddPoint(self, Point=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
		return ret

	# Result is of type IAcadPolyfaceMesh
	def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
			, FaceList)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyfaceMesh', '{60A35C35-64B5-4751-99E7-259879896519}')
		return ret

	# Result is of type IAcadPolyline
	def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{A09B5650-3A79-41F7-A459-1817D6F1797C}')
		return ret

	# Result is of type IAcadRasterImage
	def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRaster', '{EE3833FA-927E-4272-A918-8B487E445600}')
		return ret

	# Result is of type IAcadRay
	def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddRay', '{BE71C3CD-270F-4A01-86F4-91694B267C19}')
		return ret

	def AddRegion(self, ObjectList=defaultNamedNotOptArg):
		return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
			)

	# Result is of type IAcad3DSolid
	def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
			, AxisPoint, AxisDir, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRevolvedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSection
	def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
			, ToPoint, planeVector)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	# Result is of type IAcadShape
	def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
		return ret

	# Result is of type IAcadSolid
	def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'AddSolid', '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
		return ret

	# Result is of type IAcad3DSolid
	def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddSphere', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSpline
	def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
			, StartTangent, EndTangent)
		if ret is not None:
			ret = Dispatch(ret, 'AddSpline', '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
		return ret

	# Result is of type IAcadTable
	def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
			, ColWidth=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
			, NumRows, NumColumns, RowHeight, ColWidth)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{187D4409-BABE-43D8-8379-2AF11136DA16}')
		return ret

	# Result is of type IAcadText
	def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
			, InsertionPoint, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddText', '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
		return ret

	# Result is of type IAcadTolerance
	def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
			, InsertionPoint, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'AddTolerance', '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
		return ret

	# Result is of type IAcad3DSolid
	def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, TorusRadius, TubeRadius)
		if ret is not None:
			ret = Dispatch(ret, 'AddTorus', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadTrace
	def AddTrace(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTrace', '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
		return ret

	# Result is of type IAcad3DSolid
	def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddWedge', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadXline
	def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddXline', '{96FC51A1-B610-406F-990D-0652F53758A9}')
		return ret

	# Result is of type IAcadExternalReference
	def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
			, Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
			, Name, InsertionPoint, Xscale, Yscale, Zscale
			, Rotation, bOverlay, Password)
		if ret is not None:
			ret = Dispatch(ret, 'AttachExternalReference', '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
		return ret

	def Bind(self, bPrefixName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Detach(self):
		return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlockReference
	def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'InsertBlock', '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
		return ret

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def Reload(self):
		return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
		"Comments": (1597, 2, (8, 0), (), "Comments", None),
		"Count": (1536, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Explodable": (1599, 2, (11, 0), (), "Explodable", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
		"IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
		"IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
		# Method 'Layout' returns object of type 'IAcadLayout'
		"Layout": (1583, 2, (9, 0), (), "Layout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		"Name": (1537, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (1538, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (1596, 2, (8, 0), (), "Path", None),
		"Units": (1598, 2, (3, 0), (), "Units", None),
		# Method 'XRefDatabase' returns object of type 'IAcadDatabase'
		"XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
	}
	_prop_map_put_ = {
		"BlockScaling": ((1600, LCID, 4, 0),()),
		"Comments": ((1597, LCID, 4, 0),()),
		"Explodable": ((1599, LCID, 4, 0),()),
		"Name": ((1537, LCID, 4, 0),()),
		"Origin": ((1538, LCID, 4, 0),()),
		"Path": ((1596, LCID, 4, 0),()),
		"Units": ((1598, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadBlock2(DispatchBaseClass):
	CLSID = IID('{57D32359-5C1C-4783-B334-BC371687BDA8}')
	coclass_clsid = IID('{20E47D5B-529A-45BD-8E77-BF1A3064A008}')

	# Result is of type IAcad3DFace
	def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DFace', '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
		return ret

	# Result is of type IAcadPolygonMesh
	def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
			, N, PointsMatrix)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DMesh', '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
		return ret

	# Result is of type IAcad3DPolyline
	def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DPoly', '{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
		return ret

	# Result is of type IAcadArc
	def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Radius, StartAngle, EndAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddArc', '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
		return ret

	# Result is of type IAcadAttribute
	def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
			, Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
			, Mode, Prompt, InsertionPoint, Tag, Value
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddAttribute', '{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
		return ret

	# Result is of type IAcad3DSolid
	def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddBox', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadCircle
	def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddCircle', '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
		return ret

	# Result is of type IAcad3DSolid
	def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, BaseRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomObject', None)
		return ret

	# Result is of type IAcad3DSolid
	def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Radius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadDim3PointAngular
	def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDim3PointAngular', '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
		return ret

	# Result is of type IAcadDimAligned
	def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
			, ExtLine2Point, TextPosition)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAligned', '{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
		return ret

	# Result is of type IAcadDimAngular
	def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAngular', '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
		return ret

	# Result is of type IAcadDimArcLength
	def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
			, FirstEndPoint, SecondEndPoint, ArcPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimArc', '{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
		return ret

	# Result is of type IAcadDimDiametric
	def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
			, FarChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimDiametric', '{CE984151-66ED-4500-B99D-85ACCEC10820}')
		return ret

	# Result is of type IAcadDimOrdinate
	def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
			, LeaderEndPoint, UseXAxis)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimOrdinate', '{8BBE360E-DC9A-4640-8597-C54166887E54}')
		return ret

	# Result is of type IAcadDimRadial
	def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadial', '{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
		return ret

	# Result is of type IAcadDimRadialLarge
	def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
			, JogAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, OverrideCenter, JogPoint, JogAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadialLarge', '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
		return ret

	# Result is of type IAcadDimRotated
	def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
			, ExtLine2Point, DimLineLocation, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRotated', '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
		return ret

	# Result is of type IAcadEllipse
	def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, MajorAxis, RadiusRatio)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipse', '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
			, Height, TaperAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
			, Path)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadHatch
	def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
			, PatternName, Associativity, HatchObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddHatch', '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
		return ret

	# Result is of type IAcadLeader
	def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
			, Annotation, Type)
		if ret is not None:
			ret = Dispatch(ret, 'AddLeader', '{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
		return ret

	# Result is of type IAcadLWPolyline
	def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLightWeightPolyline', '{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
		return ret

	# Result is of type IAcadLine
	def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
		return ret

	# Result is of type IAcadMInsertBlock
	def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
			, ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMInsertBlock', '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
		return ret

	# Result is of type IAcadMLeader
	def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
		return self._ApplyTypes_(1, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{B125D293-E039-4D19-B975-1C4A8841C5AB}',PointsArray
			, leaderLineIndex)

	# Result is of type IAcadMLine
	def AddMLine(self, VertexList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMLine', '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
		return ret

	# Result is of type IAcadMText
	def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
			, Width, Text)
		if ret is not None:
			ret = Dispatch(ret, 'AddMText', '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
		return ret

	# Result is of type IAcadPoint
	def AddPoint(self, Point=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
		return ret

	# Result is of type IAcadPolyfaceMesh
	def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
			, FaceList)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyfaceMesh', '{60A35C35-64B5-4751-99E7-259879896519}')
		return ret

	# Result is of type IAcadPolyline
	def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{A09B5650-3A79-41F7-A459-1817D6F1797C}')
		return ret

	# Result is of type IAcadRasterImage
	def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRaster', '{EE3833FA-927E-4272-A918-8B487E445600}')
		return ret

	# Result is of type IAcadRay
	def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddRay', '{BE71C3CD-270F-4A01-86F4-91694B267C19}')
		return ret

	def AddRegion(self, ObjectList=defaultNamedNotOptArg):
		return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
			)

	# Result is of type IAcad3DSolid
	def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
			, AxisPoint, AxisDir, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRevolvedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSection
	def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
			, ToPoint, planeVector)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	# Result is of type IAcadShape
	def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
		return ret

	# Result is of type IAcadSolid
	def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'AddSolid', '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
		return ret

	# Result is of type IAcad3DSolid
	def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddSphere', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSpline
	def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
			, StartTangent, EndTangent)
		if ret is not None:
			ret = Dispatch(ret, 'AddSpline', '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
		return ret

	# Result is of type IAcadTable
	def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
			, ColWidth=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
			, NumRows, NumColumns, RowHeight, ColWidth)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{187D4409-BABE-43D8-8379-2AF11136DA16}')
		return ret

	# Result is of type IAcadText
	def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
			, InsertionPoint, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddText', '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
		return ret

	# Result is of type IAcadTolerance
	def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
			, InsertionPoint, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'AddTolerance', '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
		return ret

	# Result is of type IAcad3DSolid
	def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, TorusRadius, TubeRadius)
		if ret is not None:
			ret = Dispatch(ret, 'AddTorus', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadTrace
	def AddTrace(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTrace', '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
		return ret

	# Result is of type IAcad3DSolid
	def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddWedge', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadXline
	def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddXline', '{96FC51A1-B610-406F-990D-0652F53758A9}')
		return ret

	# Result is of type IAcadExternalReference
	def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
			, Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
			, Name, InsertionPoint, Xscale, Yscale, Zscale
			, Rotation, bOverlay, Password)
		if ret is not None:
			ret = Dispatch(ret, 'AttachExternalReference', '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
		return ret

	def Bind(self, bPrefixName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Detach(self):
		return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlockReference
	def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'InsertBlock', '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
		return ret

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def Reload(self):
		return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
		"Comments": (1597, 2, (8, 0), (), "Comments", None),
		"Count": (1536, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Explodable": (1599, 2, (11, 0), (), "Explodable", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
		"IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
		"IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
		# Method 'Layout' returns object of type 'IAcadLayout'
		"Layout": (1583, 2, (9, 0), (), "Layout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		"Name": (1537, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (1538, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (1596, 2, (8, 0), (), "Path", None),
		"Units": (1598, 2, (3, 0), (), "Units", None),
		# Method 'XRefDatabase' returns object of type 'IAcadDatabase'
		"XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
	}
	_prop_map_put_ = {
		"BlockScaling": ((1600, LCID, 4, 0),()),
		"Comments": ((1597, LCID, 4, 0),()),
		"Explodable": ((1599, LCID, 4, 0),()),
		"Name": ((1537, LCID, 4, 0),()),
		"Origin": ((1538, LCID, 4, 0),()),
		"Path": ((1596, LCID, 4, 0),()),
		"Units": ((1598, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadBlockReference(DispatchBaseClass):
	CLSID = IID('{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
	coclass_clsid = IID('{1E8A29BA-827D-4031-A4A3-AE7999B402F6}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ConvertToAnonymousBlock(self):
		return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

	def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

	def GetAttributes(self):
		return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetConstantAttributes(self):
		return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

	def GetDynamicBlockProperties(self):
		return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def ResetBlock(self):
		return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
		"InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
		"InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
		"IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Normal": (3, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (4, 2, (5, 0), (), "Rotation", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
		"XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
		"YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
		"YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
		"ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
		"ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"InsertionPoint": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Normal": ((3, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((4, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
		"XScaleFactor": ((5, LCID, 4, 0),()),
		"YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
		"YScaleFactor": ((6, LCID, 4, 0),()),
		"ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
		"ZScaleFactor": ((7, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadBlocks(DispatchBaseClass):
	CLSID = IID('{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}')
	coclass_clsid = IID('{64B99FDB-1D85-447F-98C7-569DBDA723DB}')

	# Result is of type IAcadBlock
	def Add(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (8, 1)),InsertionPoint
			, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{165531B8-67A4-46D8-AC99-F8150FA7A412}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlock
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{165531B8-67A4-46D8-AC99-F8150FA7A412}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{165531B8-67A4-46D8-AC99-F8150FA7A412}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{165531B8-67A4-46D8-AC99-F8150FA7A412}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadCircle(DispatchBaseClass):
	CLSID = IID('{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
	coclass_clsid = IID('{F78DCF7C-043D-45FC-9D21-676FC307BA3F}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(8, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (5, 2, (5, 0), (), "Area", None),
		"Center": (1, 2, (12, 0), (), "Center", None),
		"Circumference": (4, 2, (5, 0), (), "Circumference", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Diameter": (3, 2, (5, 0), (), "Diameter", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (6, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Radius": (2, 2, (5, 0), (), "Radius", None),
		"Thickness": (7, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Area": ((5, LCID, 4, 0),()),
		"Center": ((1, LCID, 4, 0),()),
		"Circumference": ((4, LCID, 4, 0),()),
		"Diameter": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((6, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Radius": ((2, LCID, 4, 0),()),
		"Thickness": ((7, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDatabase(DispatchBaseClass):
	CLSID = IID('{A9625062-DC43-4D1C-9FC6-8512123BB91B}')
	coclass_clsid = IID('{B53CEF4B-1A13-49DE-BBC5-A7100FB2F38C}')

	def CopyObjects(self, Objects=defaultNamedNotOptArg, Owner=defaultNamedOptArg, IdPairs=defaultNamedOptArg):
		return self._ApplyTypes_(4, 1, (12, 0), ((12, 1), (12, 17), (16396, 19)), 'CopyObjects', None,Objects
			, Owner, IdPairs)

	def HandleToObject(self, Handle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),Handle
			)
		if ret is not None:
			ret = Dispatch(ret, 'HandleToObject', None)
		return ret

	def ObjectIdToObject(self, ObjectID=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((3, 1),),ObjectID
			)
		if ret is not None:
			ret = Dispatch(ret, 'ObjectIdToObject', None)
		return ret

	_prop_map_get_ = {
		# Method 'Blocks' returns object of type 'IAcadBlocks'
		"Blocks": (3, 2, (9, 0), (), "Blocks", '{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}'),
		# Method 'Dictionaries' returns object of type 'IAcadDictionaries'
		"Dictionaries": (9, 2, (9, 0), (), "Dictionaries", '{803BC722-4C89-4866-98B1-E4453C5F6287}'),
		# Method 'DimStyles' returns object of type 'IAcadDimStyles'
		"DimStyles": (6, 2, (9, 0), (), "DimStyles", '{C62F448E-753C-4DDF-B30D-873D0DAF9735}'),
		"ElevationModelSpace": (15, 2, (5, 0), (), "ElevationModelSpace", None),
		"ElevationPaperSpace": (16, 2, (5, 0), (), "ElevationPaperSpace", None),
		# Method 'FileDependencies' returns object of type 'IAcadFileDependencies'
		"FileDependencies": (70, 2, (9, 0), (), "FileDependencies", '{65156CBF-69F4-403C-AC21-682F839048DD}'),
		# Method 'Groups' returns object of type 'IAcadGroups'
		"Groups": (5, 2, (9, 0), (), "Groups", '{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}'),
		# Method 'Layers' returns object of type 'IAcadLayers'
		"Layers": (7, 2, (9, 0), (), "Layers", '{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}'),
		# Method 'Layouts' returns object of type 'IAcadLayouts'
		"Layouts": (20, 2, (9, 0), (), "Layouts", '{1636A05E-7F68-4CEE-B93B-8F56BA299293}'),
		"Limits": (17, 2, (12, 0), (), "Limits", None),
		# Method 'Linetypes' returns object of type 'IAcadLineTypes'
		"Linetypes": (8, 2, (9, 0), (), "Linetypes", '{943058F5-B25A-470F-84E6-C6364FEC2635}'),
		# Method 'Materials' returns object of type 'IAcadMaterials'
		"Materials": (73, 2, (9, 0), (), "Materials", '{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}'),
		# Method 'ModelSpace' returns object of type 'IAcadModelSpace'
		"ModelSpace": (1, 2, (9, 0), (), "ModelSpace", '{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}'),
		# Method 'PaperSpace' returns object of type 'IAcadPaperSpace'
		"PaperSpace": (2, 2, (9, 0), (), "PaperSpace", '{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}'),
		# Method 'PlotConfigurations' returns object of type 'IAcadPlotConfigurations'
		"PlotConfigurations": (21, 2, (9, 0), (), "PlotConfigurations", '{AD2543CB-31A8-4DDD-9162-845E11D7F72F}'),
		# Method 'Preferences' returns object of type 'IAcadDatabasePreferences'
		"Preferences": (22, 2, (9, 0), (), "Preferences", '{96435877-2FB6-4842-BD4F-7334ADF4B707}'),
		# Method 'RegisteredApplications' returns object of type 'IAcadRegisteredApplications'
		"RegisteredApplications": (10, 2, (9, 0), (), "RegisteredApplications", '{5A832756-01AF-4D2F-89A6-50E0121AFD1A}'),
		# Method 'SectionManager' returns object of type 'IAcadSectionManager'
		"SectionManager": (72, 2, (9, 0), (), "SectionManager", '{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}'),
		# Method 'SummaryInfo' returns object of type 'IAcadSummaryInfo'
		"SummaryInfo": (71, 2, (9, 0), (), "SummaryInfo", '{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}'),
		# Method 'TextStyles' returns object of type 'IAcadTextStyles'
		"TextStyles": (11, 2, (9, 0), (), "TextStyles", '{617040CF-4E9D-4CC3-9814-AD69E0AB9751}'),
		# Method 'UserCoordinateSystems' returns object of type 'IAcadUCSs'
		"UserCoordinateSystems": (12, 2, (9, 0), (), "UserCoordinateSystems", '{BF4812B8-408D-4E07-B595-ACB8336B6A93}'),
		# Method 'Viewports' returns object of type 'IAcadViewports'
		"Viewports": (14, 2, (9, 0), (), "Viewports", '{98558EDE-E8B4-4870-9D78-15BE6370E1C1}'),
		# Method 'Views' returns object of type 'IAcadViews'
		"Views": (13, 2, (9, 0), (), "Views", '{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}'),
	}
	_prop_map_put_ = {
		"ElevationModelSpace": ((15, LCID, 4, 0),()),
		"ElevationPaperSpace": ((16, LCID, 4, 0),()),
		"Limits": ((17, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDatabasePreferences(DispatchBaseClass):
	CLSID = IID('{96435877-2FB6-4842-BD4F-7334ADF4B707}')
	coclass_clsid = IID('{1D6DFD6A-9E16-435A-9327-6FFEC6BA372F}')

	_prop_map_get_ = {
		"AllowLongSymbolNames": (9, 2, (11, 0), (), "AllowLongSymbolNames", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ContourLinesPerSurface": (19, 2, (3, 0), (), "ContourLinesPerSurface", None),
		"DisplaySilhouette": (21, 2, (11, 0), (), "DisplaySilhouette", None),
		"LineWeightDisplay": (27, 2, (11, 0), (), "LineWeightDisplay", None),
		"Lineweight": (26, 2, (3, 0), (), "Lineweight", None),
		"MaxActiveViewports": (22, 2, (3, 0), (), "MaxActiveViewports", None),
		"OLELaunch": (8, 2, (11, 0), (), "OLELaunch", None),
		"ObjectSortByPSOutput": (16, 2, (11, 0), (), "ObjectSortByPSOutput", None),
		"ObjectSortByPlotting": (14, 2, (11, 0), (), "ObjectSortByPlotting", None),
		"ObjectSortByRedraws": (12, 2, (11, 0), (), "ObjectSortByRedraws", None),
		"ObjectSortByRegens": (13, 2, (11, 0), (), "ObjectSortByRegens", None),
		"ObjectSortBySelection": (10, 2, (11, 0), (), "ObjectSortBySelection", None),
		"ObjectSortBySnap": (11, 2, (11, 0), (), "ObjectSortBySnap", None),
		"RenderSmoothness": (23, 2, (5, 0), (), "RenderSmoothness", None),
		"SegmentPerPolyline": (24, 2, (3, 0), (), "SegmentPerPolyline", None),
		"SolidFill": (2, 2, (11, 0), (), "SolidFill", None),
		"TextFrameDisplay": (25, 2, (11, 0), (), "TextFrameDisplay", None),
		"XRefEdit": (4, 2, (11, 0), (), "XRefEdit", None),
		"XRefLayerVisibility": (5, 2, (11, 0), (), "XRefLayerVisibility", None),
	}
	_prop_map_put_ = {
		"AllowLongSymbolNames": ((9, LCID, 4, 0),()),
		"ContourLinesPerSurface": ((19, LCID, 4, 0),()),
		"DisplaySilhouette": ((21, LCID, 4, 0),()),
		"LineWeightDisplay": ((27, LCID, 4, 0),()),
		"Lineweight": ((26, LCID, 4, 0),()),
		"MaxActiveViewports": ((22, LCID, 4, 0),()),
		"OLELaunch": ((8, LCID, 4, 0),()),
		"ObjectSortByPSOutput": ((16, LCID, 4, 0),()),
		"ObjectSortByPlotting": ((14, LCID, 4, 0),()),
		"ObjectSortByRedraws": ((12, LCID, 4, 0),()),
		"ObjectSortByRegens": ((13, LCID, 4, 0),()),
		"ObjectSortBySelection": ((10, LCID, 4, 0),()),
		"ObjectSortBySnap": ((11, LCID, 4, 0),()),
		"RenderSmoothness": ((23, LCID, 4, 0),()),
		"SegmentPerPolyline": ((24, LCID, 4, 0),()),
		"SolidFill": ((2, LCID, 4, 0),()),
		"TextFrameDisplay": ((25, LCID, 4, 0),()),
		"XRefEdit": ((4, LCID, 4, 0),()),
		"XRefLayerVisibility": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDictionaries(DispatchBaseClass):
	CLSID = IID('{803BC722-4C89-4866-98B1-E4453C5F6287}')
	coclass_clsid = IID('{89F0FC31-3B1D-494B-A75B-6BD4FA527B8A}')

	# Result is of type IAcadDictionary
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadObject
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadDictionary(DispatchBaseClass):
	CLSID = IID('{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
	coclass_clsid = IID('{E70DE962-842A-4488-9481-1D0FD72A020F}')

	# Result is of type IAcadObject
	def AddObject(self, Keyword=defaultNamedNotOptArg, ObjectName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (8, 1)),Keyword
			, ObjectName)
		if ret is not None:
			ret = Dispatch(ret, 'AddObject', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	# Result is of type IAcadXRecord
	def AddXRecord(self, Keyword=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((8, 1),),Keyword
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddXRecord', '{BD45EE03-5243-4466-813C-95E33F562665}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetName(self, Object=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(4, LCID, 1, (8, 0), ((9, 1),),Object
			)

	# Result is of type IAcadObject
	def GetObject(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetObject', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadObject
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	# Result is of type IAcadObject
	def Remove(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Remove', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	def Rename(self, OldName=defaultNamedNotOptArg, NewName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (8, 1)),OldName
			, NewName)

	def Replace(self, OldName=defaultNamedNotOptArg, pObj=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1), (9, 1)),OldName
			, pObj)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"Name": ((2, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{EF942C4F-A848-4192-B7C2-94C680C264A1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadDim3PointAngular(DispatchBaseClass):
	CLSID = IID('{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
	coclass_clsid = IID('{BC71DEA1-D6FB-48B8-AB06-D151C81BBCDD}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AngleFormat": (41, 2, (3, 0), (), "AngleFormat", None),
		"AngleVertex": (45, 2, (12, 0), (), "AngleVertex", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
		"Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
		"Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
		"Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
		"DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
		"DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"ExtLine1EndPoint": (38, 2, (12, 0), (), "ExtLine1EndPoint", None),
		"ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
		"ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
		"ExtLine2EndPoint": (40, 2, (12, 0), (), "ExtLine2EndPoint", None),
		"ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
		"ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
		"ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
		"ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
		"ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
		"ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
		"ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
		"ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrecision": (36, 2, (3, 0), (), "TextPrecision", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AngleFormat": ((41, LCID, 4, 0),()),
		"AngleVertex": ((45, LCID, 4, 0),()),
		"Arrowhead1Block": ((65, LCID, 4, 0),()),
		"Arrowhead1Type": ((62, LCID, 4, 0),()),
		"Arrowhead2Block": ((66, LCID, 4, 0),()),
		"Arrowhead2Type": ((63, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLine1Suppress": ((25, LCID, 4, 0),()),
		"DimLine2Suppress": ((26, LCID, 4, 0),()),
		"DimLineInside": ((29, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"ExtLine1EndPoint": ((38, LCID, 4, 0),()),
		"ExtLine1Linetype": ((81, LCID, 4, 0),()),
		"ExtLine1Suppress": ((27, LCID, 4, 0),()),
		"ExtLine2EndPoint": ((40, LCID, 4, 0),()),
		"ExtLine2Linetype": ((82, LCID, 4, 0),()),
		"ExtLine2Suppress": ((28, LCID, 4, 0),()),
		"ExtLineFixedLen": ((84, LCID, 4, 0),()),
		"ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
		"ExtensionLineColor": ((14, LCID, 4, 0),()),
		"ExtensionLineExtend": ((17, LCID, 4, 0),()),
		"ExtensionLineOffset": ((35, LCID, 4, 0),()),
		"ExtensionLineWeight": ((23, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"HorizontalTextPosition": ((20, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrecision": ((36, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimAligned(DispatchBaseClass):
	CLSID = IID('{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
	coclass_clsid = IID('{BF4CC07E-E9BB-40D6-873F-855B211033B9}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
		"Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
		"Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
		"Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
		"DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
		"DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
		"ExtLine1Point": (1, 2, (12, 0), (), "ExtLine1Point", None),
		"ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
		"ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
		"ExtLine2Point": (2, 2, (12, 0), (), "ExtLine2Point", None),
		"ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
		"ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
		"ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
		"ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
		"ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
		"ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
		"ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"Arrowhead1Block": ((65, LCID, 4, 0),()),
		"Arrowhead1Type": ((62, LCID, 4, 0),()),
		"Arrowhead2Block": ((66, LCID, 4, 0),()),
		"Arrowhead2Type": ((63, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLine1Suppress": ((25, LCID, 4, 0),()),
		"DimLine2Suppress": ((26, LCID, 4, 0),()),
		"DimLineInside": ((29, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineExtend": ((16, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"ExtLine1Linetype": ((81, LCID, 4, 0),()),
		"ExtLine1Point": ((1, LCID, 4, 0),()),
		"ExtLine1Suppress": ((27, LCID, 4, 0),()),
		"ExtLine2Linetype": ((82, LCID, 4, 0),()),
		"ExtLine2Point": ((2, LCID, 4, 0),()),
		"ExtLine2Suppress": ((28, LCID, 4, 0),()),
		"ExtLineFixedLen": ((84, LCID, 4, 0),()),
		"ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
		"ExtensionLineColor": ((14, LCID, 4, 0),()),
		"ExtensionLineExtend": ((17, LCID, 4, 0),()),
		"ExtensionLineOffset": ((35, LCID, 4, 0),()),
		"ExtensionLineWeight": ((23, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"HorizontalTextPosition": ((20, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimAngular(DispatchBaseClass):
	CLSID = IID('{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
	coclass_clsid = IID('{750AEC19-2E4C-4ED9-9B9F-F9CAFCD060F3}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AngleFormat": (41, 2, (3, 0), (), "AngleFormat", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
		"Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
		"Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
		"Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
		"DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
		"DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"ExtLine1EndPoint": (38, 2, (12, 0), (), "ExtLine1EndPoint", None),
		"ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
		"ExtLine1StartPoint": (37, 2, (12, 0), (), "ExtLine1StartPoint", None),
		"ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
		"ExtLine2EndPoint": (40, 2, (12, 0), (), "ExtLine2EndPoint", None),
		"ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
		"ExtLine2StartPoint": (39, 2, (12, 0), (), "ExtLine2StartPoint", None),
		"ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
		"ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
		"ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
		"ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
		"ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
		"ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
		"ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrecision": (36, 2, (3, 0), (), "TextPrecision", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AngleFormat": ((41, LCID, 4, 0),()),
		"Arrowhead1Block": ((65, LCID, 4, 0),()),
		"Arrowhead1Type": ((62, LCID, 4, 0),()),
		"Arrowhead2Block": ((66, LCID, 4, 0),()),
		"Arrowhead2Type": ((63, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLine1Suppress": ((25, LCID, 4, 0),()),
		"DimLine2Suppress": ((26, LCID, 4, 0),()),
		"DimLineInside": ((29, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"ExtLine1EndPoint": ((38, LCID, 4, 0),()),
		"ExtLine1Linetype": ((81, LCID, 4, 0),()),
		"ExtLine1StartPoint": ((37, LCID, 4, 0),()),
		"ExtLine1Suppress": ((27, LCID, 4, 0),()),
		"ExtLine2EndPoint": ((40, LCID, 4, 0),()),
		"ExtLine2Linetype": ((82, LCID, 4, 0),()),
		"ExtLine2StartPoint": ((39, LCID, 4, 0),()),
		"ExtLine2Suppress": ((28, LCID, 4, 0),()),
		"ExtLineFixedLen": ((84, LCID, 4, 0),()),
		"ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
		"ExtensionLineColor": ((14, LCID, 4, 0),()),
		"ExtensionLineExtend": ((17, LCID, 4, 0),()),
		"ExtensionLineOffset": ((35, LCID, 4, 0),()),
		"ExtensionLineWeight": ((23, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"HorizontalTextPosition": ((20, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrecision": ((36, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimArcLength(DispatchBaseClass):
	CLSID = IID('{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
	coclass_clsid = IID('{ABBE3F83-D585-4A50-9B69-198B0F566F2E}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArcEndParam": (76, 2, (5, 0), (), "ArcEndParam", None),
		"ArcPoint": (68, 2, (12, 0), (), "ArcPoint", None),
		"ArcStartParam": (75, 2, (5, 0), (), "ArcStartParam", None),
		"Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
		"Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
		"Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
		"Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		"CenterPoint": (71, 2, (12, 0), (), "CenterPoint", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
		"DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
		"DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
		"ExtLine1Point": (69, 2, (12, 0), (), "ExtLine1Point", None),
		"ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
		"ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
		"ExtLine2Point": (70, 2, (12, 0), (), "ExtLine2Point", None),
		"ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
		"ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
		"ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
		"ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
		"ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
		"ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
		"ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HasLeader": (77, 2, (11, 0), (), "HasLeader", None),
		"HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"IsPartial": (74, 2, (11, 0), (), "IsPartial", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Leader1Point": (72, 2, (12, 0), (), "Leader1Point", None),
		"Leader2Point": (73, 2, (12, 0), (), "Leader2Point", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"SymbolPosition": (67, 2, (3, 0), (), "SymbolPosition", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"ArcEndParam": ((76, LCID, 4, 0),()),
		"ArcPoint": ((68, LCID, 4, 0),()),
		"ArcStartParam": ((75, LCID, 4, 0),()),
		"Arrowhead1Block": ((65, LCID, 4, 0),()),
		"Arrowhead1Type": ((62, LCID, 4, 0),()),
		"Arrowhead2Block": ((66, LCID, 4, 0),()),
		"Arrowhead2Type": ((63, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"CenterPoint": ((71, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLine1Suppress": ((25, LCID, 4, 0),()),
		"DimLine2Suppress": ((26, LCID, 4, 0),()),
		"DimLineInside": ((29, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineExtend": ((16, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"ExtLine1Linetype": ((81, LCID, 4, 0),()),
		"ExtLine1Point": ((69, LCID, 4, 0),()),
		"ExtLine1Suppress": ((27, LCID, 4, 0),()),
		"ExtLine2Linetype": ((82, LCID, 4, 0),()),
		"ExtLine2Point": ((70, LCID, 4, 0),()),
		"ExtLine2Suppress": ((28, LCID, 4, 0),()),
		"ExtLineFixedLen": ((84, LCID, 4, 0),()),
		"ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
		"ExtensionLineColor": ((14, LCID, 4, 0),()),
		"ExtensionLineExtend": ((17, LCID, 4, 0),()),
		"ExtensionLineOffset": ((35, LCID, 4, 0),()),
		"ExtensionLineWeight": ((23, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"HasLeader": ((77, LCID, 4, 0),()),
		"HorizontalTextPosition": ((20, LCID, 4, 0),()),
		"IsPartial": ((74, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Leader1Point": ((72, LCID, 4, 0),()),
		"Leader2Point": ((73, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"SymbolPosition": ((67, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimDiametric(DispatchBaseClass):
	CLSID = IID('{CE984151-66ED-4500-B99D-85ACCEC10820}')
	coclass_clsid = IID('{85452F88-5071-492E-B850-2E3C586DCBD8}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
		"Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
		"Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
		"Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		"CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
		"CenterType": (43, 2, (3, 0), (), "CenterType", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
		"DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"Arrowhead1Block": ((65, LCID, 4, 0),()),
		"Arrowhead1Type": ((62, LCID, 4, 0),()),
		"Arrowhead2Block": ((66, LCID, 4, 0),()),
		"Arrowhead2Type": ((63, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"CenterMarkSize": ((44, LCID, 4, 0),()),
		"CenterType": ((43, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLine1Suppress": ((25, LCID, 4, 0),()),
		"DimLine2Suppress": ((26, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LeaderLength": ((42, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimOrdinate(DispatchBaseClass):
	CLSID = IID('{8BBE360E-DC9A-4640-8597-C54166887E54}')
	coclass_clsid = IID('{44A52280-AE56-490D-890C-89FB7279ED6B}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
		"ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
		"ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
		"ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
		"ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"ExtLineFixedLen": ((84, LCID, 4, 0),()),
		"ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
		"ExtensionLineColor": ((14, LCID, 4, 0),()),
		"ExtensionLineOffset": ((35, LCID, 4, 0),()),
		"ExtensionLineWeight": ((23, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimRadial(DispatchBaseClass):
	CLSID = IID('{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
	coclass_clsid = IID('{2C74F89E-7421-46B4-BA54-F86F1BD9F237}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArrowheadBlock": (66, 2, (8, 0), (), "ArrowheadBlock", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		"ArrowheadType": (63, 2, (3, 0), (), "ArrowheadType", None),
		"CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
		"CenterType": (43, 2, (3, 0), (), "CenterType", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLineSuppress": (26, 2, (11, 0), (), "DimLineSuppress", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"ArrowheadBlock": ((66, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"ArrowheadType": ((63, LCID, 4, 0),()),
		"CenterMarkSize": ((44, LCID, 4, 0),()),
		"CenterType": ((43, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLineSuppress": ((26, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LeaderLength": ((42, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimRadialLarge(DispatchBaseClass):
	CLSID = IID('{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
	coclass_clsid = IID('{D86B6C47-11F2-4D95-B635-EA575F0892FC}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArrowheadBlock": (66, 2, (8, 0), (), "ArrowheadBlock", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		"ArrowheadType": (63, 2, (3, 0), (), "ArrowheadType", None),
		"Center": (71, 2, (12, 0), (), "Center", None),
		"CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
		"CenterType": (43, 2, (3, 0), (), "CenterType", None),
		"ChordPoint": (72, 2, (12, 0), (), "ChordPoint", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLineSuppress": (26, 2, (11, 0), (), "DimLineSuppress", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"JogAngle": (70, 2, (5, 0), (), "JogAngle", None),
		"JogLocation": (69, 2, (12, 0), (), "JogLocation", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OverrideCenter": (68, 2, (12, 0), (), "OverrideCenter", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"ArrowheadBlock": ((66, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"ArrowheadType": ((63, LCID, 4, 0),()),
		"Center": ((71, LCID, 4, 0),()),
		"CenterMarkSize": ((44, LCID, 4, 0),()),
		"CenterType": ((43, LCID, 4, 0),()),
		"ChordPoint": ((72, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLineSuppress": ((26, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"JogAngle": ((70, LCID, 4, 0),()),
		"JogLocation": ((69, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"OverrideCenter": ((68, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimRotated(DispatchBaseClass):
	CLSID = IID('{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
	coclass_clsid = IID('{BBF6A206-CB04-479D-96AE-349E1E83319A}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
		"AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
		"AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
		"AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
		"AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
		"AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
		"AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
		"AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
		"AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
		"AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
		"AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
		"AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
		"AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
		"AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
		"AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
		"AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
		"Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
		"Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
		"Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
		"ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
		"DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
		"DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
		"DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
		"DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
		"ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
		"ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
		"ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
		"ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
		"ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
		"ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
		"ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
		"ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
		"ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
		"Fit": (18, 2, (3, 0), (), "Fit", None),
		"ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
		"FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Measurement": (64, 2, (5, 0), (), "Measurement", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
		"SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextInside": (31, 2, (11, 0), (), "TextInside", None),
		"TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
		"ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AltRoundDistance": ((6, LCID, 4, 0),()),
		"AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
		"AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
		"AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
		"AltSuppressZeroInches": ((51, LCID, 4, 0),()),
		"AltTextPrefix": ((11, LCID, 4, 0),()),
		"AltTextSuffix": ((12, LCID, 4, 0),()),
		"AltTolerancePrecision": ((7, LCID, 4, 0),()),
		"AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
		"AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
		"AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
		"AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
		"AltUnits": ((3, LCID, 4, 0),()),
		"AltUnitsFormat": ((9, LCID, 4, 0),()),
		"AltUnitsPrecision": ((4, LCID, 4, 0),()),
		"AltUnitsScale": ((5, LCID, 4, 0),()),
		"Arrowhead1Block": ((65, LCID, 4, 0),()),
		"Arrowhead1Type": ((62, LCID, 4, 0),()),
		"Arrowhead2Block": ((66, LCID, 4, 0),()),
		"Arrowhead2Type": ((63, LCID, 4, 0),()),
		"ArrowheadSize": ((61, LCID, 4, 0),()),
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"DimLine1Suppress": ((25, LCID, 4, 0),()),
		"DimLine2Suppress": ((26, LCID, 4, 0),()),
		"DimLineInside": ((29, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineExtend": ((16, LCID, 4, 0),()),
		"DimensionLineWeight": ((60, LCID, 4, 0),()),
		"DimensionLinetype": ((80, LCID, 4, 0),()),
		"ExtLine1Linetype": ((81, LCID, 4, 0),()),
		"ExtLine1Suppress": ((27, LCID, 4, 0),()),
		"ExtLine2Linetype": ((82, LCID, 4, 0),()),
		"ExtLine2Suppress": ((28, LCID, 4, 0),()),
		"ExtLineFixedLen": ((84, LCID, 4, 0),()),
		"ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
		"ExtensionLineColor": ((14, LCID, 4, 0),()),
		"ExtensionLineExtend": ((17, LCID, 4, 0),()),
		"ExtensionLineOffset": ((35, LCID, 4, 0),()),
		"ExtensionLineWeight": ((23, LCID, 4, 0),()),
		"Fit": ((18, LCID, 4, 0),()),
		"ForceLineInside": ((32, LCID, 4, 0),()),
		"FractionFormat": ((19, LCID, 4, 0),()),
		"HorizontalTextPosition": ((20, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LinearScaleFactor": ((21, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"RoundDistance": ((24, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"SuppressZeroFeet": ((56, LCID, 4, 0),()),
		"SuppressZeroInches": ((57, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextInside": ((31, LCID, 4, 0),()),
		"TextInsideAlign": ((30, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOutsideAlign": ((33, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
		"ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnitsFormat": ((22, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimStyle(DispatchBaseClass):
	CLSID = IID('{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')
	coclass_clsid = IID('{B80687F9-FA4C-4735-9DC4-E5715F2BC698}')

	def CopyFrom(self, StyleSource=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((9, 1),),StyleSource
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDimStyles(DispatchBaseClass):
	CLSID = IID('{C62F448E-753C-4DDF-B30D-873D0DAF9735}')
	coclass_clsid = IID('{794199C5-827C-41C8-8CB2-3A1EA056AF5E}')

	# Result is of type IAcadDimStyle
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadDimStyle
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadDimension(DispatchBaseClass):
	CLSID = IID('{06B71947-9E46-4B8F-B277-812B172E02EA}')
	coclass_clsid = IID('{6F56D7C9-18DD-4C15-9FA8-C54E3610EC40}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (1538, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
		"SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextFill": (1571, 2, (11, 0), (), "TextFill", None),
		"TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
		"TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
		"TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
		"TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
		"TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		"TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
		"ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
		"ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
		"ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
		"ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
		"TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
		"ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
		"ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
		"ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"DecimalSeparator": ((1548, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1537, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((1538, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
		"SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextFill": ((1571, LCID, 4, 0),()),
		"TextFillColor": ((1572, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextMovement": ((1558, LCID, 4, 0),()),
		"TextOverride": ((1541, LCID, 4, 0),()),
		"TextPosition": ((1539, LCID, 4, 0),()),
		"TextPrefix": ((1551, LCID, 4, 0),()),
		"TextRotation": ((1540, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TextSuffix": ((1552, LCID, 4, 0),()),
		"ToleranceDisplay": ((1559, LCID, 4, 0),()),
		"ToleranceHeightScale": ((1556, LCID, 4, 0),()),
		"ToleranceJustification": ((1560, LCID, 4, 0),()),
		"ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
		"TolerancePrecision": ((1555, LCID, 4, 0),()),
		"ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
		"ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
		"ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDocument(DispatchBaseClass):
	CLSID = IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
	coclass_clsid = IID('{7AABBB95-79BE-4C0F-8024-EB6AF271231C}')

	def Activate(self):
		return self._oleobj_.InvokeTypes(57, LCID, 1, (24, 0), (),)

	def AuditInfo(self, FixErr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), ((11, 1),),FixErr
			)

	def Close(self, SaveChanges=defaultNamedOptArg, FileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(58, LCID, 1, (24, 0), ((12, 17), (12, 17)),SaveChanges
			, FileName)

	def CopyObjects(self, Objects=defaultNamedNotOptArg, Owner=defaultNamedOptArg, IdPairs=defaultNamedOptArg):
		return self._ApplyTypes_(4, 1, (12, 0), ((12, 1), (12, 17), (16396, 19)), 'CopyObjects', None,Objects
			, Owner, IdPairs)

	def EndUndoMark(self):
		return self._oleobj_.InvokeTypes(69, LCID, 1, (24, 0), (),)

	def Export(self, FileName=defaultNamedNotOptArg, Extension=defaultNamedNotOptArg, SelectionSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((8, 1), (8, 1), (9, 1)),FileName
			, Extension, SelectionSet)

	def GetVariable(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(51, 1, (12, 0), ((8, 1),), 'GetVariable', None,Name
			)

	def HandleToObject(self, Handle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),Handle
			)
		if ret is not None:
			ret = Dispatch(ret, 'HandleToObject', None)
		return ret

	def Import(self, FileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(44, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),FileName
			, InsertionPoint, ScaleFactor)
		if ret is not None:
			ret = Dispatch(ret, 'Import', None)
		return ret

	def LoadShapeFile(self, FullName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(53, LCID, 1, (24, 0), ((8, 1),),FullName
			)

	# Result is of type IAcadDocument
	def New(self, TemplateFileName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), ((8, 1),),TemplateFileName
			)
		if ret is not None:
			ret = Dispatch(ret, 'New', '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
		return ret

	def ObjectIdToObject(self, ObjectID=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((3, 1),),ObjectID
			)
		if ret is not None:
			ret = Dispatch(ret, 'ObjectIdToObject', None)
		return ret

	# Result is of type IAcadDocument
	def Open(self, FullName=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), ((8, 1), (12, 17)),FullName
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'Open', '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
		return ret

	def PurgeAll(self):
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	def Regen(self, WhichViewports=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1),),WhichViewports
			)

	def Save(self):
		return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), (),)

	def SaveAs(self, FullFileName=defaultNamedNotOptArg, SaveAsType=defaultNamedOptArg, vSecurityParams=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),FullFileName
			, SaveAsType, vSecurityParams)

	def SendCommand(self, Command=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((8, 1),),Command
			)

	def SetVariable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((8, 1), (12, 1)),Name
			, Value)

	def StartUndoMark(self):
		return self._oleobj_.InvokeTypes(68, LCID, 1, (24, 0), (),)

	def Wblock(self, FileName=defaultNamedNotOptArg, SelectionSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), ((8, 1), (9, 1)),FileName
			, SelectionSet)

	_prop_map_get_ = {
		"Active": (56, 2, (11, 0), (), "Active", None),
		# Method 'ActiveDimStyle' returns object of type 'IAcadDimStyle'
		"ActiveDimStyle": (26, 2, (9, 0), (), "ActiveDimStyle", '{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}'),
		# Method 'ActiveLayer' returns object of type 'IAcadLayer'
		"ActiveLayer": (24, 2, (9, 0), (), "ActiveLayer", '{F3A8989F-5CAE-4E98-A185-E161FCF43127}'),
		# Method 'ActiveLayout' returns object of type 'IAcadLayout'
		"ActiveLayout": (62, 2, (9, 0), (), "ActiveLayout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		# Method 'ActiveLinetype' returns object of type 'IAcadLineType'
		"ActiveLinetype": (25, 2, (9, 0), (), "ActiveLinetype", '{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}'),
		# Method 'ActiveMaterial' returns object of type 'IAcadMaterial'
		"ActiveMaterial": (74, 2, (9, 0), (), "ActiveMaterial", '{5E69D338-33B4-40D3-9D02-ADA45791E720}'),
		# Method 'ActivePViewport' returns object of type 'IAcadPViewport'
		"ActivePViewport": (30, 2, (9, 0), (), "ActivePViewport", '{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}'),
		# Method 'ActiveSelectionSet' returns object of type 'IAcadSelectionSet'
		"ActiveSelectionSet": (33, 2, (9, 0), (), "ActiveSelectionSet", '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}'),
		"ActiveSpace": (31, 2, (3, 0), (), "ActiveSpace", None),
		# Method 'ActiveTextStyle' returns object of type 'IAcadTextStyle'
		"ActiveTextStyle": (27, 2, (9, 0), (), "ActiveTextStyle", '{BDF006CF-A063-40B0-912C-AF478B1CE15B}'),
		# Method 'ActiveUCS' returns object of type 'IAcadUCS'
		"ActiveUCS": (28, 2, (9, 0), (), "ActiveUCS", '{78C244EF-F4CC-43C7-AA5D-91A496215310}'),
		# Method 'ActiveViewport' returns object of type 'IAcadViewport'
		"ActiveViewport": (29, 2, (9, 0), (), "ActiveViewport", '{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}'),
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (66, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		# Method 'Blocks' returns object of type 'IAcadBlocks'
		"Blocks": (3, 2, (9, 0), (), "Blocks", '{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}'),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (67, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		# Method 'Dictionaries' returns object of type 'IAcadDictionaries'
		"Dictionaries": (9, 2, (9, 0), (), "Dictionaries", '{803BC722-4C89-4866-98B1-E4453C5F6287}'),
		# Method 'DimStyles' returns object of type 'IAcadDimStyles'
		"DimStyles": (6, 2, (9, 0), (), "DimStyles", '{C62F448E-753C-4DDF-B30D-873D0DAF9735}'),
		"ElevationModelSpace": (15, 2, (5, 0), (), "ElevationModelSpace", None),
		"ElevationPaperSpace": (16, 2, (5, 0), (), "ElevationPaperSpace", None),
		# Method 'FileDependencies' returns object of type 'IAcadFileDependencies'
		"FileDependencies": (70, 2, (9, 0), (), "FileDependencies", '{65156CBF-69F4-403C-AC21-682F839048DD}'),
		"FullName": (34, 2, (8, 0), (), "FullName", None),
		# Method 'Groups' returns object of type 'IAcadGroups'
		"Groups": (5, 2, (9, 0), (), "Groups", '{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}'),
		"HWND": (64, 2, (3, 0), (), "HWND", None),
		"Height": (61, 2, (3, 0), (), "Height", None),
		# Method 'Layers' returns object of type 'IAcadLayers'
		"Layers": (7, 2, (9, 0), (), "Layers", '{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}'),
		# Method 'Layouts' returns object of type 'IAcadLayouts'
		"Layouts": (20, 2, (9, 0), (), "Layouts", '{1636A05E-7F68-4CEE-B93B-8F56BA299293}'),
		"Limits": (17, 2, (12, 0), (), "Limits", None),
		# Method 'Linetypes' returns object of type 'IAcadLineTypes'
		"Linetypes": (8, 2, (9, 0), (), "Linetypes", '{943058F5-B25A-470F-84E6-C6364FEC2635}'),
		"MSpace": (40, 2, (11, 0), (), "MSpace", None),
		# Method 'Materials' returns object of type 'IAcadMaterials'
		"Materials": (73, 2, (9, 0), (), "Materials", '{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}'),
		# Method 'ModelSpace' returns object of type 'IAcadModelSpace'
		"ModelSpace": (1, 2, (9, 0), (), "ModelSpace", '{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}'),
		"Name": (35, 2, (8, 0), (), "Name", None),
		"ObjectSnapMode": (37, 2, (11, 0), (), "ObjectSnapMode", None),
		# Method 'PaperSpace' returns object of type 'IAcadPaperSpace'
		"PaperSpace": (2, 2, (9, 0), (), "PaperSpace", '{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}'),
		"Path": (36, 2, (8, 0), (), "Path", None),
		# Method 'PickfirstSelectionSet' returns object of type 'IAcadSelectionSet'
		"PickfirstSelectionSet": (55, 2, (9, 0), (), "PickfirstSelectionSet", '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}'),
		# Method 'Plot' returns object of type 'IAcadPlot'
		"Plot": (23, 2, (9, 0), (), "Plot", '{DFF0942E-23C4-44B5-B67C-B511B5DD5A66}'),
		# Method 'PlotConfigurations' returns object of type 'IAcadPlotConfigurations'
		"PlotConfigurations": (21, 2, (9, 0), (), "PlotConfigurations", '{AD2543CB-31A8-4DDD-9162-845E11D7F72F}'),
		# Method 'Preferences' returns object of type 'IAcadDatabasePreferences'
		"Preferences": (22, 2, (9, 0), (), "Preferences", '{96435877-2FB6-4842-BD4F-7334ADF4B707}'),
		"ReadOnly": (38, 2, (11, 0), (), "ReadOnly", None),
		# Method 'RegisteredApplications' returns object of type 'IAcadRegisteredApplications'
		"RegisteredApplications": (10, 2, (9, 0), (), "RegisteredApplications", '{5A832756-01AF-4D2F-89A6-50E0121AFD1A}'),
		"Saved": (39, 2, (11, 0), (), "Saved", None),
		# Method 'SectionManager' returns object of type 'IAcadSectionManager'
		"SectionManager": (72, 2, (9, 0), (), "SectionManager", '{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}'),
		# Method 'SelectionSets' returns object of type 'IAcadSelectionSets'
		"SelectionSets": (32, 2, (9, 0), (), "SelectionSets", '{913DBB03-9E39-4CA3-940E-BB7C4B88EF89}'),
		# Method 'SummaryInfo' returns object of type 'IAcadSummaryInfo'
		"SummaryInfo": (71, 2, (9, 0), (), "SummaryInfo", '{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}'),
		# Method 'TextStyles' returns object of type 'IAcadTextStyles'
		"TextStyles": (11, 2, (9, 0), (), "TextStyles", '{617040CF-4E9D-4CC3-9814-AD69E0AB9751}'),
		# Method 'UserCoordinateSystems' returns object of type 'IAcadUCSs'
		"UserCoordinateSystems": (12, 2, (9, 0), (), "UserCoordinateSystems", '{BF4812B8-408D-4E07-B595-ACB8336B6A93}'),
		# Method 'Utility' returns object of type 'IAcadUtility'
		"Utility": (41, 2, (9, 0), (), "Utility", '{22C8E547-0D27-4793-BB9F-AC58D4F8E794}'),
		# Method 'Viewports' returns object of type 'IAcadViewports'
		"Viewports": (14, 2, (9, 0), (), "Viewports", '{98558EDE-E8B4-4870-9D78-15BE6370E1C1}'),
		# Method 'Views' returns object of type 'IAcadViews'
		"Views": (13, 2, (9, 0), (), "Views", '{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}'),
		"Width": (60, 2, (3, 0), (), "Width", None),
		"WindowState": (59, 2, (3, 0), (), "WindowState", None),
		"WindowTitle": (65, 2, (8, 0), (), "WindowTitle", None),
	}
	_prop_map_put_ = {
		"ActiveDimStyle": ((26, LCID, 4, 0),()),
		"ActiveLayer": ((24, LCID, 4, 0),()),
		"ActiveLayout": ((62, LCID, 4, 0),()),
		"ActiveLinetype": ((25, LCID, 4, 0),()),
		"ActiveMaterial": ((74, LCID, 4, 0),()),
		"ActivePViewport": ((30, LCID, 4, 0),()),
		"ActiveSpace": ((31, LCID, 4, 0),()),
		"ActiveTextStyle": ((27, LCID, 4, 0),()),
		"ActiveUCS": ((28, LCID, 4, 0),()),
		"ActiveViewport": ((29, LCID, 4, 0),()),
		"ElevationModelSpace": ((15, LCID, 4, 0),()),
		"ElevationPaperSpace": ((16, LCID, 4, 0),()),
		"Height": ((61, LCID, 4, 0),()),
		"Limits": ((17, LCID, 4, 0),()),
		"MSpace": ((40, LCID, 4, 0),()),
		"ObjectSnapMode": ((37, LCID, 4, 0),()),
		"Width": ((60, LCID, 4, 0),()),
		"WindowState": ((59, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadDocuments(DispatchBaseClass):
	CLSID = IID('{CDF18C05-94F9-4902-856D-137AC54CEADF}')
	coclass_clsid = IID('{CA6096C3-1A75-45FF-BCBF-A198769571CC}')

	# Result is of type IAcadDocument
	def Add(self, TemplateName=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1610743812, LCID, 1, (9, 0), ((12, 17),),TemplateName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
		return ret

	def Close(self):
		return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDocument
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
		return ret

	# Result is of type IAcadDocument
	def Open(self, Name=defaultNamedNotOptArg, ReadOnly=defaultNamedOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Name
			, ReadOnly, Password)
		if ret is not None:
			ret = Dispatch(ret, 'Open', '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0EB66A59-8FF4-410B-B697-8813116B2C5F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadDynamicBlockReferenceProperty(DispatchBaseClass):
	CLSID = IID('{8607EF79-E042-46C4-8DF9-E96946D5C33D}')
	coclass_clsid = IID('{0215A4C0-5431-4FD0-9B06-46589B5C4939}')

	_prop_map_get_ = {
		"AllowedValues": (5, 2, (12, 0), (), "AllowedValues", None),
		"Description": (4, 2, (8, 0), (), "Description", None),
		"PropertyName": (1, 2, (8, 0), (), "PropertyName", None),
		"ReadOnly": (2, 2, (11, 0), (), "ReadOnly", None),
		"Show": (3, 2, (11, 0), (), "Show", None),
		"UnitsType": (7, 2, (3, 0), (), "UnitsType", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadEllipse(DispatchBaseClass):
	CLSID = IID('{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
	coclass_clsid = IID('{48FEFCD7-5D7C-4E4A-9F11-60E69A31D4B1}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(15, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (14, 2, (5, 0), (), "Area", None),
		"Center": (2, 2, (12, 0), (), "Center", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EndAngle": (8, 2, (5, 0), (), "EndAngle", None),
		"EndParameter": (10, 2, (5, 0), (), "EndParameter", None),
		"EndPoint": (3, 2, (12, 0), (), "EndPoint", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"MajorAxis": (11, 2, (12, 0), (), "MajorAxis", None),
		"MajorRadius": (4, 2, (5, 0), (), "MajorRadius", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"MinorAxis": (12, 2, (12, 0), (), "MinorAxis", None),
		"MinorRadius": (5, 2, (5, 0), (), "MinorRadius", None),
		"Normal": (13, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"RadiusRatio": (6, 2, (5, 0), (), "RadiusRatio", None),
		"StartAngle": (7, 2, (5, 0), (), "StartAngle", None),
		"StartParameter": (9, 2, (5, 0), (), "StartParameter", None),
		"StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Center": ((2, LCID, 4, 0),()),
		"EndAngle": ((8, LCID, 4, 0),()),
		"EndParameter": ((10, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"MajorAxis": ((11, LCID, 4, 0),()),
		"MajorRadius": ((4, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"MinorRadius": ((5, LCID, 4, 0),()),
		"Normal": ((13, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"RadiusRatio": ((6, LCID, 4, 0),()),
		"StartAngle": ((7, LCID, 4, 0),()),
		"StartParameter": ((9, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadEntity(DispatchBaseClass):
	CLSID = IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	coclass_clsid = IID('{D66873EA-AAE5-41CC-8DD2-8CE3228E9F89}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadExternalReference(DispatchBaseClass):
	CLSID = IID('{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
	coclass_clsid = IID('{B2A579E0-A797-40B1-8AEE-A8F6404719F8}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ConvertToAnonymousBlock(self):
		return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

	def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

	def GetAttributes(self):
		return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetConstantAttributes(self):
		return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

	def GetDynamicBlockProperties(self):
		return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def ResetBlock(self):
		return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
		"InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
		"InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
		"IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Normal": (3, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (256, 2, (8, 0), (), "Path", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (4, 2, (5, 0), (), "Rotation", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
		"XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
		"YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
		"YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
		"ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
		"ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"InsertionPoint": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Normal": ((3, LCID, 4, 0),()),
		"Path": ((256, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((4, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
		"XScaleFactor": ((5, LCID, 4, 0),()),
		"YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
		"YScaleFactor": ((6, LCID, 4, 0),()),
		"ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
		"ZScaleFactor": ((7, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadExtrudedSurface(DispatchBaseClass):
	CLSID = IID('{6069C4B0-6137-4076-B4F0-330CF31EE912}')
	coclass_clsid = IID('{C2D4ACCC-A3D1-4A0A-AD59-0DD8BA3D5EE1}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (4, 2, (12, 0), (), "Direction", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (2, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
		"TaperAngle": (3, 2, (5, 0), (), "TaperAngle", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
		"VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Height": ((2, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TaperAngle": ((3, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UIsolineDensity": ((10, LCID, 4, 0),()),
		"VIsolineDensity": ((11, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadFileDependencies(DispatchBaseClass):
	CLSID = IID('{65156CBF-69F4-403C-AC21-682F839048DD}')
	coclass_clsid = IID('{834CE679-2E47-49DE-9E41-FEC87E9192EB}')

	def CreateEntry(self, Feature=defaultNamedNotOptArg, FullFileName=defaultNamedNotOptArg, AffectsGraphics=defaultNamedNotOptArg, noIncrement=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (8, 1), (11, 1), (11, 1)),Feature
			, FullFileName, AffectsGraphics, noIncrement)

	def IndexOf(self, Feature=defaultNamedNotOptArg, FullFileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), ((8, 1), (8, 1)),Feature
			, FullFileName)

	# Result is of type IAcadFileDependency
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{F309A783-F98D-4B85-AE32-BE0470A8A370}')
		return ret

	def RemoveEntry(self, Index=defaultNamedNotOptArg, forceRemove=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (11, 1)),Index
			, forceRemove)

	def UpdateEntry(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((3, 1),),Index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (2, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{F309A783-F98D-4B85-AE32-BE0470A8A370}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{F309A783-F98D-4B85-AE32-BE0470A8A370}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadFileDependency(DispatchBaseClass):
	CLSID = IID('{F309A783-F98D-4B85-AE32-BE0470A8A370}')
	coclass_clsid = IID('{CD865713-70D6-4E15-BB7B-9B99AD9DEB85}')

	_prop_map_get_ = {
		"AffectsGraphics": (8, 2, (11, 0), (), "AffectsGraphics", None),
		"Feature": (6, 2, (8, 0), (), "Feature", None),
		"FileName": (2, 2, (8, 0), (), "FileName", None),
		"FileSize": (17, 2, (3, 0), (), "FileSize", None),
		"FingerprintGuid": (4, 2, (8, 0), (), "FingerprintGuid", None),
		"FoundPath": (3, 2, (8, 0), (), "FoundPath", None),
		"FullFileName": (1, 2, (8, 0), (), "FullFileName", None),
		"Index": (9, 2, (3, 0), (), "Index", None),
		"IsModified": (7, 2, (11, 0), (), "IsModified", None),
		"ReferenceCount": (18, 2, (3, 0), (), "ReferenceCount", None),
		"TimeStamp": (16, 2, (3, 0), (), "TimeStamp", None),
		"VersionGuid": (5, 2, (8, 0), (), "VersionGuid", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadGroup(DispatchBaseClass):
	CLSID = IID('{9C09D413-9CA2-462A-9D29-03CE60738E36}')
	coclass_clsid = IID('{08A60FF7-BB37-44F4-9759-0ADA6C7B9CC9}')

	def AppendItems(self, Objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),Objects
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def RemoveItems(self, Objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1),),Objects
			)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Update(self):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (10, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"Layer": ((3, LCID, 4, 0),()),
		"Linetype": ((4, LCID, 4, 0),()),
		"LinetypeScale": ((5, LCID, 4, 0),()),
		"Lineweight": ((9, LCID, 4, 0),()),
		"Material": ((16, LCID, 4, 0),()),
		"Name": ((10, LCID, 4, 0),()),
		"PlotStyleName": ((8, LCID, 4, 0),()),
		"TrueColor": ((15, LCID, 4, 0),()),
		"Visible": ((6, LCID, 4, 0),()),
		"color": ((2, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadGroups(DispatchBaseClass):
	CLSID = IID('{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}')
	coclass_clsid = IID('{162EF0A1-5A33-46F2-ACCF-CA388B084A09}')

	# Result is of type IAcadGroup
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9C09D413-9CA2-462A-9D29-03CE60738E36}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadGroup
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9C09D413-9CA2-462A-9D29-03CE60738E36}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9C09D413-9CA2-462A-9D29-03CE60738E36}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9C09D413-9CA2-462A-9D29-03CE60738E36}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadHatch(DispatchBaseClass):
	CLSID = IID('{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
	coclass_clsid = IID('{FE718E8F-C3AA-4F30-9103-432450CF1DA1}')

	def AppendInnerLoop(self, ObjectArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((12, 1),),ObjectArray
			)

	def AppendOuterLoop(self, ObjectArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((12, 1),),ObjectArray
			)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Evaluate(self):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetLoopAt(self, Index=defaultNamedNotOptArg, ObjectArray=pythoncom.Missing):
		return self._ApplyTypes_(17, 1, (24, 0), ((3, 1), (16396, 2)), 'GetLoopAt', None,Index
			, ObjectArray)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def InsertLoopAt(self, Index=defaultNamedNotOptArg, LoopType=defaultNamedNotOptArg, ObjectArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 1)),Index
			, LoopType, ObjectArray)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetPattern(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (8, 1)),PatternType
			, PatternName)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (25, 2, (5, 0), (), "Area", None),
		"AssociativeHatch": (11, 2, (11, 0), (), "AssociativeHatch", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Elevation": (10, 2, (5, 0), (), "Elevation", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"GradientAngle": (21, 2, (5, 0), (), "GradientAngle", None),
		"GradientCentered": (22, 2, (11, 0), (), "GradientCentered", None),
		# Method 'GradientColor1' returns object of type 'IAcadAcCmColor'
		"GradientColor1": (19, 2, (9, 0), (), "GradientColor1", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		# Method 'GradientColor2' returns object of type 'IAcadAcCmColor'
		"GradientColor2": (20, 2, (9, 0), (), "GradientColor2", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"GradientName": (23, 2, (8, 0), (), "GradientName", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HatchObjectType": (24, 2, (3, 0), (), "HatchObjectType", None),
		"HatchStyle": (12, 2, (3, 0), (), "HatchStyle", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"ISOPenWidth": (8, 2, (3, 0), (), "ISOPenWidth", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (1, 2, (12, 0), (), "Normal", None),
		"NumberOfLoops": (2, 2, (3, 0), (), "NumberOfLoops", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (26, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PatternAngle": (5, 2, (5, 0), (), "PatternAngle", None),
		"PatternDouble": (9, 2, (11, 0), (), "PatternDouble", None),
		"PatternName": (4, 2, (8, 0), (), "PatternName", None),
		"PatternScale": (6, 2, (5, 0), (), "PatternScale", None),
		"PatternSpace": (7, 2, (5, 0), (), "PatternSpace", None),
		"PatternType": (3, 2, (3, 0), (), "PatternType", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AssociativeHatch": ((11, LCID, 4, 0),()),
		"Elevation": ((10, LCID, 4, 0),()),
		"GradientAngle": ((21, LCID, 4, 0),()),
		"GradientCentered": ((22, LCID, 4, 0),()),
		"GradientColor1": ((19, LCID, 4, 0),()),
		"GradientColor2": ((20, LCID, 4, 0),()),
		"GradientName": ((23, LCID, 4, 0),()),
		"HatchObjectType": ((24, LCID, 4, 0),()),
		"HatchStyle": ((12, LCID, 4, 0),()),
		"ISOPenWidth": ((8, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((1, LCID, 4, 0),()),
		"Origin": ((26, LCID, 4, 0),()),
		"PatternAngle": ((5, LCID, 4, 0),()),
		"PatternDouble": ((9, LCID, 4, 0),()),
		"PatternScale": ((6, LCID, 4, 0),()),
		"PatternSpace": ((7, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadHelix(DispatchBaseClass):
	CLSID = IID('{E0D0377A-C3ED-4F5A-87CE-2AAC3C141D32}')
	coclass_clsid = IID('{DE74F5AD-DA2F-429F-BAF9-850A2808D585}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BaseRadius": (6, 2, (5, 0), (), "BaseRadius", None),
		"Constrain": (2, 2, (3, 0), (), "Constrain", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (3, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Position": (1, 2, (12, 0), (), "Position", None),
		"TopRadius": (7, 2, (5, 0), (), "TopRadius", None),
		"TotalLength": (10, 2, (5, 0), (), "TotalLength", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"TurnHeight": (5, 2, (5, 0), (), "TurnHeight", None),
		"TurnSlope": (9, 2, (5, 0), (), "TurnSlope", None),
		"Turns": (4, 2, (5, 0), (), "Turns", None),
		"Twist": (8, 2, (3, 0), (), "Twist", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"BaseRadius": ((6, LCID, 4, 0),()),
		"Constrain": ((2, LCID, 4, 0),()),
		"Height": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Position": ((1, LCID, 4, 0),()),
		"TopRadius": ((7, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"TurnHeight": ((5, LCID, 4, 0),()),
		"Turns": ((4, LCID, 4, 0),()),
		"Twist": ((8, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadHyperlink(DispatchBaseClass):
	CLSID = IID('{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')
	coclass_clsid = IID('{988F4102-E6E3-4282-ACAC-55270827F2A8}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (3, 2, (9, 0), (), "Application", None),
		"URL": (1, 2, (8, 0), (), "URL", None),
		"URLDescription": (2, 2, (8, 0), (), "URLDescription", None),
		"URLNamedLocation": (5, 2, (8, 0), (), "URLNamedLocation", None),
	}
	_prop_map_put_ = {
		"URL": ((1, LCID, 4, 0),()),
		"URLDescription": ((2, LCID, 4, 0),()),
		"URLNamedLocation": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadHyperlinks(DispatchBaseClass):
	CLSID = IID('{FE28743E-1DAD-48F5-936B-6924E68AE3BE}')
	coclass_clsid = IID('{1481B385-759A-4B00-9257-E96357563999}')

	# Result is of type IAcadHyperlink
	def Add(self, Name=defaultNamedNotOptArg, Description=defaultNamedOptArg, NamedLocation=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Name
			, Description, NamedLocation)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')
		return ret

	# Result is of type IAcadHyperlink
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')
		return ret

	_prop_map_get_ = {
		"Application": (2, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadIdPair(DispatchBaseClass):
	CLSID = IID('{AA1895FD-9DF5-4824-9597-8FB7EA336887}')
	coclass_clsid = IID('{14679E3B-C952-4998-8E13-4B1286E6DD99}')

	_prop_map_get_ = {
		"Application": (6, 2, (9, 0), (), "Application", None),
		"IsCloned": (1, 2, (11, 0), (), "IsCloned", None),
		"IsOwnerXlated": (2, 2, (11, 0), (), "IsOwnerXlated", None),
		"IsPrimary": (3, 2, (11, 0), (), "IsPrimary", None),
		"Value": (5, 2, (3, 0), (), "Value", None),
		"key": (4, 2, (3, 0), (), "key", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(5, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLWPolyline(DispatchBaseClass):
	CLSID = IID('{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
	coclass_clsid = IID('{E9C07CEC-7B82-49E4-BBA2-7533B88E9D64}')

	def AddVertex(self, Index=defaultNamedNotOptArg, vertex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
			, vertex)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(5, 1, (12, 0), (), 'Explode', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetBulge(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(6, LCID, 1, (5, 0), ((3, 1),),Index
			)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetWidth(self, Index=defaultNamedNotOptArg, StartWidth=pythoncom.Missing, EndWidth=pythoncom.Missing):
		return self._ApplyTypes_(8, 1, (24, 0), ((3, 1), (16389, 2), (16389, 2)), 'GetWidth', None,Index
			, StartWidth, EndWidth)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(11, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetBulge(self, Index=defaultNamedNotOptArg, bulge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
			, bulge)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetWidth(self, Index=defaultNamedNotOptArg, StartWidth=defaultNamedNotOptArg, EndWidth=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1)),Index
			, StartWidth, EndWidth)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (13, 2, (5, 0), (), "Area", None),
		"Closed": (15, 2, (11, 0), (), "Closed", None),
		"ConstantWidth": (10, 2, (5, 0), (), "ConstantWidth", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Elevation": (12, 2, (5, 0), (), "Elevation", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Length": (17, 2, (5, 0), (), "Length", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeGeneration": (16, 2, (11, 0), (), "LinetypeGeneration", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (2, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Thickness": (3, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Closed": ((15, LCID, 4, 0),()),
		"ConstantWidth": ((10, LCID, 4, 0),()),
		"Coordinates": ((1, LCID, 4, 0),()),
		"Elevation": ((12, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeGeneration": ((16, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((2, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Thickness": ((3, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLayer(DispatchBaseClass):
	CLSID = IID('{F3A8989F-5CAE-4E98-A185-E161FCF43127}')
	coclass_clsid = IID('{BAE5802A-CF21-4F9C-AE04-D98F4036AC31}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Description": (12, 2, (8, 0), (), "Description", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Freeze": (2, 2, (11, 0), (), "Freeze", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"LayerOn": (3, 2, (11, 0), (), "LayerOn", None),
		"Linetype": (4, 2, (8, 0), (), "Linetype", None),
		"Lineweight": (10, 2, (3, 0), (), "Lineweight", None),
		"Lock": (5, 2, (11, 0), (), "Lock", None),
		"Material": (14, 2, (8, 0), (), "Material", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (9, 2, (8, 0), (), "PlotStyleName", None),
		"Plottable": (7, 2, (11, 0), (), "Plottable", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (11, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Used": (13, 2, (11, 0), (), "Used", None),
		"ViewportDefault": (8, 2, (11, 0), (), "ViewportDefault", None),
		"color": (1, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Description": ((12, LCID, 4, 0),()),
		"Freeze": ((2, LCID, 4, 0),()),
		"LayerOn": ((3, LCID, 4, 0),()),
		"Linetype": ((4, LCID, 4, 0),()),
		"Lineweight": ((10, LCID, 4, 0),()),
		"Lock": ((5, LCID, 4, 0),()),
		"Material": ((14, LCID, 4, 0),()),
		"Name": ((6, LCID, 4, 0),()),
		"PlotStyleName": ((9, LCID, 4, 0),()),
		"Plottable": ((7, LCID, 4, 0),()),
		"TrueColor": ((11, LCID, 4, 0),()),
		"ViewportDefault": ((8, LCID, 4, 0),()),
		"color": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLayerStateManager(DispatchBaseClass):
	CLSID = IID('{46D38550-0080-484A-97B0-B3A1F5ED9824}')
	coclass_clsid = IID('{4B40437B-8972-4444-BBE3-1588FF55F203}')

	def Delete(self, bsName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((8, 1),),bsName
			)

	def Export(self, bsName=defaultNamedNotOptArg, bsFilename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((8, 1), (8, 1)),bsName
			, bsFilename)

	def Import(self, bsFilename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((8, 1),),bsFilename
			)

	# The method Mask is actually a property, but must be used as a method to correctly pass the arguments
	def Mask(self, bsName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743809, LCID, 2, (3, 0), ((8, 1),),bsName
			)

	def Rename(self, bsName=defaultNamedNotOptArg, bsNewName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1), (8, 1)),bsName
			, bsNewName)

	def Restore(self, bsName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), ((8, 1),),bsName
			)

	def Save(self, bsName=defaultNamedNotOptArg, eMask=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (24, 0), ((8, 1), (3, 1)),bsName
			, eMask)

	def SetDatabase(self, iHostDb=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743808, LCID, 1, (24, 0), ((9, 1),),iHostDb
			)

	# The method SetMask is actually a property, but must be used as a method to correctly pass the arguments
	def SetMask(self, bsName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1610743809, LCID, 4, (24, 0), ((8, 1), (3, 1)),bsName
			, arg1)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLayers(DispatchBaseClass):
	CLSID = IID('{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}')
	coclass_clsid = IID('{E177A457-9EAA-43C3-A3CE-84874A28F6CA}')

	# Result is of type IAcadLayer
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F3A8989F-5CAE-4E98-A185-E161FCF43127}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GenerateUsageData(self):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadLayer
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{F3A8989F-5CAE-4E98-A185-E161FCF43127}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{F3A8989F-5CAE-4E98-A185-E161FCF43127}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{F3A8989F-5CAE-4E98-A185-E161FCF43127}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadLayout(DispatchBaseClass):
	CLSID = IID('{0B119218-2411-46DD-B7B9-17C8C009222C}')
	coclass_clsid = IID('{4A756F5F-CBA4-428B-B17F-AF80C0C8502D}')

	def CopyFrom(self, pPlotConfig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((9, 1),),pPlotConfig
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetCanonicalMediaNames(self):
		return self._ApplyTypes_(36, 1, (12, 0), (), 'GetCanonicalMediaNames', None,)

	def GetCustomScale(self, Numerator=pythoncom.Missing, Denominator=pythoncom.Missing):
		return self._ApplyTypes_(17, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetCustomScale', None,Numerator
			, Denominator)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetLocaleMediaName(self, Name=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(40, LCID, 1, (8, 0), ((8, 1),),Name
			)

	def GetPaperMargins(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
		return self._ApplyTypes_(26, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetPaperMargins', None,LowerLeft
			, UpperRight)

	def GetPaperSize(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
		return self._ApplyTypes_(28, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetPaperSize', None,Width
			, Height)

	def GetPlotDeviceNames(self):
		return self._ApplyTypes_(37, 1, (12, 0), (), 'GetPlotDeviceNames', None,)

	def GetPlotStyleTableNames(self):
		return self._ApplyTypes_(38, 1, (12, 0), (), 'GetPlotStyleTableNames', None,)

	def GetWindowToPlot(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
		return self._ApplyTypes_(31, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetWindowToPlot', None,LowerLeft
			, UpperRight)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def RefreshPlotDeviceInfo(self):
		return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), (),)

	def SetCustomScale(self, Numerator=defaultNamedNotOptArg, Denominator=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((5, 1), (5, 1)),Numerator
			, Denominator)

	def SetWindowToPlot(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
			, UpperRight)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Block' returns object of type 'IAcadBlock'
		"Block": (48, 2, (9, 0), (), "Block", '{165531B8-67A4-46D8-AC99-F8150FA7A412}'),
		"CanonicalMediaName": (6, 2, (8, 0), (), "CanonicalMediaName", None),
		"CenterPlot": (11, 2, (11, 0), (), "CenterPlot", None),
		"ConfigName": (3, 2, (8, 0), (), "ConfigName", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ModelType": (34, 2, (11, 0), (), "ModelType", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PaperUnits": (7, 2, (3, 0), (), "PaperUnits", None),
		"PlotHidden": (12, 2, (11, 0), (), "PlotHidden", None),
		"PlotOrigin": (30, 2, (12, 0), (), "PlotOrigin", None),
		"PlotRotation": (10, 2, (3, 0), (), "PlotRotation", None),
		"PlotType": (13, 2, (3, 0), (), "PlotType", None),
		"PlotViewportBorders": (8, 2, (11, 0), (), "PlotViewportBorders", None),
		"PlotViewportsFirst": (24, 2, (11, 0), (), "PlotViewportsFirst", None),
		"PlotWithLineweights": (21, 2, (11, 0), (), "PlotWithLineweights", None),
		"PlotWithPlotStyles": (33, 2, (11, 0), (), "PlotWithPlotStyles", None),
		"ScaleLineweights": (20, 2, (11, 0), (), "ScaleLineweights", None),
		"ShowPlotStyles": (9, 2, (11, 0), (), "ShowPlotStyles", None),
		"StandardScale": (16, 2, (3, 0), (), "StandardScale", None),
		"StyleSheet": (25, 2, (8, 0), (), "StyleSheet", None),
		"TabOrder": (49, 2, (3, 0), (), "TabOrder", None),
		"UseStandardScale": (15, 2, (11, 0), (), "UseStandardScale", None),
		"ViewToPlot": (14, 2, (8, 0), (), "ViewToPlot", None),
	}
	_prop_map_put_ = {
		"CanonicalMediaName": ((6, LCID, 4, 0),()),
		"CenterPlot": ((11, LCID, 4, 0),()),
		"ConfigName": ((3, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"PaperUnits": ((7, LCID, 4, 0),()),
		"PlotHidden": ((12, LCID, 4, 0),()),
		"PlotOrigin": ((30, LCID, 4, 0),()),
		"PlotRotation": ((10, LCID, 4, 0),()),
		"PlotType": ((13, LCID, 4, 0),()),
		"PlotViewportBorders": ((8, LCID, 4, 0),()),
		"PlotViewportsFirst": ((24, LCID, 4, 0),()),
		"PlotWithLineweights": ((21, LCID, 4, 0),()),
		"PlotWithPlotStyles": ((33, LCID, 4, 0),()),
		"ScaleLineweights": ((20, LCID, 4, 0),()),
		"ShowPlotStyles": ((9, LCID, 4, 0),()),
		"StandardScale": ((16, LCID, 4, 0),()),
		"StyleSheet": ((25, LCID, 4, 0),()),
		"TabOrder": ((49, LCID, 4, 0),()),
		"UseStandardScale": ((15, LCID, 4, 0),()),
		"ViewToPlot": ((14, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLayouts(DispatchBaseClass):
	CLSID = IID('{1636A05E-7F68-4CEE-B93B-8F56BA299293}')
	coclass_clsid = IID('{6BCE6F6E-C050-4F39-BD98-E2743949F724}')

	# Result is of type IAcadLayout
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0B119218-2411-46DD-B7B9-17C8C009222C}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadLayout
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0B119218-2411-46DD-B7B9-17C8C009222C}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0B119218-2411-46DD-B7B9-17C8C009222C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0B119218-2411-46DD-B7B9-17C8C009222C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadLeader(DispatchBaseClass):
	CLSID = IID('{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
	coclass_clsid = IID('{FA97F7A7-FD19-4D55-ABF2-CFEFFF777426}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(67, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Evaluate(self):
		return self._oleobj_.InvokeTypes(66, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(67, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Annotation' returns object of type 'IAcadEntity'
		"Annotation": (68, 2, (9, 0), (), "Annotation", '{E460D811-DFF0-4FCD-9D75-B440FA38263B}'),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArrowheadBlock": (70, 2, (8, 0), (), "ArrowheadBlock", None),
		"ArrowheadSize": (1543, 2, (5, 0), (), "ArrowheadSize", None),
		"ArrowheadType": (69, 2, (3, 0), (), "ArrowheadType", None),
		"Coordinates": (64, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DimensionLineWeight": (1550, 2, (3, 0), (), "DimensionLineWeight", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (1537, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"TextGap": (1549, 2, (5, 0), (), "TextGap", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Type": (65, 2, (3, 0), (), "Type", None),
		"VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Annotation": ((68, LCID, 4, 0),()),
		"ArrowheadBlock": ((70, LCID, 4, 0),()),
		"ArrowheadSize": ((1543, LCID, 4, 0),()),
		"ArrowheadType": ((69, LCID, 4, 0),()),
		"Coordinates": ((64, LCID, 4, 0),()),
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DimensionLineWeight": ((1550, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"TextGap": ((1549, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Type": ((65, LCID, 4, 0),()),
		"VerticalTextPosition": ((1554, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLine(DispatchBaseClass):
	CLSID = IID('{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
	coclass_clsid = IID('{4BD03680-3C0F-4501-AFF7-3D008586917F}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(5, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Angle": (8, 2, (5, 0), (), "Angle", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Delta": (6, 2, (12, 0), (), "Delta", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EndPoint": (2, 2, (12, 0), (), "EndPoint", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Length": (7, 2, (5, 0), (), "Length", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (3, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
		"Thickness": (4, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"EndPoint": ((2, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((3, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"StartPoint": ((1, LCID, 4, 0),()),
		"Thickness": ((4, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLineType(DispatchBaseClass):
	CLSID = IID('{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')
	coclass_clsid = IID('{0D555CE0-304A-47A6-858B-B145209A3982}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Description": (1, 2, (8, 0), (), "Description", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"Description": ((1, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadLineTypes(DispatchBaseClass):
	CLSID = IID('{943058F5-B25A-470F-84E6-C6364FEC2635}')
	coclass_clsid = IID('{C8EC7647-1E79-4F13-81D7-2EED803D0D22}')

	# Result is of type IAcadLineType
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadLineType
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')
		return ret

	def Load(self, Name=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1), (8, 1)),Name
			, FileName)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadLoftedSurface(DispatchBaseClass):
	CLSID = IID('{59FBE27D-91AF-4934-B454-BE0688ABA89D}')
	coclass_clsid = IID('{3497C2EC-5684-4B21-AF74-F6760E0221DC}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Closed": (9, 2, (11, 0), (), "Closed", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EndDraftAngle": (7, 2, (5, 0), (), "EndDraftAngle", None),
		"EndDraftMagnitude": (8, 2, (5, 0), (), "EndDraftMagnitude", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"NumCrossSections": (2, 2, (3, 0), (), "NumCrossSections", None),
		"NumGuidePaths": (3, 2, (3, 0), (), "NumGuidePaths", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"StartDraftAngle": (5, 2, (5, 0), (), "StartDraftAngle", None),
		"StartDraftMagnitude": (6, 2, (5, 0), (), "StartDraftMagnitude", None),
		"SurfaceNormals": (4, 2, (3, 0), (), "SurfaceNormals", None),
		"SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
		"VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Closed": ((9, LCID, 4, 0),()),
		"EndDraftAngle": ((7, LCID, 4, 0),()),
		"EndDraftMagnitude": ((8, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"StartDraftAngle": ((5, LCID, 4, 0),()),
		"StartDraftMagnitude": ((6, LCID, 4, 0),()),
		"SurfaceNormals": ((4, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UIsolineDensity": ((10, LCID, 4, 0),()),
		"VIsolineDensity": ((11, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMInsertBlock(DispatchBaseClass):
	CLSID = IID('{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
	coclass_clsid = IID('{B1560245-190E-4BBD-81DF-9B642D0E5325}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ConvertToAnonymousBlock(self):
		return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

	def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

	def GetAttributes(self):
		return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetConstantAttributes(self):
		return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

	def GetDynamicBlockProperties(self):
		return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def ResetBlock(self):
		return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ColumnSpacing": (257, 2, (5, 0), (), "ColumnSpacing", None),
		"Columns": (256, 2, (3, 0), (), "Columns", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
		"InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
		"InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
		"IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Normal": (3, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (4, 2, (5, 0), (), "Rotation", None),
		"RowSpacing": (259, 2, (5, 0), (), "RowSpacing", None),
		"Rows": (258, 2, (3, 0), (), "Rows", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
		"XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
		"YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
		"YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
		"ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
		"ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"ColumnSpacing": ((257, LCID, 4, 0),()),
		"Columns": ((256, LCID, 4, 0),()),
		"InsertionPoint": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Normal": ((3, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((4, LCID, 4, 0),()),
		"RowSpacing": ((259, LCID, 4, 0),()),
		"Rows": ((258, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
		"XScaleFactor": ((5, LCID, 4, 0),()),
		"YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
		"YScaleFactor": ((6, LCID, 4, 0),()),
		"ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
		"ZScaleFactor": ((7, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMLeader(DispatchBaseClass):
	CLSID = IID('{B125D293-E039-4D19-B975-1C4A8841C5AB}')
	coclass_clsid = IID('{643A46A9-997A-4E10-8117-0B887D0D435F}')

	def AddLeader(self):
		return self._oleobj_.InvokeTypes(27, LCID, 1, (3, 0), (),)

	def AddLeaderLine(self, leaderIndex=defaultNamedNotOptArg, pointArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29, LCID, 1, (3, 0), ((3, 1), (12, 1)),leaderIndex
			, pointArray)

	def AddLeaderLineEx(self, pointArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(30, LCID, 1, (3, 0), ((12, 1),),pointArray
			)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBlockAttributeValue(self, attdefId=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(44, LCID, 1, (8, 0), ((3, 1),),attdefId
			)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetDoglegDirection(self, leaderIndex=defaultNamedNotOptArg):
		return self._ApplyTypes_(41, 1, (12, 0), ((3, 1),), 'GetDoglegDirection', None,leaderIndex
			)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetLeaderIndex(self, leaderLineIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(35, LCID, 1, (3, 0), ((3, 1),),leaderLineIndex
			)

	def GetLeaderLineIndexes(self, leaderIndex=defaultNamedNotOptArg):
		return self._ApplyTypes_(36, 1, (12, 0), ((3, 1),), 'GetLeaderLineIndexes', None,leaderIndex
			)

	def GetLeaderLineVertices(self, leaderLineIndex=defaultNamedNotOptArg):
		return self._ApplyTypes_(33, 1, (12, 0), ((3, 1),), 'GetLeaderLineVertices', None,leaderLineIndex
			)

	def GetVertexCount(self, leaderLineIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(37, LCID, 1, (3, 0), ((3, 1),),leaderLineIndex
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def RemoveLeader(self, leaderIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1),),leaderIndex
			)

	def RemoveLeaderLine(self, leaderLineIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((3, 1),),leaderLineIndex
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetBlockAttributeValue(self, attdefId=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((3, 1), (8, 1)),attdefId
			, Value)

	def SetDoglegDirection(self, leaderIndex=defaultNamedNotOptArg, dirVec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (12, 1)),leaderIndex
			, dirVec)

	def SetLeaderLineVertices(self, leaderLineIndex=defaultNamedNotOptArg, pointArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((3, 1), (12, 1)),leaderLineIndex
			, pointArray)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArrowheadBlock": (24, 2, (8, 0), (), "ArrowheadBlock", None),
		"ArrowheadSize": (6, 2, (5, 0), (), "ArrowheadSize", None),
		"ArrowheadType": (5, 2, (3, 0), (), "ArrowheadType", None),
		"BlockConnectionType": (10, 2, (3, 0), (), "BlockConnectionType", None),
		"ContentBlockName": (9, 2, (8, 0), (), "ContentBlockName", None),
		"ContentBlockType": (25, 2, (3, 0), (), "ContentBlockType", None),
		"ContentType": (34, 2, (3, 0), (), "ContentType", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"DogLegged": (7, 2, (11, 0), (), "DogLegged", None),
		"DoglegLength": (8, 2, (5, 0), (), "DoglegLength", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"LandingGap": (23, 2, (5, 0), (), "LandingGap", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LeaderCount": (26, 2, (3, 0), (), "LeaderCount", None),
		# Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
		"LeaderLineColor": (2, 2, (9, 0), (), "LeaderLineColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"LeaderLineType": (3, 2, (8, 0), (), "LeaderLineType", None),
		"LeaderLineWeight": (4, 2, (3, 0), (), "LeaderLineWeight", None),
		"LeaderType": (1, 2, (3, 0), (), "LeaderType", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"ScaleFactor": (38, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (40, 2, (8, 0), (), "StyleName", None),
		"TextBackgroundFill": (21, 2, (11, 0), (), "TextBackgroundFill", None),
		"TextDirection": (14, 2, (3, 0), (), "TextDirection", None),
		"TextFrameDisplay": (39, 2, (11, 0), (), "TextFrameDisplay", None),
		"TextHeight": (16, 2, (5, 0), (), "TextHeight", None),
		"TextJustify": (13, 2, (3, 0), (), "TextJustify", None),
		"TextLeftAttachmentType": (22, 2, (3, 0), (), "TextLeftAttachmentType", None),
		"TextLineSpacingDistance": (19, 2, (5, 0), (), "TextLineSpacingDistance", None),
		"TextLineSpacingFactor": (18, 2, (5, 0), (), "TextLineSpacingFactor", None),
		"TextLineSpacingStyle": (20, 2, (3, 0), (), "TextLineSpacingStyle", None),
		"TextRightAttachmentType": (43, 2, (3, 0), (), "TextRightAttachmentType", None),
		"TextRotation": (17, 2, (5, 0), (), "TextRotation", None),
		"TextString": (11, 2, (8, 0), (), "TextString", None),
		"TextStyleName": (12, 2, (8, 0), (), "TextStyleName", None),
		"TextWidth": (15, 2, (5, 0), (), "TextWidth", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"ArrowheadBlock": ((24, LCID, 4, 0),()),
		"ArrowheadSize": ((6, LCID, 4, 0),()),
		"ArrowheadType": ((5, LCID, 4, 0),()),
		"BlockConnectionType": ((10, LCID, 4, 0),()),
		"ContentBlockName": ((9, LCID, 4, 0),()),
		"ContentBlockType": ((25, LCID, 4, 0),()),
		"ContentType": ((34, LCID, 4, 0),()),
		"DogLegged": ((7, LCID, 4, 0),()),
		"DoglegLength": ((8, LCID, 4, 0),()),
		"LandingGap": ((23, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LeaderLineColor": ((2, LCID, 4, 0),()),
		"LeaderLineType": ((3, LCID, 4, 0),()),
		"LeaderLineWeight": ((4, LCID, 4, 0),()),
		"LeaderType": ((1, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"ScaleFactor": ((38, LCID, 4, 0),()),
		"StyleName": ((40, LCID, 4, 0),()),
		"TextBackgroundFill": ((21, LCID, 4, 0),()),
		"TextDirection": ((14, LCID, 4, 0),()),
		"TextFrameDisplay": ((39, LCID, 4, 0),()),
		"TextHeight": ((16, LCID, 4, 0),()),
		"TextJustify": ((13, LCID, 4, 0),()),
		"TextLeftAttachmentType": ((22, LCID, 4, 0),()),
		"TextLineSpacingDistance": ((19, LCID, 4, 0),()),
		"TextLineSpacingFactor": ((18, LCID, 4, 0),()),
		"TextLineSpacingStyle": ((20, LCID, 4, 0),()),
		"TextRightAttachmentType": ((43, LCID, 4, 0),()),
		"TextRotation": ((17, LCID, 4, 0),()),
		"TextString": ((11, LCID, 4, 0),()),
		"TextStyleName": ((12, LCID, 4, 0),()),
		"TextWidth": ((15, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMLeaderStyle(DispatchBaseClass):
	CLSID = IID('{0B9235CA-21CD-4797-A219-62E752D9DFB8}')
	coclass_clsid = IID('{F3C3049A-AADC-4F4E-B35E-B15AA27DA2E7}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"AlignSpace": (25, 2, (5, 0), (), "AlignSpace", None),
		"Annotative": (35, 2, (11, 0), (), "Annotative", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArrowSize": (19, 2, (5, 0), (), "ArrowSize", None),
		"ArrowSymbol": (18, 2, (8, 0), (), "ArrowSymbol", None),
		"BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
		"Block": (26, 2, (8, 0), (), "Block", None),
		# Method 'BlockColor' returns object of type 'IAcadAcCmColor'
		"BlockColor": (27, 2, (9, 0), (), "BlockColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"BlockConnectionType": (32, 2, (3, 0), (), "BlockConnectionType", None),
		"BlockRotation": (31, 2, (5, 0), (), "BlockRotation", None),
		"BlockScale": (29, 2, (5, 0), (), "BlockScale", None),
		"BreakSize": (36, 2, (5, 0), (), "BreakSize", None),
		"ContentType": (4, 2, (3, 0), (), "ContentType", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Description": (2, 2, (8, 0), (), "Description", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"DoglegLength": (17, 2, (5, 0), (), "DoglegLength", None),
		"DrawLeaderOrderType": (6, 2, (3, 0), (), "DrawLeaderOrderType", None),
		"DrawMLeaderOrderType": (5, 2, (3, 0), (), "DrawMLeaderOrderType", None),
		"EnableBlockRotation": (30, 2, (11, 0), (), "EnableBlockRotation", None),
		"EnableBlockScale": (28, 2, (11, 0), (), "EnableBlockScale", None),
		"EnableDogleg": (16, 2, (11, 0), (), "EnableDogleg", None),
		"EnableFrameText": (24, 2, (11, 0), (), "EnableFrameText", None),
		"EnableLanding": (14, 2, (11, 0), (), "EnableLanding", None),
		"FirstSegmentAngleConstraint": (8, 2, (3, 0), (), "FirstSegmentAngleConstraint", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"LandingGap": (15, 2, (5, 0), (), "LandingGap", None),
		# Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
		"LeaderLineColor": (11, 2, (9, 0), (), "LeaderLineColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"LeaderLineType": (10, 2, (3, 0), (), "LeaderLineType", None),
		"LeaderLineTypeId": (12, 2, (8, 0), (), "LeaderLineTypeId", None),
		"LeaderLineWeight": (13, 2, (3, 0), (), "LeaderLineWeight", None),
		"MaxLeaderSegmentsPoints": (7, 2, (3, 0), (), "MaxLeaderSegmentsPoints", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OverwritePropChanged": (34, 2, (11, 0), (), "OverwritePropChanged", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"ScaleFactor": (33, 2, (5, 0), (), "ScaleFactor", None),
		"SecondSegmentAngleConstraint": (9, 2, (3, 0), (), "SecondSegmentAngleConstraint", None),
		"TextAlignmentType": (39, 2, (3, 0), (), "TextAlignmentType", None),
		"TextAngleType": (38, 2, (3, 0), (), "TextAngleType", None),
		# Method 'TextColor' returns object of type 'IAcadAcCmColor'
		"TextColor": (22, 2, (9, 0), (), "TextColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"TextHeight": (23, 2, (5, 0), (), "TextHeight", None),
		"TextLeftAttachmentType": (21, 2, (3, 0), (), "TextLeftAttachmentType", None),
		"TextRightAttachmentType": (40, 2, (3, 0), (), "TextRightAttachmentType", None),
		"TextString": (37, 2, (8, 0), (), "TextString", None),
		"TextStyle": (20, 2, (8, 0), (), "TextStyle", None),
	}
	_prop_map_put_ = {
		"AlignSpace": ((25, LCID, 4, 0),()),
		"Annotative": ((35, LCID, 4, 0),()),
		"ArrowSize": ((19, LCID, 4, 0),()),
		"ArrowSymbol": ((18, LCID, 4, 0),()),
		"BitFlags": ((3, LCID, 4, 0),()),
		"Block": ((26, LCID, 4, 0),()),
		"BlockColor": ((27, LCID, 4, 0),()),
		"BlockConnectionType": ((32, LCID, 4, 0),()),
		"BlockRotation": ((31, LCID, 4, 0),()),
		"BlockScale": ((29, LCID, 4, 0),()),
		"BreakSize": ((36, LCID, 4, 0),()),
		"ContentType": ((4, LCID, 4, 0),()),
		"Description": ((2, LCID, 4, 0),()),
		"DoglegLength": ((17, LCID, 4, 0),()),
		"DrawLeaderOrderType": ((6, LCID, 4, 0),()),
		"DrawMLeaderOrderType": ((5, LCID, 4, 0),()),
		"EnableBlockRotation": ((30, LCID, 4, 0),()),
		"EnableBlockScale": ((28, LCID, 4, 0),()),
		"EnableDogleg": ((16, LCID, 4, 0),()),
		"EnableFrameText": ((24, LCID, 4, 0),()),
		"EnableLanding": ((14, LCID, 4, 0),()),
		"FirstSegmentAngleConstraint": ((8, LCID, 4, 0),()),
		"LandingGap": ((15, LCID, 4, 0),()),
		"LeaderLineColor": ((11, LCID, 4, 0),()),
		"LeaderLineType": ((10, LCID, 4, 0),()),
		"LeaderLineTypeId": ((12, LCID, 4, 0),()),
		"LeaderLineWeight": ((13, LCID, 4, 0),()),
		"MaxLeaderSegmentsPoints": ((7, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"ScaleFactor": ((33, LCID, 4, 0),()),
		"SecondSegmentAngleConstraint": ((9, LCID, 4, 0),()),
		"TextAlignmentType": ((39, LCID, 4, 0),()),
		"TextAngleType": ((38, LCID, 4, 0),()),
		"TextColor": ((22, LCID, 4, 0),()),
		"TextHeight": ((23, LCID, 4, 0),()),
		"TextLeftAttachmentType": ((21, LCID, 4, 0),()),
		"TextRightAttachmentType": ((40, LCID, 4, 0),()),
		"TextString": ((37, LCID, 4, 0),()),
		"TextStyle": ((20, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMLine(DispatchBaseClass):
	CLSID = IID('{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
	coclass_clsid = IID('{87F5CF8F-A06D-498F-A05F-E520E6B570DB}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (2, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Justification": (3, 2, (3, 0), (), "Justification", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"MLineScale": (4, 2, (5, 0), (), "MLineScale", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"StyleName": (1, 2, (8, 0), (), "StyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((2, LCID, 4, 0),()),
		"Justification": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"MLineScale": ((4, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMText(DispatchBaseClass):
	CLSID = IID('{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
	coclass_clsid = IID('{9906CDFC-DB2C-4126-9422-13139B148495}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def FieldCode(self):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(14, LCID, 1, (8, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"AttachmentPoint": (3, 2, (3, 0), (), "AttachmentPoint", None),
		"BackgroundFill": (13, 2, (11, 0), (), "BackgroundFill", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"DrawingDirection": (4, 2, (3, 0), (), "DrawingDirection", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (6, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (8, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LineSpacingDistance": (12, 2, (5, 0), (), "LineSpacingDistance", None),
		"LineSpacingFactor": (10, 2, (5, 0), (), "LineSpacingFactor", None),
		"LineSpacingStyle": (11, 2, (3, 0), (), "LineSpacingStyle", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (9, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (7, 2, (5, 0), (), "Rotation", None),
		"StyleName": (2, 2, (8, 0), (), "StyleName", None),
		"TextString": (1, 2, (8, 0), (), "TextString", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AttachmentPoint": ((3, LCID, 4, 0),()),
		"BackgroundFill": ((13, LCID, 4, 0),()),
		"DrawingDirection": ((4, LCID, 4, 0),()),
		"Height": ((6, LCID, 4, 0),()),
		"InsertionPoint": ((8, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LineSpacingDistance": ((12, LCID, 4, 0),()),
		"LineSpacingFactor": ((10, LCID, 4, 0),()),
		"LineSpacingStyle": ((11, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((9, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((7, LCID, 4, 0),()),
		"StyleName": ((2, LCID, 4, 0),()),
		"TextString": ((1, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMaterial(DispatchBaseClass):
	CLSID = IID('{5E69D338-33B4-40D3-9D02-ADA45791E720}')
	coclass_clsid = IID('{76193B93-A799-44D6-96F2-76742437E097}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Description": (1, 2, (8, 0), (), "Description", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"Description": ((1, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMaterials(DispatchBaseClass):
	CLSID = IID('{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}')
	coclass_clsid = IID('{1CFD327B-45B3-4FD5-90B2-F89A57052783}')

	# Result is of type IAcadMaterial
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5E69D338-33B4-40D3-9D02-ADA45791E720}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadMaterial
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5E69D338-33B4-40D3-9D02-ADA45791E720}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{5E69D338-33B4-40D3-9D02-ADA45791E720}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5E69D338-33B4-40D3-9D02-ADA45791E720}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadMenuBar(DispatchBaseClass):
	CLSID = IID('{BD7E485E-3CD1-4DD5-9959-EB76B03024A5}')
	coclass_clsid = IID('{64B283AE-0D0B-4C24-9E94-B2F26C210C0E}')

	# Result is of type IAcadPopupMenu
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IAcadApplication'
		"Parent": (1610743812, 2, (9, 0), (), "Parent", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadMenuGroup(DispatchBaseClass):
	CLSID = IID('{D6261081-12FD-49ED-A359-D990DF71949D}')
	coclass_clsid = IID('{6BD98AF5-A2B2-46A2-87EE-C3CB29A5A9CC}')

	def Save(self, MenuFileType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((3, 1),),MenuFileType
			)

	def SaveAs(self, MenuFileName=defaultNamedNotOptArg, MenuFileType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (24, 0), ((8, 1), (3, 1)),MenuFileName
			, MenuFileType)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"MenuFileName": (1610743812, 2, (8, 0), (), "MenuFileName", None),
		# Method 'Menus' returns object of type 'IAcadPopupMenus'
		"Menus": (1610743813, 2, (9, 0), (), "Menus", '{984C0B3E-F861-403A-A0FD-E332A7EC0CF3}'),
		"Name": (1610743810, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IAcadMenuGroups'
		"Parent": (1610743809, 2, (9, 0), (), "Parent", '{38931362-4638-4A2F-8201-E7B2AA52CA37}'),
		# Method 'Toolbars' returns object of type 'IAcadToolbars'
		"Toolbars": (1610743814, 2, (9, 0), (), "Toolbars", '{1081A53F-2A08-4767-A131-08831AE62035}'),
		"Type": (1610743811, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadMenuGroups(DispatchBaseClass):
	CLSID = IID('{38931362-4638-4A2F-8201-E7B2AA52CA37}')
	coclass_clsid = IID('{E2DA6C15-C324-457C-A136-69279E9C394E}')

	# Result is of type IAcadMenuGroup
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D6261081-12FD-49ED-A359-D990DF71949D}')
		return ret

	# Result is of type IAcadMenuGroup
	def Load(self, MenuFileName=defaultNamedNotOptArg, BaseMenu=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1), (12, 17)),MenuFileName
			, BaseMenu)
		if ret is not None:
			ret = Dispatch(ret, 'Load', '{D6261081-12FD-49ED-A359-D990DF71949D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IAcadApplication'
		"Parent": (1610743812, 2, (9, 0), (), "Parent", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D6261081-12FD-49ED-A359-D990DF71949D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D6261081-12FD-49ED-A359-D990DF71949D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadModelSpace(DispatchBaseClass):
	CLSID = IID('{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}')
	coclass_clsid = IID('{B5EE2B68-9A23-4BCD-BB77-FEA6DFB24DD6}')

	# Result is of type IAcad3DFace
	def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DFace', '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
		return ret

	# Result is of type IAcadPolygonMesh
	def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
			, N, PointsMatrix)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DMesh', '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
		return ret

	# Result is of type IAcad3DPolyline
	def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DPoly', '{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
		return ret

	# Result is of type IAcadArc
	def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Radius, StartAngle, EndAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddArc', '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
		return ret

	# Result is of type IAcadAttribute
	def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
			, Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
			, Mode, Prompt, InsertionPoint, Tag, Value
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddAttribute', '{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
		return ret

	# Result is of type IAcad3DSolid
	def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddBox', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadCircle
	def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddCircle', '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
		return ret

	# Result is of type IAcad3DSolid
	def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, BaseRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomObject', None)
		return ret

	# Result is of type IAcad3DSolid
	def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Radius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadDim3PointAngular
	def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDim3PointAngular', '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
		return ret

	# Result is of type IAcadDimAligned
	def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
			, ExtLine2Point, TextPosition)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAligned', '{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
		return ret

	# Result is of type IAcadDimAngular
	def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAngular', '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
		return ret

	# Result is of type IAcadDimArcLength
	def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
			, FirstEndPoint, SecondEndPoint, ArcPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimArc', '{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
		return ret

	# Result is of type IAcadDimDiametric
	def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
			, FarChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimDiametric', '{CE984151-66ED-4500-B99D-85ACCEC10820}')
		return ret

	# Result is of type IAcadDimOrdinate
	def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
			, LeaderEndPoint, UseXAxis)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimOrdinate', '{8BBE360E-DC9A-4640-8597-C54166887E54}')
		return ret

	# Result is of type IAcadDimRadial
	def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadial', '{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
		return ret

	# Result is of type IAcadDimRadialLarge
	def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
			, JogAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, OverrideCenter, JogPoint, JogAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadialLarge', '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
		return ret

	# Result is of type IAcadDimRotated
	def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
			, ExtLine2Point, DimLineLocation, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRotated', '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
		return ret

	# Result is of type IAcadEllipse
	def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, MajorAxis, RadiusRatio)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipse', '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
			, Height, TaperAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
			, Path)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadHatch
	def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
			, PatternName, Associativity, HatchObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddHatch', '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
		return ret

	# Result is of type IAcadLeader
	def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
			, Annotation, Type)
		if ret is not None:
			ret = Dispatch(ret, 'AddLeader', '{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
		return ret

	# Result is of type IAcadLWPolyline
	def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLightWeightPolyline', '{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
		return ret

	# Result is of type IAcadLine
	def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
		return ret

	# Result is of type IAcadMInsertBlock
	def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
			, ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMInsertBlock', '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
		return ret

	# Result is of type IAcadMLine
	def AddMLine(self, VertexList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMLine', '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
		return ret

	# Result is of type IAcadMText
	def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
			, Width, Text)
		if ret is not None:
			ret = Dispatch(ret, 'AddMText', '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
		return ret

	# Result is of type IAcadPoint
	def AddPoint(self, Point=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
		return ret

	# Result is of type IAcadPolyfaceMesh
	def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
			, FaceList)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyfaceMesh', '{60A35C35-64B5-4751-99E7-259879896519}')
		return ret

	# Result is of type IAcadPolyline
	def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{A09B5650-3A79-41F7-A459-1817D6F1797C}')
		return ret

	# Result is of type IAcadRasterImage
	def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRaster', '{EE3833FA-927E-4272-A918-8B487E445600}')
		return ret

	# Result is of type IAcadRay
	def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddRay', '{BE71C3CD-270F-4A01-86F4-91694B267C19}')
		return ret

	def AddRegion(self, ObjectList=defaultNamedNotOptArg):
		return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
			)

	# Result is of type IAcad3DSolid
	def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
			, AxisPoint, AxisDir, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRevolvedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSection
	def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
			, ToPoint, planeVector)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	# Result is of type IAcadShape
	def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
		return ret

	# Result is of type IAcadSolid
	def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'AddSolid', '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
		return ret

	# Result is of type IAcad3DSolid
	def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddSphere', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSpline
	def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
			, StartTangent, EndTangent)
		if ret is not None:
			ret = Dispatch(ret, 'AddSpline', '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
		return ret

	# Result is of type IAcadTable
	def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
			, ColWidth=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
			, NumRows, NumColumns, RowHeight, ColWidth)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{187D4409-BABE-43D8-8379-2AF11136DA16}')
		return ret

	# Result is of type IAcadText
	def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
			, InsertionPoint, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddText', '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
		return ret

	# Result is of type IAcadTolerance
	def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
			, InsertionPoint, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'AddTolerance', '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
		return ret

	# Result is of type IAcad3DSolid
	def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, TorusRadius, TubeRadius)
		if ret is not None:
			ret = Dispatch(ret, 'AddTorus', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadTrace
	def AddTrace(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTrace', '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
		return ret

	# Result is of type IAcad3DSolid
	def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddWedge', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadXline
	def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddXline', '{96FC51A1-B610-406F-990D-0652F53758A9}')
		return ret

	# Result is of type IAcadExternalReference
	def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
			, Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
			, Name, InsertionPoint, Xscale, Yscale, Zscale
			, Rotation, bOverlay, Password)
		if ret is not None:
			ret = Dispatch(ret, 'AttachExternalReference', '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
		return ret

	def Bind(self, bPrefixName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Detach(self):
		return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlockReference
	def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'InsertBlock', '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
		return ret

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def Reload(self):
		return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
		"Comments": (1597, 2, (8, 0), (), "Comments", None),
		"Count": (1536, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Explodable": (1599, 2, (11, 0), (), "Explodable", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
		"IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
		"IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
		# Method 'Layout' returns object of type 'IAcadLayout'
		"Layout": (1583, 2, (9, 0), (), "Layout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		"Name": (1537, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (1538, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (1596, 2, (8, 0), (), "Path", None),
		"Units": (1598, 2, (3, 0), (), "Units", None),
		# Method 'XRefDatabase' returns object of type 'IAcadDatabase'
		"XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
	}
	_prop_map_put_ = {
		"BlockScaling": ((1600, LCID, 4, 0),()),
		"Comments": ((1597, LCID, 4, 0),()),
		"Explodable": ((1599, LCID, 4, 0),()),
		"Name": ((1537, LCID, 4, 0),()),
		"Origin": ((1538, LCID, 4, 0),()),
		"Path": ((1596, LCID, 4, 0),()),
		"Units": ((1598, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadModelSpace2(DispatchBaseClass):
	CLSID = IID('{21F271F8-DBE9-4842-AB00-A4878F60255F}')
	coclass_clsid = IID('{B5EE2B68-9A23-4BCD-BB77-FEA6DFB24DD6}')

	# Result is of type IAcad3DFace
	def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DFace', '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
		return ret

	# Result is of type IAcadPolygonMesh
	def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
			, N, PointsMatrix)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DMesh', '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
		return ret

	# Result is of type IAcad3DPolyline
	def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DPoly', '{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
		return ret

	# Result is of type IAcadArc
	def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Radius, StartAngle, EndAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddArc', '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
		return ret

	# Result is of type IAcadAttribute
	def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
			, Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
			, Mode, Prompt, InsertionPoint, Tag, Value
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddAttribute', '{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
		return ret

	# Result is of type IAcad3DSolid
	def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddBox', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadCircle
	def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddCircle', '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
		return ret

	# Result is of type IAcad3DSolid
	def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, BaseRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomObject', None)
		return ret

	# Result is of type IAcad3DSolid
	def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Radius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadDim3PointAngular
	def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDim3PointAngular', '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
		return ret

	# Result is of type IAcadDimAligned
	def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
			, ExtLine2Point, TextPosition)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAligned', '{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
		return ret

	# Result is of type IAcadDimAngular
	def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAngular', '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
		return ret

	# Result is of type IAcadDimArcLength
	def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
			, FirstEndPoint, SecondEndPoint, ArcPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimArc', '{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
		return ret

	# Result is of type IAcadDimDiametric
	def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
			, FarChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimDiametric', '{CE984151-66ED-4500-B99D-85ACCEC10820}')
		return ret

	# Result is of type IAcadDimOrdinate
	def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
			, LeaderEndPoint, UseXAxis)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimOrdinate', '{8BBE360E-DC9A-4640-8597-C54166887E54}')
		return ret

	# Result is of type IAcadDimRadial
	def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadial', '{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
		return ret

	# Result is of type IAcadDimRadialLarge
	def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
			, JogAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, OverrideCenter, JogPoint, JogAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadialLarge', '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
		return ret

	# Result is of type IAcadDimRotated
	def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
			, ExtLine2Point, DimLineLocation, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRotated', '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
		return ret

	# Result is of type IAcadEllipse
	def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, MajorAxis, RadiusRatio)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipse', '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
			, Height, TaperAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
			, Path)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadHatch
	def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
			, PatternName, Associativity, HatchObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddHatch', '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
		return ret

	# Result is of type IAcadLeader
	def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
			, Annotation, Type)
		if ret is not None:
			ret = Dispatch(ret, 'AddLeader', '{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
		return ret

	# Result is of type IAcadLWPolyline
	def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLightWeightPolyline', '{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
		return ret

	# Result is of type IAcadLine
	def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
		return ret

	# Result is of type IAcadMInsertBlock
	def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
			, ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMInsertBlock', '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
		return ret

	# Result is of type IAcadMLeader
	def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
		return self._ApplyTypes_(1, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{B125D293-E039-4D19-B975-1C4A8841C5AB}',PointsArray
			, leaderLineIndex)

	# Result is of type IAcadMLine
	def AddMLine(self, VertexList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMLine', '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
		return ret

	# Result is of type IAcadMText
	def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
			, Width, Text)
		if ret is not None:
			ret = Dispatch(ret, 'AddMText', '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
		return ret

	# Result is of type IAcadPoint
	def AddPoint(self, Point=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
		return ret

	# Result is of type IAcadPolyfaceMesh
	def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
			, FaceList)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyfaceMesh', '{60A35C35-64B5-4751-99E7-259879896519}')
		return ret

	# Result is of type IAcadPolyline
	def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{A09B5650-3A79-41F7-A459-1817D6F1797C}')
		return ret

	# Result is of type IAcadRasterImage
	def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRaster', '{EE3833FA-927E-4272-A918-8B487E445600}')
		return ret

	# Result is of type IAcadRay
	def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddRay', '{BE71C3CD-270F-4A01-86F4-91694B267C19}')
		return ret

	def AddRegion(self, ObjectList=defaultNamedNotOptArg):
		return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
			)

	# Result is of type IAcad3DSolid
	def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
			, AxisPoint, AxisDir, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRevolvedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSection
	def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
			, ToPoint, planeVector)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	# Result is of type IAcadShape
	def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
		return ret

	# Result is of type IAcadSolid
	def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'AddSolid', '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
		return ret

	# Result is of type IAcad3DSolid
	def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddSphere', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSpline
	def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
			, StartTangent, EndTangent)
		if ret is not None:
			ret = Dispatch(ret, 'AddSpline', '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
		return ret

	# Result is of type IAcadTable
	def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
			, ColWidth=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
			, NumRows, NumColumns, RowHeight, ColWidth)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{187D4409-BABE-43D8-8379-2AF11136DA16}')
		return ret

	# Result is of type IAcadText
	def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
			, InsertionPoint, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddText', '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
		return ret

	# Result is of type IAcadTolerance
	def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
			, InsertionPoint, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'AddTolerance', '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
		return ret

	# Result is of type IAcad3DSolid
	def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, TorusRadius, TubeRadius)
		if ret is not None:
			ret = Dispatch(ret, 'AddTorus', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadTrace
	def AddTrace(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTrace', '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
		return ret

	# Result is of type IAcad3DSolid
	def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddWedge', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadXline
	def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddXline', '{96FC51A1-B610-406F-990D-0652F53758A9}')
		return ret

	# Result is of type IAcadExternalReference
	def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
			, Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
			, Name, InsertionPoint, Xscale, Yscale, Zscale
			, Rotation, bOverlay, Password)
		if ret is not None:
			ret = Dispatch(ret, 'AttachExternalReference', '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
		return ret

	def Bind(self, bPrefixName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Detach(self):
		return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlockReference
	def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'InsertBlock', '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
		return ret

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def Reload(self):
		return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
		"Comments": (1597, 2, (8, 0), (), "Comments", None),
		"Count": (1536, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Explodable": (1599, 2, (11, 0), (), "Explodable", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
		"IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
		"IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
		# Method 'Layout' returns object of type 'IAcadLayout'
		"Layout": (1583, 2, (9, 0), (), "Layout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		"Name": (1537, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (1538, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (1596, 2, (8, 0), (), "Path", None),
		"Units": (1598, 2, (3, 0), (), "Units", None),
		# Method 'XRefDatabase' returns object of type 'IAcadDatabase'
		"XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
	}
	_prop_map_put_ = {
		"BlockScaling": ((1600, LCID, 4, 0),()),
		"Comments": ((1597, LCID, 4, 0),()),
		"Explodable": ((1599, LCID, 4, 0),()),
		"Name": ((1537, LCID, 4, 0),()),
		"Origin": ((1538, LCID, 4, 0),()),
		"Path": ((1596, LCID, 4, 0),()),
		"Units": ((1598, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadObject(DispatchBaseClass):
	CLSID = IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')
	coclass_clsid = IID('{9A21C6C5-27FC-4442-8590-575E7AFD73BB}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadOle(DispatchBaseClass):
	CLSID = IID('{83DA5978-433D-4873-B80A-E353D0AEC540}')
	coclass_clsid = IID('{475C7B4A-6964-4F9E-9708-05A16EAC31D0}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"LockAspectRatio": (7, 2, (11, 0), (), "LockAspectRatio", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OleItemType": (8, 2, (3, 0), (), "OleItemType", None),
		"OlePlotQuality": (9, 2, (3, 0), (), "OlePlotQuality", None),
		"OleSourceApp": (10, 2, (8, 0), (), "OleSourceApp", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (2, 2, (5, 0), (), "Rotation", None),
		"ScaleHeight": (6, 2, (5, 0), (), "ScaleHeight", None),
		"ScaleWidth": (5, 2, (5, 0), (), "ScaleWidth", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (3, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Height": ((4, LCID, 4, 0),()),
		"InsertionPoint": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"LockAspectRatio": ((7, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"OleItemType": ((8, LCID, 4, 0),()),
		"OlePlotQuality": ((9, LCID, 4, 0),()),
		"OleSourceApp": ((10, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((2, LCID, 4, 0),()),
		"ScaleHeight": ((6, LCID, 4, 0),()),
		"ScaleWidth": ((5, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Width": ((3, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPViewport(DispatchBaseClass):
	CLSID = IID('{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}')
	coclass_clsid = IID('{F196F03F-651A-43AF-BE34-D11942F24445}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Display(self, bStatus=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((11, 1),),bStatus
			)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
		return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
			, YSpacing)

	def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
		return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
			, YSpacing)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
			, YSpacing)

	def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
			, YSpacing)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def SyncModelView(self):
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArcSmoothness": (27, 2, (3, 0), (), "ArcSmoothness", None),
		"Center": (1, 2, (12, 0), (), "Center", None),
		"Clipped": (7, 2, (11, 0), (), "Clipped", None),
		"CustomScale": (10, 2, (5, 0), (), "CustomScale", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (2, 2, (12, 0), (), "Direction", None),
		"DisplayLocked": (8, 2, (11, 0), (), "DisplayLocked", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"GridOn": (3, 2, (11, 0), (), "GridOn", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HasSheetView": (35, 2, (11, 0), (), "HasSheetView", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"LabelBlockId": (34, 2, (3, 0), (), "LabelBlockId", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LensLength": (24, 2, (5, 0), (), "LensLength", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		# Method 'ModelView' returns object of type 'IAcadView'
		"ModelView": (32, 2, (9, 0), (), "ModelView", '{B189A3C4-324E-4130-8516-381635BE10EF}'),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"RemoveHiddenLines": (25, 2, (11, 0), (), "RemoveHiddenLines", None),
		"ShadePlot": (29, 2, (3, 0), (), "ShadePlot", None),
		# Method 'SheetView' returns object of type 'IAcadView'
		"SheetView": (33, 2, (9, 0), (), "SheetView", '{B189A3C4-324E-4130-8516-381635BE10EF}'),
		"SnapBasePoint": (13, 2, (12, 0), (), "SnapBasePoint", None),
		"SnapOn": (14, 2, (11, 0), (), "SnapOn", None),
		"SnapRotationAngle": (15, 2, (5, 0), (), "SnapRotationAngle", None),
		"StandardScale": (9, 2, (3, 0), (), "StandardScale", None),
		"StyleSheet": (11, 2, (8, 0), (), "StyleSheet", None),
		"Target": (26, 2, (12, 0), (), "Target", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"TwistAngle": (23, 2, (5, 0), (), "TwistAngle", None),
		"UCSIconAtOrigin": (17, 2, (11, 0), (), "UCSIconAtOrigin", None),
		"UCSIconOn": (16, 2, (11, 0), (), "UCSIconOn", None),
		"UCSPerViewport": (12, 2, (11, 0), (), "UCSPerViewport", None),
		"ViewportOn": (6, 2, (11, 0), (), "ViewportOn", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"VisualStyle": (28, 2, (3, 0), (), "VisualStyle", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"ArcSmoothness": ((27, LCID, 4, 0),()),
		"Center": ((1, LCID, 4, 0),()),
		"CustomScale": ((10, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"DisplayLocked": ((8, LCID, 4, 0),()),
		"GridOn": ((3, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"LabelBlockId": ((34, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LensLength": ((24, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"ModelView": ((32, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"RemoveHiddenLines": ((25, LCID, 4, 0),()),
		"ShadePlot": ((29, LCID, 4, 0),()),
		"SheetView": ((33, LCID, 4, 0),()),
		"SnapBasePoint": ((13, LCID, 4, 0),()),
		"SnapOn": ((14, LCID, 4, 0),()),
		"SnapRotationAngle": ((15, LCID, 4, 0),()),
		"StandardScale": ((9, LCID, 4, 0),()),
		"StyleSheet": ((11, LCID, 4, 0),()),
		"Target": ((26, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"TwistAngle": ((23, LCID, 4, 0),()),
		"UCSIconAtOrigin": ((17, LCID, 4, 0),()),
		"UCSIconOn": ((16, LCID, 4, 0),()),
		"UCSPerViewport": ((12, LCID, 4, 0),()),
		"ViewportOn": ((6, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"VisualStyle": ((28, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPViewport2(DispatchBaseClass):
	CLSID = IID('{205DDA5F-EE89-4A11-8FCF-08826611B374}')
	coclass_clsid = IID('{F196F03F-651A-43AF-BE34-D11942F24445}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Display(self, bStatus=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((11, 1),),bStatus
			)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
		return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
			, YSpacing)

	def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
		return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
			, YSpacing)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
			, YSpacing)

	def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
			, YSpacing)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def SyncModelView(self):
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArcSmoothness": (27, 2, (3, 0), (), "ArcSmoothness", None),
		"Center": (1, 2, (12, 0), (), "Center", None),
		"Clipped": (7, 2, (11, 0), (), "Clipped", None),
		"CustomScale": (10, 2, (5, 0), (), "CustomScale", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (2, 2, (12, 0), (), "Direction", None),
		"DisplayLocked": (8, 2, (11, 0), (), "DisplayLocked", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"GridOn": (3, 2, (11, 0), (), "GridOn", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HasSheetView": (35, 2, (11, 0), (), "HasSheetView", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"LabelBlockId": (34, 2, (3, 0), (), "LabelBlockId", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"LayerPropertyOverrides": (37, 2, (11, 0), (), "LayerPropertyOverrides", None),
		"LensLength": (24, 2, (5, 0), (), "LensLength", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		# Method 'ModelView' returns object of type 'IAcadView'
		"ModelView": (32, 2, (9, 0), (), "ModelView", '{B189A3C4-324E-4130-8516-381635BE10EF}'),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"RemoveHiddenLines": (25, 2, (11, 0), (), "RemoveHiddenLines", None),
		"ShadePlot": (29, 2, (3, 0), (), "ShadePlot", None),
		# Method 'SheetView' returns object of type 'IAcadView'
		"SheetView": (33, 2, (9, 0), (), "SheetView", '{B189A3C4-324E-4130-8516-381635BE10EF}'),
		"SnapBasePoint": (13, 2, (12, 0), (), "SnapBasePoint", None),
		"SnapOn": (14, 2, (11, 0), (), "SnapOn", None),
		"SnapRotationAngle": (15, 2, (5, 0), (), "SnapRotationAngle", None),
		"StandardScale": (9, 2, (3, 0), (), "StandardScale", None),
		"StyleSheet": (11, 2, (8, 0), (), "StyleSheet", None),
		"Target": (26, 2, (12, 0), (), "Target", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"TwistAngle": (23, 2, (5, 0), (), "TwistAngle", None),
		"UCSIconAtOrigin": (17, 2, (11, 0), (), "UCSIconAtOrigin", None),
		"UCSIconOn": (16, 2, (11, 0), (), "UCSIconOn", None),
		"UCSPerViewport": (12, 2, (11, 0), (), "UCSPerViewport", None),
		"ViewportOn": (6, 2, (11, 0), (), "ViewportOn", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"VisualStyle": (28, 2, (3, 0), (), "VisualStyle", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"ArcSmoothness": ((27, LCID, 4, 0),()),
		"Center": ((1, LCID, 4, 0),()),
		"CustomScale": ((10, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"DisplayLocked": ((8, LCID, 4, 0),()),
		"GridOn": ((3, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"LabelBlockId": ((34, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"LensLength": ((24, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"ModelView": ((32, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"RemoveHiddenLines": ((25, LCID, 4, 0),()),
		"ShadePlot": ((29, LCID, 4, 0),()),
		"SheetView": ((33, LCID, 4, 0),()),
		"SnapBasePoint": ((13, LCID, 4, 0),()),
		"SnapOn": ((14, LCID, 4, 0),()),
		"SnapRotationAngle": ((15, LCID, 4, 0),()),
		"StandardScale": ((9, LCID, 4, 0),()),
		"StyleSheet": ((11, LCID, 4, 0),()),
		"Target": ((26, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"TwistAngle": ((23, LCID, 4, 0),()),
		"UCSIconAtOrigin": ((17, LCID, 4, 0),()),
		"UCSIconOn": ((16, LCID, 4, 0),()),
		"UCSPerViewport": ((12, LCID, 4, 0),()),
		"ViewportOn": ((6, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"VisualStyle": ((28, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPaperSpace(DispatchBaseClass):
	CLSID = IID('{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}')
	coclass_clsid = IID('{FE317223-8EDE-4684-B424-E48B9EA90220}')

	# Result is of type IAcad3DFace
	def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DFace', '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
		return ret

	# Result is of type IAcadPolygonMesh
	def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
			, N, PointsMatrix)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DMesh', '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
		return ret

	# Result is of type IAcad3DPolyline
	def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DPoly', '{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
		return ret

	# Result is of type IAcadArc
	def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Radius, StartAngle, EndAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddArc', '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
		return ret

	# Result is of type IAcadAttribute
	def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
			, Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
			, Mode, Prompt, InsertionPoint, Tag, Value
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddAttribute', '{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
		return ret

	# Result is of type IAcad3DSolid
	def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddBox', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadCircle
	def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddCircle', '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
		return ret

	# Result is of type IAcad3DSolid
	def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, BaseRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomObject', None)
		return ret

	# Result is of type IAcad3DSolid
	def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Radius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadDim3PointAngular
	def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDim3PointAngular', '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
		return ret

	# Result is of type IAcadDimAligned
	def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
			, ExtLine2Point, TextPosition)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAligned', '{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
		return ret

	# Result is of type IAcadDimAngular
	def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAngular', '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
		return ret

	# Result is of type IAcadDimArcLength
	def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
			, FirstEndPoint, SecondEndPoint, ArcPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimArc', '{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
		return ret

	# Result is of type IAcadDimDiametric
	def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
			, FarChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimDiametric', '{CE984151-66ED-4500-B99D-85ACCEC10820}')
		return ret

	# Result is of type IAcadDimOrdinate
	def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
			, LeaderEndPoint, UseXAxis)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimOrdinate', '{8BBE360E-DC9A-4640-8597-C54166887E54}')
		return ret

	# Result is of type IAcadDimRadial
	def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadial', '{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
		return ret

	# Result is of type IAcadDimRadialLarge
	def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
			, JogAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, OverrideCenter, JogPoint, JogAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadialLarge', '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
		return ret

	# Result is of type IAcadDimRotated
	def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
			, ExtLine2Point, DimLineLocation, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRotated', '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
		return ret

	# Result is of type IAcadEllipse
	def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, MajorAxis, RadiusRatio)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipse', '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
			, Height, TaperAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
			, Path)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadHatch
	def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
			, PatternName, Associativity, HatchObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddHatch', '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
		return ret

	# Result is of type IAcadLeader
	def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
			, Annotation, Type)
		if ret is not None:
			ret = Dispatch(ret, 'AddLeader', '{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
		return ret

	# Result is of type IAcadLWPolyline
	def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLightWeightPolyline', '{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
		return ret

	# Result is of type IAcadLine
	def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
		return ret

	# Result is of type IAcadMInsertBlock
	def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
			, ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMInsertBlock', '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
		return ret

	# Result is of type IAcadMLine
	def AddMLine(self, VertexList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMLine', '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
		return ret

	# Result is of type IAcadMText
	def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
			, Width, Text)
		if ret is not None:
			ret = Dispatch(ret, 'AddMText', '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
		return ret

	# Result is of type IAcadPViewport
	def AddPViewport(self, Center=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddPViewport', '{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}')
		return ret

	# Result is of type IAcadPoint
	def AddPoint(self, Point=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
		return ret

	# Result is of type IAcadPolyfaceMesh
	def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
			, FaceList)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyfaceMesh', '{60A35C35-64B5-4751-99E7-259879896519}')
		return ret

	# Result is of type IAcadPolyline
	def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{A09B5650-3A79-41F7-A459-1817D6F1797C}')
		return ret

	# Result is of type IAcadRasterImage
	def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRaster', '{EE3833FA-927E-4272-A918-8B487E445600}')
		return ret

	# Result is of type IAcadRay
	def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddRay', '{BE71C3CD-270F-4A01-86F4-91694B267C19}')
		return ret

	def AddRegion(self, ObjectList=defaultNamedNotOptArg):
		return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
			)

	# Result is of type IAcad3DSolid
	def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
			, AxisPoint, AxisDir, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRevolvedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSection
	def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
			, ToPoint, planeVector)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	# Result is of type IAcadShape
	def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
		return ret

	# Result is of type IAcadSolid
	def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'AddSolid', '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
		return ret

	# Result is of type IAcad3DSolid
	def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddSphere', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSpline
	def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
			, StartTangent, EndTangent)
		if ret is not None:
			ret = Dispatch(ret, 'AddSpline', '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
		return ret

	# Result is of type IAcadTable
	def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
			, ColWidth=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
			, NumRows, NumColumns, RowHeight, ColWidth)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{187D4409-BABE-43D8-8379-2AF11136DA16}')
		return ret

	# Result is of type IAcadText
	def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
			, InsertionPoint, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddText', '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
		return ret

	# Result is of type IAcadTolerance
	def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
			, InsertionPoint, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'AddTolerance', '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
		return ret

	# Result is of type IAcad3DSolid
	def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, TorusRadius, TubeRadius)
		if ret is not None:
			ret = Dispatch(ret, 'AddTorus', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadTrace
	def AddTrace(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTrace', '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
		return ret

	# Result is of type IAcad3DSolid
	def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddWedge', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadXline
	def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddXline', '{96FC51A1-B610-406F-990D-0652F53758A9}')
		return ret

	# Result is of type IAcadExternalReference
	def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
			, Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
			, Name, InsertionPoint, Xscale, Yscale, Zscale
			, Rotation, bOverlay, Password)
		if ret is not None:
			ret = Dispatch(ret, 'AttachExternalReference', '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
		return ret

	def Bind(self, bPrefixName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Detach(self):
		return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlockReference
	def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'InsertBlock', '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
		return ret

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def Reload(self):
		return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
		"Comments": (1597, 2, (8, 0), (), "Comments", None),
		"Count": (1536, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Explodable": (1599, 2, (11, 0), (), "Explodable", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
		"IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
		"IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
		# Method 'Layout' returns object of type 'IAcadLayout'
		"Layout": (1583, 2, (9, 0), (), "Layout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		"Name": (1537, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (1538, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (1596, 2, (8, 0), (), "Path", None),
		"Units": (1598, 2, (3, 0), (), "Units", None),
		# Method 'XRefDatabase' returns object of type 'IAcadDatabase'
		"XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
	}
	_prop_map_put_ = {
		"BlockScaling": ((1600, LCID, 4, 0),()),
		"Comments": ((1597, LCID, 4, 0),()),
		"Explodable": ((1599, LCID, 4, 0),()),
		"Name": ((1537, LCID, 4, 0),()),
		"Origin": ((1538, LCID, 4, 0),()),
		"Path": ((1596, LCID, 4, 0),()),
		"Units": ((1598, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadPaperSpace2(DispatchBaseClass):
	CLSID = IID('{9B075CA3-4499-40CC-A377-BC000455F59E}')
	coclass_clsid = IID('{FE317223-8EDE-4684-B424-E48B9EA90220}')

	# Result is of type IAcad3DFace
	def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DFace', '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')
		return ret

	# Result is of type IAcadPolygonMesh
	def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
			, N, PointsMatrix)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DMesh', '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
		return ret

	# Result is of type IAcad3DPolyline
	def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DPoly', '{B89275F4-543E-4EAF-A931-DAB1341A2B67}')
		return ret

	# Result is of type IAcadArc
	def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Radius, StartAngle, EndAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddArc', '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')
		return ret

	# Result is of type IAcadAttribute
	def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
			, Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
			, Mode, Prompt, InsertionPoint, Tag, Value
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddAttribute', '{090C78C3-33E1-451B-B00F-A58F7B62DA00}')
		return ret

	# Result is of type IAcad3DSolid
	def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddBox', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadCircle
	def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddCircle', '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')
		return ret

	# Result is of type IAcad3DSolid
	def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, BaseRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomObject', None)
		return ret

	# Result is of type IAcad3DSolid
	def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Radius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadDim3PointAngular
	def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDim3PointAngular', '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')
		return ret

	# Result is of type IAcadDimAligned
	def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
			, ExtLine2Point, TextPosition)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAligned', '{AB6BA922-5284-4D66-8D31-6E732B1645CC}')
		return ret

	# Result is of type IAcadDimAngular
	def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
			, FirstEndPoint, SecondEndPoint, TextPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimAngular', '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')
		return ret

	# Result is of type IAcadDimArcLength
	def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
			, FirstEndPoint, SecondEndPoint, ArcPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimArc', '{FFCEA1F0-1C70-4342-9C14-929923139F4C}')
		return ret

	# Result is of type IAcadDimDiametric
	def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
			, FarChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimDiametric', '{CE984151-66ED-4500-B99D-85ACCEC10820}')
		return ret

	# Result is of type IAcadDimOrdinate
	def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
			, LeaderEndPoint, UseXAxis)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimOrdinate', '{8BBE360E-DC9A-4640-8597-C54166887E54}')
		return ret

	# Result is of type IAcadDimRadial
	def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, LeaderLength)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadial', '{FC56A33B-1DC1-42FE-B848-D469E375FC44}')
		return ret

	# Result is of type IAcadDimRadialLarge
	def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
			, JogAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
			, ChordPoint, OverrideCenter, JogPoint, JogAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRadialLarge', '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')
		return ret

	# Result is of type IAcadDimRotated
	def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
			, ExtLine2Point, DimLineLocation, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddDimRotated', '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')
		return ret

	# Result is of type IAcadEllipse
	def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
			, MajorAxis, RadiusRatio)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipse', '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCone', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, MajorRadius, MinorRadius, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddEllipticalCylinder', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
			, Height, TaperAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcad3DSolid
	def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
			, Path)
		if ret is not None:
			ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadHatch
	def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
			, PatternName, Associativity, HatchObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddHatch', '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')
		return ret

	# Result is of type IAcadLeader
	def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
			, Annotation, Type)
		if ret is not None:
			ret = Dispatch(ret, 'AddLeader', '{D035FBCB-313A-4165-86A7-AAD91DA820E5}')
		return ret

	# Result is of type IAcadLWPolyline
	def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLightWeightPolyline', '{82DEE429-1C13-460B-88FA-C63E0CA33D21}')
		return ret

	# Result is of type IAcadLine
	def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')
		return ret

	# Result is of type IAcadMInsertBlock
	def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
			, ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMInsertBlock', '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')
		return ret

	# Result is of type IAcadMLeader
	def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
		return self._ApplyTypes_(2, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{B125D293-E039-4D19-B975-1C4A8841C5AB}',PointsArray
			, leaderLineIndex)

	# Result is of type IAcadMLine
	def AddMLine(self, VertexList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddMLine', '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')
		return ret

	# Result is of type IAcadMText
	def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
			, Width, Text)
		if ret is not None:
			ret = Dispatch(ret, 'AddMText', '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')
		return ret

	# Result is of type IAcadPViewport
	def AddPViewport(self, Center=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddPViewport', '{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}')
		return ret

	# Result is of type IAcadPoint
	def AddPoint(self, Point=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
		return ret

	# Result is of type IAcadPolyfaceMesh
	def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
			, FaceList)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyfaceMesh', '{60A35C35-64B5-4751-99E7-259879896519}')
		return ret

	# Result is of type IAcadPolyline
	def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{A09B5650-3A79-41F7-A459-1817D6F1797C}')
		return ret

	# Result is of type IAcadRasterImage
	def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRaster', '{EE3833FA-927E-4272-A918-8B487E445600}')
		return ret

	# Result is of type IAcadRay
	def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddRay', '{BE71C3CD-270F-4A01-86F4-91694B267C19}')
		return ret

	def AddRegion(self, ObjectList=defaultNamedNotOptArg):
		return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
			)

	# Result is of type IAcad3DSolid
	def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
			, AxisPoint, AxisDir, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'AddRevolvedSolid', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSection
	def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
			, ToPoint, planeVector)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	# Result is of type IAcadShape
	def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
			, InsertionPoint, ScaleFactor, RotationAngle)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
		return ret

	# Result is of type IAcadSolid
	def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3, Point4)
		if ret is not None:
			ret = Dispatch(ret, 'AddSolid', '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
		return ret

	# Result is of type IAcad3DSolid
	def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
			, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'AddSphere', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadSpline
	def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
			, StartTangent, EndTangent)
		if ret is not None:
			ret = Dispatch(ret, 'AddSpline', '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
		return ret

	# Result is of type IAcadTable
	def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
			, ColWidth=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
			, NumRows, NumColumns, RowHeight, ColWidth)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{187D4409-BABE-43D8-8379-2AF11136DA16}')
		return ret

	# Result is of type IAcadText
	def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
			, InsertionPoint, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddText', '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
		return ret

	# Result is of type IAcadTolerance
	def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
			, InsertionPoint, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'AddTolerance', '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
		return ret

	# Result is of type IAcad3DSolid
	def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
			, TorusRadius, TubeRadius)
		if ret is not None:
			ret = Dispatch(ret, 'AddTorus', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadTrace
	def AddTrace(self, PointsArray=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTrace', '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
		return ret

	# Result is of type IAcad3DSolid
	def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
			, Length, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddWedge', '{DF94C736-F717-4469-A886-B9902747352D}')
		return ret

	# Result is of type IAcadXline
	def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'AddXline', '{96FC51A1-B610-406F-990D-0652F53758A9}')
		return ret

	# Result is of type IAcadExternalReference
	def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
			, Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
			, Name, InsertionPoint, Xscale, Yscale, Zscale
			, Rotation, bOverlay, Password)
		if ret is not None:
			ret = Dispatch(ret, 'AttachExternalReference', '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')
		return ret

	def Bind(self, bPrefixName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Detach(self):
		return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadBlockReference
	def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
			, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
			, Name, Xscale, Yscale, Zscale, Rotation
			, Password)
		if ret is not None:
			ret = Dispatch(ret, 'InsertBlock', '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')
		return ret

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def Reload(self):
		return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Unload(self):
		return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
		"Comments": (1597, 2, (8, 0), (), "Comments", None),
		"Count": (1536, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Explodable": (1599, 2, (11, 0), (), "Explodable", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
		"IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
		"IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
		# Method 'Layout' returns object of type 'IAcadLayout'
		"Layout": (1583, 2, (9, 0), (), "Layout", '{0B119218-2411-46DD-B7B9-17C8C009222C}'),
		"Name": (1537, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (1538, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Path": (1596, 2, (8, 0), (), "Path", None),
		"Units": (1598, 2, (3, 0), (), "Units", None),
		# Method 'XRefDatabase' returns object of type 'IAcadDatabase'
		"XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
	}
	_prop_map_put_ = {
		"BlockScaling": ((1600, LCID, 4, 0),()),
		"Comments": ((1597, LCID, 4, 0),()),
		"Explodable": ((1599, LCID, 4, 0),()),
		"Name": ((1537, LCID, 4, 0),()),
		"Origin": ((1538, LCID, 4, 0),()),
		"Path": ((1596, LCID, 4, 0),()),
		"Units": ((1598, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadPlaneSurface(DispatchBaseClass):
	CLSID = IID('{4C19880A-0BAF-4899-80DB-1F672CFBF5FC}')
	coclass_clsid = IID('{6451051B-AD22-4C6A-ACCE-013A0E1DDBC3}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
		"VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UIsolineDensity": ((10, LCID, 4, 0),()),
		"VIsolineDensity": ((11, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPlot(DispatchBaseClass):
	CLSID = IID('{DFF0942E-23C4-44B5-B67C-B511B5DD5A66}')
	coclass_clsid = IID('{82F4F750-8BD9-4880-A71D-02FB08EBFAEA}')

	def DisplayPlotPreview(self, Preview=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((3, 1),),Preview
			)

	def PlotToDevice(self, plotConfig=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (11, 0), ((12, 17),),plotConfig
			)

	def PlotToFile(self, plotFile=defaultNamedNotOptArg, plotConfig=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (11, 0), ((8, 1), (12, 17)),plotFile
			, plotConfig)

	def SetLayoutsToPlot(self, layoutList=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743818, LCID, 1, (24, 0), ((12, 1),),layoutList
			)

	def StartBatchMode(self, entryCount=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743819, LCID, 1, (24, 0), ((3, 1),),entryCount
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"BatchPlotProgress": (1610743813, 2, (11, 0), (), "BatchPlotProgress", None),
		"NumberOfCopies": (1610743811, 2, (3, 0), (), "NumberOfCopies", None),
		"QuietErrorMode": (1610743809, 2, (11, 0), (), "QuietErrorMode", None),
	}
	_prop_map_put_ = {
		"BatchPlotProgress": ((1610743813, LCID, 4, 0),()),
		"NumberOfCopies": ((1610743811, LCID, 4, 0),()),
		"QuietErrorMode": ((1610743809, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPlotConfiguration(DispatchBaseClass):
	CLSID = IID('{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')
	coclass_clsid = IID('{EA34A0C0-5CE7-4701-A6FA-117D25CD5EBB}')

	def CopyFrom(self, pPlotConfig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((9, 1),),pPlotConfig
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetCanonicalMediaNames(self):
		return self._ApplyTypes_(36, 1, (12, 0), (), 'GetCanonicalMediaNames', None,)

	def GetCustomScale(self, Numerator=pythoncom.Missing, Denominator=pythoncom.Missing):
		return self._ApplyTypes_(17, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetCustomScale', None,Numerator
			, Denominator)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetLocaleMediaName(self, Name=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(40, LCID, 1, (8, 0), ((8, 1),),Name
			)

	def GetPaperMargins(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
		return self._ApplyTypes_(26, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetPaperMargins', None,LowerLeft
			, UpperRight)

	def GetPaperSize(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
		return self._ApplyTypes_(28, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetPaperSize', None,Width
			, Height)

	def GetPlotDeviceNames(self):
		return self._ApplyTypes_(37, 1, (12, 0), (), 'GetPlotDeviceNames', None,)

	def GetPlotStyleTableNames(self):
		return self._ApplyTypes_(38, 1, (12, 0), (), 'GetPlotStyleTableNames', None,)

	def GetWindowToPlot(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
		return self._ApplyTypes_(31, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetWindowToPlot', None,LowerLeft
			, UpperRight)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def RefreshPlotDeviceInfo(self):
		return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), (),)

	def SetCustomScale(self, Numerator=defaultNamedNotOptArg, Denominator=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((5, 1), (5, 1)),Numerator
			, Denominator)

	def SetWindowToPlot(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
			, UpperRight)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"CanonicalMediaName": (6, 2, (8, 0), (), "CanonicalMediaName", None),
		"CenterPlot": (11, 2, (11, 0), (), "CenterPlot", None),
		"ConfigName": (3, 2, (8, 0), (), "ConfigName", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ModelType": (34, 2, (11, 0), (), "ModelType", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PaperUnits": (7, 2, (3, 0), (), "PaperUnits", None),
		"PlotHidden": (12, 2, (11, 0), (), "PlotHidden", None),
		"PlotOrigin": (30, 2, (12, 0), (), "PlotOrigin", None),
		"PlotRotation": (10, 2, (3, 0), (), "PlotRotation", None),
		"PlotType": (13, 2, (3, 0), (), "PlotType", None),
		"PlotViewportBorders": (8, 2, (11, 0), (), "PlotViewportBorders", None),
		"PlotViewportsFirst": (24, 2, (11, 0), (), "PlotViewportsFirst", None),
		"PlotWithLineweights": (21, 2, (11, 0), (), "PlotWithLineweights", None),
		"PlotWithPlotStyles": (33, 2, (11, 0), (), "PlotWithPlotStyles", None),
		"ScaleLineweights": (20, 2, (11, 0), (), "ScaleLineweights", None),
		"ShowPlotStyles": (9, 2, (11, 0), (), "ShowPlotStyles", None),
		"StandardScale": (16, 2, (3, 0), (), "StandardScale", None),
		"StyleSheet": (25, 2, (8, 0), (), "StyleSheet", None),
		"UseStandardScale": (15, 2, (11, 0), (), "UseStandardScale", None),
		"ViewToPlot": (14, 2, (8, 0), (), "ViewToPlot", None),
	}
	_prop_map_put_ = {
		"CanonicalMediaName": ((6, LCID, 4, 0),()),
		"CenterPlot": ((11, LCID, 4, 0),()),
		"ConfigName": ((3, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"PaperUnits": ((7, LCID, 4, 0),()),
		"PlotHidden": ((12, LCID, 4, 0),()),
		"PlotOrigin": ((30, LCID, 4, 0),()),
		"PlotRotation": ((10, LCID, 4, 0),()),
		"PlotType": ((13, LCID, 4, 0),()),
		"PlotViewportBorders": ((8, LCID, 4, 0),()),
		"PlotViewportsFirst": ((24, LCID, 4, 0),()),
		"PlotWithLineweights": ((21, LCID, 4, 0),()),
		"PlotWithPlotStyles": ((33, LCID, 4, 0),()),
		"ScaleLineweights": ((20, LCID, 4, 0),()),
		"ShowPlotStyles": ((9, LCID, 4, 0),()),
		"StandardScale": ((16, LCID, 4, 0),()),
		"StyleSheet": ((25, LCID, 4, 0),()),
		"UseStandardScale": ((15, LCID, 4, 0),()),
		"ViewToPlot": ((14, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPlotConfigurations(DispatchBaseClass):
	CLSID = IID('{AD2543CB-31A8-4DDD-9162-845E11D7F72F}')
	coclass_clsid = IID('{12545889-6D32-4424-9967-1E1D7BD1F809}')

	# Result is of type IAcadPlotConfiguration
	def Add(self, Name=defaultNamedNotOptArg, ModelType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
			, ModelType)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadPlotConfiguration
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadPoint(DispatchBaseClass):
	CLSID = IID('{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')
	coclass_clsid = IID('{48270F9E-CCF6-4C79-B6FF-267C960E6425}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (2, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Thickness": (3, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((2, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Thickness": ((3, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPolyfaceMesh(DispatchBaseClass):
	CLSID = IID('{60A35C35-64B5-4751-99E7-259879896519}')
	coclass_clsid = IID('{622F6193-E4DD-46E6-BC66-2ED88E9FD28D}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(2, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"NumberOfFaces": (4, 2, (3, 0), (), "NumberOfFaces", None),
		"NumberOfVertices": (3, 2, (3, 0), (), "NumberOfVertices", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((1, LCID, 4, 0),()),
		"Faces": ((80, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPolygonMesh(DispatchBaseClass):
	CLSID = IID('{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')
	coclass_clsid = IID('{DB207560-8449-4FAF-BDC2-61676EB012D4}')

	def AppendVertex(self, vertex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1),),vertex
			)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(11, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(10, 1, (12, 0), (), 'Explode', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"MClose": (2, 2, (11, 0), (), "MClose", None),
		"MDensity": (4, 2, (3, 0), (), "MDensity", None),
		"MVertexCount": (6, 2, (3, 0), (), "MVertexCount", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"NClose": (3, 2, (11, 0), (), "NClose", None),
		"NDensity": (5, 2, (3, 0), (), "NDensity", None),
		"NVertexCount": (7, 2, (3, 0), (), "NVertexCount", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Type": (8, 2, (3, 0), (), "Type", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"MClose": ((2, LCID, 4, 0),()),
		"MDensity": ((4, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"NClose": ((3, LCID, 4, 0),()),
		"NDensity": ((5, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Type": ((8, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPolyline(DispatchBaseClass):
	CLSID = IID('{A09B5650-3A79-41F7-A459-1817D6F1797C}')
	coclass_clsid = IID('{0C3393F8-94F5-4B79-8C01-49A2D0CC0FE9}')

	def AppendVertex(self, vertex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 1),),vertex
			)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(17, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(5, 1, (12, 0), (), 'Explode', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetBulge(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(6, LCID, 1, (5, 0), ((3, 1),),Index
			)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetWidth(self, Index=defaultNamedNotOptArg, StartWidth=pythoncom.Missing, EndWidth=defaultNamedNotOptArg):
		return self._ApplyTypes_(8, 1, (24, 0), ((3, 1), (16389, 2), (16389, 0)), 'GetWidth', None,Index
			, StartWidth, EndWidth)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(11, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetBulge(self, Index=defaultNamedNotOptArg, bulge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
			, bulge)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetWidth(self, Index=defaultNamedNotOptArg, StartWidth=defaultNamedNotOptArg, EndWidth=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 0)),Index
			, StartWidth, EndWidth)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (16, 2, (5, 0), (), "Area", None),
		"Closed": (14, 2, (11, 0), (), "Closed", None),
		"ConstantWidth": (10, 2, (5, 0), (), "ConstantWidth", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Elevation": (12, 2, (5, 0), (), "Elevation", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Length": (18, 2, (5, 0), (), "Length", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeGeneration": (15, 2, (11, 0), (), "LinetypeGeneration", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (2, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Thickness": (3, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Type": (13, 2, (3, 0), (), "Type", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Closed": ((14, LCID, 4, 0),()),
		"ConstantWidth": ((10, LCID, 4, 0),()),
		"Coordinates": ((1, LCID, 4, 0),()),
		"Elevation": ((12, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeGeneration": ((15, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((2, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Thickness": ((3, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Type": ((13, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPopupMenu(DispatchBaseClass):
	CLSID = IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
	coclass_clsid = IID('{194C5C7B-FD4B-42B7-B3A7-A5F3DFFDC999}')

	# Result is of type IAcadPopupMenuItem
	def AddMenuItem(self, Index=defaultNamedNotOptArg, Label=defaultNamedNotOptArg, Macro=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1610743818, LCID, 1, (9, 0), ((12, 1), (8, 1), (8, 1)),Index
			, Label, Macro)
		if ret is not None:
			ret = Dispatch(ret, 'AddMenuItem', '{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')
		return ret

	# Result is of type IAcadPopupMenuItem
	def AddSeparator(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1610743820, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddSeparator', '{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')
		return ret

	# Result is of type IAcadPopupMenu
	def AddSubMenu(self, Index=defaultNamedNotOptArg, Label=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1610743819, LCID, 1, (9, 0), ((12, 1), (8, 1)),Index
			, Label)
		if ret is not None:
			ret = Dispatch(ret, 'AddSubMenu', '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
		return ret

	def InsertInMenuBar(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743821, LCID, 1, (24, 0), ((12, 1),),Index
			)

	# Result is of type IAcadPopupMenuItem
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')
		return ret

	def RemoveFromMenuBar(self):
		return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
		"Name": (1610743813, 2, (8, 0), (), "Name", None),
		"NameNoMnemonic": (1610743815, 2, (8, 0), (), "NameNoMnemonic", None),
		"OnMenuBar": (1610743817, 2, (11, 0), (), "OnMenuBar", None),
		"Parent": (1610743812, 2, (9, 0), (), "Parent", None),
		"ShortcutMenu": (1610743816, 2, (11, 0), (), "ShortcutMenu", None),
		"TagString": (1610743823, 2, (8, 0), (), "TagString", None),
	}
	_prop_map_put_ = {
		"Name": ((1610743813, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadPopupMenuItem(DispatchBaseClass):
	CLSID = IID('{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')
	coclass_clsid = IID('{EA6F8E27-1BD3-468A-8A57-EE2E2116AAC4}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1610743826, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Caption": (1610743823, 2, (8, 0), (), "Caption", None),
		"Check": (1610743816, 2, (11, 0), (), "Check", None),
		"Enable": (1610743814, 2, (11, 0), (), "Enable", None),
		"EndSubMenuLevel": (1610743827, 2, (3, 0), (), "EndSubMenuLevel", None),
		"HelpString": (1610743824, 2, (8, 0), (), "HelpString", None),
		"Index": (1610743822, 2, (3, 0), (), "Index", None),
		"Label": (1610743810, 2, (8, 0), (), "Label", None),
		"Macro": (1610743820, 2, (8, 0), (), "Macro", None),
		# Method 'Parent' returns object of type 'IAcadPopupMenu'
		"Parent": (1610743809, 2, (9, 0), (), "Parent", '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}'),
		# Method 'SubMenu' returns object of type 'IAcadPopupMenu'
		"SubMenu": (1610743819, 2, (9, 0), (), "SubMenu", '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}'),
		"TagString": (1610743812, 2, (8, 0), (), "TagString", None),
		"Type": (1610743818, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Check": ((1610743816, LCID, 4, 0),()),
		"Enable": ((1610743814, LCID, 4, 0),()),
		"EndSubMenuLevel": ((1610743827, LCID, 4, 0),()),
		"HelpString": ((1610743824, LCID, 4, 0),()),
		"Label": ((1610743810, LCID, 4, 0),()),
		"Macro": ((1610743820, LCID, 4, 0),()),
		"TagString": ((1610743812, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPopupMenus(DispatchBaseClass):
	CLSID = IID('{984C0B3E-F861-403A-A0FD-E332A7EC0CF3}')
	coclass_clsid = IID('{8BA4FD46-2F7C-4220-987D-71DCDEC4E739}')

	# Result is of type IAcadPopupMenu
	def Add(self, MenuName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1),),MenuName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
		return ret

	def InsertMenuInMenuBar(self, MenuName=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1), (12, 1)),MenuName
			, Index)

	# Result is of type IAcadPopupMenu
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
		return ret

	def RemoveMenuFromMenuBar(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((12, 1),),Index
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IAcadMenuGroup'
		"Parent": (1610743812, 2, (9, 0), (), "Parent", '{D6261081-12FD-49ED-A359-D990DF71949D}'),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadPreferences(DispatchBaseClass):
	CLSID = IID('{5A6047B5-55E8-456B-A5D1-D42C5DC90B96}')
	coclass_clsid = IID('{DBEE68F4-2BF2-43A2-BF9B-353FCDE16782}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		# Method 'Display' returns object of type 'IAcadPreferencesDisplay'
		"Display": (1610743810, 2, (9, 0), (), "Display", '{470F310B-CA4B-4664-B8BA-2A56745331C3}'),
		# Method 'Drafting' returns object of type 'IAcadPreferencesDrafting'
		"Drafting": (1610743815, 2, (9, 0), (), "Drafting", '{1591419F-43C2-4F66-BC6F-C0FF0EFFF074}'),
		# Method 'Files' returns object of type 'IAcadPreferencesFiles'
		"Files": (1610743809, 2, (9, 0), (), "Files", '{E988F6D8-E009-4C4B-B20F-937E3349B7F5}'),
		# Method 'OpenSave' returns object of type 'IAcadPreferencesOpenSave'
		"OpenSave": (1610743811, 2, (9, 0), (), "OpenSave", '{DA7E4927-7A26-4409-A515-F4F9E67EB0C3}'),
		# Method 'Output' returns object of type 'IAcadPreferencesOutput'
		"Output": (1610743812, 2, (9, 0), (), "Output", '{E985D85D-2438-4979-8BB3-0CF1C0806140}'),
		# Method 'Profiles' returns object of type 'IAcadPreferencesProfiles'
		"Profiles": (1610743817, 2, (9, 0), (), "Profiles", '{EB3A84E0-1069-4B35-8564-62441E5BEDC6}'),
		# Method 'Selection' returns object of type 'IAcadPreferencesSelection'
		"Selection": (1610743816, 2, (9, 0), (), "Selection", '{129B870F-5FEE-4EF2-9BE6-30BAD4B0CD1F}'),
		# Method 'System' returns object of type 'IAcadPreferencesSystem'
		"System": (1610743813, 2, (9, 0), (), "System", '{42370369-A258-4EAD-96C6-F78702E57374}'),
		# Method 'User' returns object of type 'IAcadPreferencesUser'
		"User": (1610743814, 2, (9, 0), (), "User", '{4149C4B5-CA42-4ED0-B8CB-EBBE87F83912}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesDisplay(DispatchBaseClass):
	CLSID = IID('{470F310B-CA4B-4664-B8BA-2A56745331C3}')
	coclass_clsid = IID('{26352416-E145-4D82-92E5-3EC921A4A58E}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"AutoTrackingVecColor": (1610743841, 2, (19, 0), (), "AutoTrackingVecColor", None),
		"CursorSize": (1610743823, 2, (3, 0), (), "CursorSize", None),
		"DisplayLayoutTabs": (1610743853, 2, (11, 0), (), "DisplayLayoutTabs", None),
		"DisplayScreenMenu": (1610743821, 2, (11, 0), (), "DisplayScreenMenu", None),
		"DisplayScrollBars": (1610743819, 2, (11, 0), (), "DisplayScrollBars", None),
		"DockedVisibleLines": (1610743825, 2, (3, 0), (), "DockedVisibleLines", None),
		"GraphicsWinLayoutBackgrndColor": (1610743833, 2, (19, 0), (), "GraphicsWinLayoutBackgrndColor", None),
		"GraphicsWinModelBackgrndColor": (1610743829, 2, (19, 0), (), "GraphicsWinModelBackgrndColor", None),
		"HistoryLines": (1610743849, 2, (3, 0), (), "HistoryLines", None),
		"ImageFrameHighlight": (1610743855, 2, (11, 0), (), "ImageFrameHighlight", None),
		"LayoutCreateViewport": (1610743817, 2, (11, 0), (), "LayoutCreateViewport", None),
		"LayoutCrosshairColor": (1610743839, 2, (19, 0), (), "LayoutCrosshairColor", None),
		"LayoutDisplayMargins": (1610743809, 2, (11, 0), (), "LayoutDisplayMargins", None),
		"LayoutDisplayPaper": (1610743811, 2, (11, 0), (), "LayoutDisplayPaper", None),
		"LayoutDisplayPaperShadow": (1610743813, 2, (11, 0), (), "LayoutDisplayPaperShadow", None),
		"LayoutShowPlotSetup": (1610743815, 2, (11, 0), (), "LayoutShowPlotSetup", None),
		"MaxAutoCADWindow": (1610743851, 2, (11, 0), (), "MaxAutoCADWindow", None),
		"ModelCrosshairColor": (1610743831, 2, (19, 0), (), "ModelCrosshairColor", None),
		"ShowRasterImage": (1610743827, 2, (11, 0), (), "ShowRasterImage", None),
		"TextFont": (1610743843, 2, (8, 0), (), "TextFont", None),
		"TextFontSize": (1610743847, 2, (3, 0), (), "TextFontSize", None),
		"TextFontStyle": (1610743845, 2, (3, 0), (), "TextFontStyle", None),
		"TextWinBackgrndColor": (1610743835, 2, (19, 0), (), "TextWinBackgrndColor", None),
		"TextWinTextColor": (1610743837, 2, (19, 0), (), "TextWinTextColor", None),
		"TrueColorImages": (1610743857, 2, (11, 0), (), "TrueColorImages", None),
		"XRefFadeIntensity": (1610743859, 2, (3, 0), (), "XRefFadeIntensity", None),
	}
	_prop_map_put_ = {
		"AutoTrackingVecColor": ((1610743841, LCID, 4, 0),()),
		"CursorSize": ((1610743823, LCID, 4, 0),()),
		"DisplayLayoutTabs": ((1610743853, LCID, 4, 0),()),
		"DisplayScreenMenu": ((1610743821, LCID, 4, 0),()),
		"DisplayScrollBars": ((1610743819, LCID, 4, 0),()),
		"DockedVisibleLines": ((1610743825, LCID, 4, 0),()),
		"GraphicsWinLayoutBackgrndColor": ((1610743833, LCID, 4, 0),()),
		"GraphicsWinModelBackgrndColor": ((1610743829, LCID, 4, 0),()),
		"HistoryLines": ((1610743849, LCID, 4, 0),()),
		"ImageFrameHighlight": ((1610743855, LCID, 4, 0),()),
		"LayoutCreateViewport": ((1610743817, LCID, 4, 0),()),
		"LayoutCrosshairColor": ((1610743839, LCID, 4, 0),()),
		"LayoutDisplayMargins": ((1610743809, LCID, 4, 0),()),
		"LayoutDisplayPaper": ((1610743811, LCID, 4, 0),()),
		"LayoutDisplayPaperShadow": ((1610743813, LCID, 4, 0),()),
		"LayoutShowPlotSetup": ((1610743815, LCID, 4, 0),()),
		"MaxAutoCADWindow": ((1610743851, LCID, 4, 0),()),
		"ModelCrosshairColor": ((1610743831, LCID, 4, 0),()),
		"ShowRasterImage": ((1610743827, LCID, 4, 0),()),
		"TextFont": ((1610743843, LCID, 4, 0),()),
		"TextFontSize": ((1610743847, LCID, 4, 0),()),
		"TextFontStyle": ((1610743845, LCID, 4, 0),()),
		"TextWinBackgrndColor": ((1610743835, LCID, 4, 0),()),
		"TextWinTextColor": ((1610743837, LCID, 4, 0),()),
		"TrueColorImages": ((1610743857, LCID, 4, 0),()),
		"XRefFadeIntensity": ((1610743859, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesDrafting(DispatchBaseClass):
	CLSID = IID('{1591419F-43C2-4F66-BC6F-C0FF0EFFF074}')
	coclass_clsid = IID('{98780B52-05AD-4739-BC5C-B3BAD3D5296E}')

	_prop_map_get_ = {
		"AlignmentPointAcquisition": (1610743829, 2, (3, 0), (), "AlignmentPointAcquisition", None),
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"AutoSnapAperture": (1610743815, 2, (11, 0), (), "AutoSnapAperture", None),
		"AutoSnapApertureSize": (1610743817, 2, (3, 0), (), "AutoSnapApertureSize", None),
		"AutoSnapMagnet": (1610743811, 2, (11, 0), (), "AutoSnapMagnet", None),
		"AutoSnapMarker": (1610743809, 2, (11, 0), (), "AutoSnapMarker", None),
		"AutoSnapMarkerColor": (1610743819, 2, (3, 0), (), "AutoSnapMarkerColor", None),
		"AutoSnapMarkerSize": (1610743821, 2, (3, 0), (), "AutoSnapMarkerSize", None),
		"AutoSnapTooltip": (1610743813, 2, (11, 0), (), "AutoSnapTooltip", None),
		"AutoTrackTooltip": (1610743827, 2, (11, 0), (), "AutoTrackTooltip", None),
		"FullScreenTrackingVector": (1610743825, 2, (11, 0), (), "FullScreenTrackingVector", None),
		"PolarTrackingVector": (1610743823, 2, (11, 0), (), "PolarTrackingVector", None),
	}
	_prop_map_put_ = {
		"AlignmentPointAcquisition": ((1610743829, LCID, 4, 0),()),
		"AutoSnapAperture": ((1610743815, LCID, 4, 0),()),
		"AutoSnapApertureSize": ((1610743817, LCID, 4, 0),()),
		"AutoSnapMagnet": ((1610743811, LCID, 4, 0),()),
		"AutoSnapMarker": ((1610743809, LCID, 4, 0),()),
		"AutoSnapMarkerColor": ((1610743819, LCID, 4, 0),()),
		"AutoSnapMarkerSize": ((1610743821, LCID, 4, 0),()),
		"AutoSnapTooltip": ((1610743813, LCID, 4, 0),()),
		"AutoTrackTooltip": ((1610743827, LCID, 4, 0),()),
		"FullScreenTrackingVector": ((1610743825, LCID, 4, 0),()),
		"PolarTrackingVector": ((1610743823, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesFiles(DispatchBaseClass):
	CLSID = IID('{E988F6D8-E009-4C4B-B20F-937E3349B7F5}')
	coclass_clsid = IID('{CF7E7DCE-3696-4C9F-B29E-F8980C7650B0}')

	def GetProjectFilePath(self, ProjectName=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1610743858, LCID, 1, (8, 0), ((8, 1),),ProjectName
			)

	def SetProjectFilePath(self, ProjectName=defaultNamedNotOptArg, ProjectFilePath=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743857, LCID, 1, (24, 0), ((8, 1), (8, 1)),ProjectName
			, ProjectFilePath)

	_prop_map_get_ = {
		"AltFontFile": (1610743831, 2, (8, 0), (), "AltFontFile", None),
		"AltTabletMenuFile": (1610743855, 2, (8, 0), (), "AltTabletMenuFile", None),
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"AutoSavePath": (1610743843, 2, (8, 0), (), "AutoSavePath", None),
		"ColorBookPath": (1610743869, 2, (8, 0), (), "ColorBookPath", None),
		"ConfigFile": (1610743823, 2, (8, 0), (), "ConfigFile", None),
		"CustomDictionary": (1610743829, 2, (8, 0), (), "CustomDictionary", None),
		"CustomIconPath": (1610743817, 2, (8, 0), (), "CustomIconPath", None),
		"DefaultInternetURL": (1610743821, 2, (8, 0), (), "DefaultInternetURL", None),
		"DriversPath": (1610743811, 2, (8, 0), (), "DriversPath", None),
		"EnterpriseMenuFile": (1610743815, 2, (8, 0), (), "EnterpriseMenuFile", None),
		"FontFileMap": (1610743833, 2, (8, 0), (), "FontFileMap", None),
		"HelpFilePath": (1610743819, 2, (8, 0), (), "HelpFilePath", None),
		"LicenseServer": (1610743824, 2, (8, 0), (), "LicenseServer", None),
		"LogFilePath": (1610743847, 2, (8, 0), (), "LogFilePath", None),
		"MainDictionary": (1610743827, 2, (8, 0), (), "MainDictionary", None),
		"MenuFile": (1610743813, 2, (8, 0), (), "MenuFile", None),
		"ObjectARXPath": (1610743867, 2, (8, 0), (), "ObjectARXPath", None),
		"PageSetupOverridesTemplateFile": (1610743877, 2, (8, 0), (), "PageSetupOverridesTemplateFile", None),
		"PlotLogFilePath": (1610743875, 2, (8, 0), (), "PlotLogFilePath", None),
		"PostScriptPrologFile": (1610743839, 2, (8, 0), (), "PostScriptPrologFile", None),
		"PrintFile": (1610743835, 2, (8, 0), (), "PrintFile", None),
		"PrintSpoolExecutable": (1610743837, 2, (8, 0), (), "PrintSpoolExecutable", None),
		"PrintSpoolerPath": (1610743841, 2, (8, 0), (), "PrintSpoolerPath", None),
		"PrinterConfigPath": (1610743859, 2, (8, 0), (), "PrinterConfigPath", None),
		"PrinterDescPath": (1610743861, 2, (8, 0), (), "PrinterDescPath", None),
		"PrinterStyleSheetPath": (1610743863, 2, (8, 0), (), "PrinterStyleSheetPath", None),
		"QNewTemplateFile": (1610743873, 2, (8, 0), (), "QNewTemplateFile", None),
		"SupportPath": (0, 2, (8, 0), (), "SupportPath", None),
		"TempFilePath": (1610743849, 2, (8, 0), (), "TempFilePath", None),
		"TempXrefPath": (1610743851, 2, (8, 0), (), "TempXrefPath", None),
		"TemplateDwgPath": (1610743845, 2, (8, 0), (), "TemplateDwgPath", None),
		"TextEditor": (1610743825, 2, (8, 0), (), "TextEditor", None),
		"TextureMapPath": (1610743853, 2, (8, 0), (), "TextureMapPath", None),
		"ToolPalettePath": (1610743871, 2, (8, 0), (), "ToolPalettePath", None),
		"WorkspacePath": (1610743865, 2, (8, 0), (), "WorkspacePath", None),
	}
	_prop_map_put_ = {
		"AltFontFile": ((1610743831, LCID, 4, 0),()),
		"AltTabletMenuFile": ((1610743855, LCID, 4, 0),()),
		"AutoSavePath": ((1610743843, LCID, 4, 0),()),
		"ColorBookPath": ((1610743869, LCID, 4, 0),()),
		"CustomDictionary": ((1610743829, LCID, 4, 0),()),
		"CustomIconPath": ((1610743817, LCID, 4, 0),()),
		"DefaultInternetURL": ((1610743821, LCID, 4, 0),()),
		"DriversPath": ((1610743811, LCID, 4, 0),()),
		"EnterpriseMenuFile": ((1610743815, LCID, 4, 0),()),
		"FontFileMap": ((1610743833, LCID, 4, 0),()),
		"HelpFilePath": ((1610743819, LCID, 4, 0),()),
		"LogFilePath": ((1610743847, LCID, 4, 0),()),
		"MainDictionary": ((1610743827, LCID, 4, 0),()),
		"MenuFile": ((1610743813, LCID, 4, 0),()),
		"ObjectARXPath": ((1610743867, LCID, 4, 0),()),
		"PageSetupOverridesTemplateFile": ((1610743877, LCID, 4, 0),()),
		"PlotLogFilePath": ((1610743875, LCID, 4, 0),()),
		"PostScriptPrologFile": ((1610743839, LCID, 4, 0),()),
		"PrintFile": ((1610743835, LCID, 4, 0),()),
		"PrintSpoolExecutable": ((1610743837, LCID, 4, 0),()),
		"PrintSpoolerPath": ((1610743841, LCID, 4, 0),()),
		"PrinterConfigPath": ((1610743859, LCID, 4, 0),()),
		"PrinterDescPath": ((1610743861, LCID, 4, 0),()),
		"PrinterStyleSheetPath": ((1610743863, LCID, 4, 0),()),
		"QNewTemplateFile": ((1610743873, LCID, 4, 0),()),
		"SupportPath": ((0, LCID, 4, 0),()),
		"TempFilePath": ((1610743849, LCID, 4, 0),()),
		"TempXrefPath": ((1610743851, LCID, 4, 0),()),
		"TemplateDwgPath": ((1610743845, LCID, 4, 0),()),
		"TextEditor": ((1610743825, LCID, 4, 0),()),
		"TextureMapPath": ((1610743853, LCID, 4, 0),()),
		"ToolPalettePath": ((1610743871, LCID, 4, 0),()),
		"WorkspacePath": ((1610743865, LCID, 4, 0),()),
	}
	# Default property for this class is 'SupportPath'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "SupportPath", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesOpenSave(DispatchBaseClass):
	CLSID = IID('{DA7E4927-7A26-4409-A515-F4F9E67EB0C3}')
	coclass_clsid = IID('{6C6322F2-DB92-4304-8790-C6AD52685872}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"AutoAudit": (1610743831, 2, (11, 0), (), "AutoAudit", None),
		"AutoSaveInterval": (1610743813, 2, (3, 0), (), "AutoSaveInterval", None),
		"CreateBackup": (1610743815, 2, (11, 0), (), "CreateBackup", None),
		"DemandLoadARXApp": (1610743825, 2, (3, 0), (), "DemandLoadARXApp", None),
		"FullCRCValidation": (1610743817, 2, (11, 0), (), "FullCRCValidation", None),
		"IncrementalSavePercent": (1610743811, 2, (3, 0), (), "IncrementalSavePercent", None),
		"LogFileOn": (1610743819, 2, (11, 0), (), "LogFileOn", None),
		"MRUNumber": (1610743835, 2, (3, 0), (), "MRUNumber", None),
		"ProxyImage": (1610743827, 2, (3, 0), (), "ProxyImage", None),
		"SaveAsType": (1610743833, 2, (3, 0), (), "SaveAsType", None),
		"SavePreviewThumbnail": (1610743809, 2, (11, 0), (), "SavePreviewThumbnail", None),
		"ShowProxyDialogBox": (1610743829, 2, (11, 0), (), "ShowProxyDialogBox", None),
		"TempFileExtension": (1610743821, 2, (8, 0), (), "TempFileExtension", None),
		"XrefDemandLoad": (1610743823, 2, (3, 0), (), "XrefDemandLoad", None),
	}
	_prop_map_put_ = {
		"AutoAudit": ((1610743831, LCID, 4, 0),()),
		"AutoSaveInterval": ((1610743813, LCID, 4, 0),()),
		"CreateBackup": ((1610743815, LCID, 4, 0),()),
		"DemandLoadARXApp": ((1610743825, LCID, 4, 0),()),
		"FullCRCValidation": ((1610743817, LCID, 4, 0),()),
		"IncrementalSavePercent": ((1610743811, LCID, 4, 0),()),
		"LogFileOn": ((1610743819, LCID, 4, 0),()),
		"ProxyImage": ((1610743827, LCID, 4, 0),()),
		"SaveAsType": ((1610743833, LCID, 4, 0),()),
		"SavePreviewThumbnail": ((1610743809, LCID, 4, 0),()),
		"ShowProxyDialogBox": ((1610743829, LCID, 4, 0),()),
		"TempFileExtension": ((1610743821, LCID, 4, 0),()),
		"XrefDemandLoad": ((1610743823, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesOutput(DispatchBaseClass):
	CLSID = IID('{E985D85D-2438-4979-8BB3-0CF1C0806140}')
	coclass_clsid = IID('{E6EAB939-E3AF-4FAB-AFDC-2A77D0D5B3B8}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"AutomaticPlotLog": (1610743831, 2, (11, 0), (), "AutomaticPlotLog", None),
		"ContinuousPlotLog": (1610743829, 2, (11, 0), (), "ContinuousPlotLog", None),
		"DefaultOutputDevice": (1610743809, 2, (8, 0), (), "DefaultOutputDevice", None),
		"DefaultPlotStyleForLayer": (1610743827, 2, (8, 0), (), "DefaultPlotStyleForLayer", None),
		"DefaultPlotStyleForObjects": (1610743825, 2, (8, 0), (), "DefaultPlotStyleForObjects", None),
		"DefaultPlotStyleTable": (1610743823, 2, (8, 0), (), "DefaultPlotStyleTable", None),
		"DefaultPlotToFilePath": (1610743833, 2, (8, 0), (), "DefaultPlotToFilePath", None),
		"OLEQuality": (1610743817, 2, (3, 0), (), "OLEQuality", None),
		"PlotLegacy": (1610743815, 2, (11, 0), (), "PlotLegacy", None),
		"PlotPolicy": (1610743821, 2, (3, 0), (), "PlotPolicy", None),
		"PrinterPaperSizeAlert": (1610743813, 2, (11, 0), (), "PrinterPaperSizeAlert", None),
		"PrinterSpoolAlert": (1610743811, 2, (3, 0), (), "PrinterSpoolAlert", None),
		"UseLastPlotSettings": (1610743819, 2, (11, 0), (), "UseLastPlotSettings", None),
	}
	_prop_map_put_ = {
		"AutomaticPlotLog": ((1610743831, LCID, 4, 0),()),
		"ContinuousPlotLog": ((1610743829, LCID, 4, 0),()),
		"DefaultOutputDevice": ((1610743809, LCID, 4, 0),()),
		"DefaultPlotStyleForLayer": ((1610743827, LCID, 4, 0),()),
		"DefaultPlotStyleForObjects": ((1610743825, LCID, 4, 0),()),
		"DefaultPlotStyleTable": ((1610743823, LCID, 4, 0),()),
		"DefaultPlotToFilePath": ((1610743833, LCID, 4, 0),()),
		"OLEQuality": ((1610743817, LCID, 4, 0),()),
		"PlotLegacy": ((1610743815, LCID, 4, 0),()),
		"PlotPolicy": ((1610743821, LCID, 4, 0),()),
		"PrinterPaperSizeAlert": ((1610743813, LCID, 4, 0),()),
		"PrinterSpoolAlert": ((1610743811, LCID, 4, 0),()),
		"UseLastPlotSettings": ((1610743819, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesProfiles(DispatchBaseClass):
	CLSID = IID('{EB3A84E0-1069-4B35-8564-62441E5BEDC6}')
	coclass_clsid = IID('{767E31F2-FCF8-478D-8836-223DFEE4D6B3}')

	def CopyProfile(self, oldProfileName=defaultNamedNotOptArg, newProfileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((8, 1), (8, 1)),oldProfileName
			, newProfileName)

	def DeleteProfile(self, ProfileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((8, 1),),ProfileName
			)

	def ExportProfile(self, ProfileName=defaultNamedNotOptArg, RegFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), ((8, 1), (8, 1)),ProfileName
			, RegFile)

	def GetAllProfileNames(self, pNames=pythoncom.Missing):
		return self._ApplyTypes_(1610743817, 1, (24, 0), ((16396, 2),), 'GetAllProfileNames', None,pNames
			)

	def ImportProfile(self, ProfileName=defaultNamedNotOptArg, RegFile=defaultNamedNotOptArg, IncludePathInfo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 1)),ProfileName
			, RegFile, IncludePathInfo)

	def RenameProfile(self, origProfileName=defaultNamedNotOptArg, newProfileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((8, 1), (8, 1)),origProfileName
			, newProfileName)

	def ResetProfile(self, Profile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1),),Profile
			)

	_prop_map_get_ = {
		"ActiveProfile": (1610743809, 2, (8, 0), (), "ActiveProfile", None),
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
	}
	_prop_map_put_ = {
		"ActiveProfile": ((1610743809, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesSelection(DispatchBaseClass):
	CLSID = IID('{129B870F-5FEE-4EF2-9BE6-30BAD4B0CD1F}')
	coclass_clsid = IID('{2B4D4DEA-4EC2-4C06-ADC9-B4992734A757}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"DisplayGrips": (1610743819, 2, (11, 0), (), "DisplayGrips", None),
		"DisplayGripsWithinBlocks": (1610743821, 2, (11, 0), (), "DisplayGripsWithinBlocks", None),
		"GripColorSelected": (1610743823, 2, (3, 0), (), "GripColorSelected", None),
		"GripColorUnselected": (1610743825, 2, (3, 0), (), "GripColorUnselected", None),
		"GripSize": (1610743827, 2, (3, 0), (), "GripSize", None),
		"PickAdd": (1610743811, 2, (11, 0), (), "PickAdd", None),
		"PickAuto": (1610743815, 2, (11, 0), (), "PickAuto", None),
		"PickBoxSize": (1610743817, 2, (3, 0), (), "PickBoxSize", None),
		"PickDrag": (1610743813, 2, (11, 0), (), "PickDrag", None),
		"PickFirst": (1610743809, 2, (11, 0), (), "PickFirst", None),
		"PickGroup": (1610743829, 2, (11, 0), (), "PickGroup", None),
	}
	_prop_map_put_ = {
		"DisplayGrips": ((1610743819, LCID, 4, 0),()),
		"DisplayGripsWithinBlocks": ((1610743821, LCID, 4, 0),()),
		"GripColorSelected": ((1610743823, LCID, 4, 0),()),
		"GripColorUnselected": ((1610743825, LCID, 4, 0),()),
		"GripSize": ((1610743827, LCID, 4, 0),()),
		"PickAdd": ((1610743811, LCID, 4, 0),()),
		"PickAuto": ((1610743815, LCID, 4, 0),()),
		"PickBoxSize": ((1610743817, LCID, 4, 0),()),
		"PickDrag": ((1610743813, LCID, 4, 0),()),
		"PickFirst": ((1610743809, LCID, 4, 0),()),
		"PickGroup": ((1610743829, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesSystem(DispatchBaseClass):
	CLSID = IID('{42370369-A258-4EAD-96C6-F78702E57374}')
	coclass_clsid = IID('{06527FA0-74A3-4791-AA88-A63509AC82FB}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"BeepOnError": (1610743819, 2, (11, 0), (), "BeepOnError", None),
		"DisplayOLEScale": (1610743811, 2, (11, 0), (), "DisplayOLEScale", None),
		"EnableStartupDialog": (1610743817, 2, (11, 0), (), "EnableStartupDialog", None),
		"LoadAcadLspInAllDocuments": (1610743823, 2, (11, 0), (), "LoadAcadLspInAllDocuments", None),
		"ShowWarningMessages": (1610743821, 2, (11, 0), (), "ShowWarningMessages", None),
		"SingleDocumentMode": (1610743809, 2, (11, 0), (), "SingleDocumentMode", None),
		"StoreSQLIndex": (1610743813, 2, (11, 0), (), "StoreSQLIndex", None),
		"TablesReadOnly": (1610743815, 2, (11, 0), (), "TablesReadOnly", None),
	}
	_prop_map_put_ = {
		"BeepOnError": ((1610743819, LCID, 4, 0),()),
		"DisplayOLEScale": ((1610743811, LCID, 4, 0),()),
		"EnableStartupDialog": ((1610743817, LCID, 4, 0),()),
		"LoadAcadLspInAllDocuments": ((1610743823, LCID, 4, 0),()),
		"ShowWarningMessages": ((1610743821, LCID, 4, 0),()),
		"SingleDocumentMode": ((1610743809, LCID, 4, 0),()),
		"StoreSQLIndex": ((1610743813, LCID, 4, 0),()),
		"TablesReadOnly": ((1610743815, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesUser(DispatchBaseClass):
	CLSID = IID('{4149C4B5-CA42-4ED0-B8CB-EBBE87F83912}')
	coclass_clsid = IID('{FFDC2937-8113-401C-A224-E9A034287EA6}')

	_prop_map_get_ = {
		"ADCInsertUnitsDefaultSource": (1610743817, 2, (3, 0), (), "ADCInsertUnitsDefaultSource", None),
		"ADCInsertUnitsDefaultTarget": (1610743819, 2, (3, 0), (), "ADCInsertUnitsDefaultTarget", None),
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"HyperlinkDisplayCursor": (1610743813, 2, (11, 0), (), "HyperlinkDisplayCursor", None),
		"HyperlinkDisplayTooltip": (1610743815, 2, (11, 0), (), "HyperlinkDisplayTooltip", None),
		"KeyboardAccelerator": (1610743809, 2, (3, 0), (), "KeyboardAccelerator", None),
		"KeyboardPriority": (1610743811, 2, (3, 0), (), "KeyboardPriority", None),
		"SCMCommandMode": (1610743827, 2, (3, 0), (), "SCMCommandMode", None),
		"SCMDefaultMode": (1610743823, 2, (3, 0), (), "SCMDefaultMode", None),
		"SCMEditMode": (1610743825, 2, (3, 0), (), "SCMEditMode", None),
		"SCMTimeMode": (1610743829, 2, (11, 0), (), "SCMTimeMode", None),
		"SCMTimeValue": (1610743831, 2, (3, 0), (), "SCMTimeValue", None),
		"ShortCutMenuDisplay": (1610743821, 2, (11, 0), (), "ShortCutMenuDisplay", None),
	}
	_prop_map_put_ = {
		"ADCInsertUnitsDefaultSource": ((1610743817, LCID, 4, 0),()),
		"ADCInsertUnitsDefaultTarget": ((1610743819, LCID, 4, 0),()),
		"HyperlinkDisplayCursor": ((1610743813, LCID, 4, 0),()),
		"HyperlinkDisplayTooltip": ((1610743815, LCID, 4, 0),()),
		"KeyboardAccelerator": ((1610743809, LCID, 4, 0),()),
		"KeyboardPriority": ((1610743811, LCID, 4, 0),()),
		"SCMCommandMode": ((1610743827, LCID, 4, 0),()),
		"SCMDefaultMode": ((1610743823, LCID, 4, 0),()),
		"SCMEditMode": ((1610743825, LCID, 4, 0),()),
		"SCMTimeMode": ((1610743829, LCID, 4, 0),()),
		"SCMTimeValue": ((1610743831, LCID, 4, 0),()),
		"ShortCutMenuDisplay": ((1610743821, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadRasterImage(DispatchBaseClass):
	CLSID = IID('{EE3833FA-927E-4272-A918-8B487E445600}')
	coclass_clsid = IID('{1FD7F53F-7ED5-439C-9A77-A3821CD09E98}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ClipBoundary(self, boundry=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 1),),boundry
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Brightness": (1, 2, (3, 0), (), "Brightness", None),
		"ClippingEnabled": (11, 2, (11, 0), (), "ClippingEnabled", None),
		"Contrast": (2, 2, (3, 0), (), "Contrast", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Fade": (3, 2, (3, 0), (), "Fade", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (14, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"ImageFile": (9, 2, (8, 0), (), "ImageFile", None),
		"ImageHeight": (7, 2, (5, 0), (), "ImageHeight", None),
		"ImageVisibility": (10, 2, (11, 0), (), "ImageVisibility", None),
		"ImageWidth": (6, 2, (5, 0), (), "ImageWidth", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Name": (8, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (4, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (5, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (17, 2, (5, 0), (), "ScaleFactor", None),
		"ShowRotation": (16, 2, (11, 0), (), "ShowRotation", None),
		"Transparency": (12, 2, (11, 0), (), "Transparency", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (15, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Brightness": ((1, LCID, 4, 0),()),
		"ClippingEnabled": ((11, LCID, 4, 0),()),
		"Contrast": ((2, LCID, 4, 0),()),
		"Fade": ((3, LCID, 4, 0),()),
		"ImageFile": ((9, LCID, 4, 0),()),
		"ImageHeight": ((7, LCID, 4, 0),()),
		"ImageVisibility": ((10, LCID, 4, 0),()),
		"ImageWidth": ((6, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Name": ((8, LCID, 4, 0),()),
		"Origin": ((4, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((5, LCID, 4, 0),()),
		"ScaleFactor": ((17, LCID, 4, 0),()),
		"ShowRotation": ((16, LCID, 4, 0),()),
		"Transparency": ((12, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadRay(DispatchBaseClass):
	CLSID = IID('{BE71C3CD-270F-4A01-86F4-91694B267C19}')
	coclass_clsid = IID('{FD51ED8A-D518-4554-B236-B6E9D234FD03}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BasePoint": (1, 2, (12, 0), (), "BasePoint", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DirectionVector": (3, 2, (12, 0), (), "DirectionVector", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"SecondPoint": (2, 2, (12, 0), (), "SecondPoint", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((1, LCID, 4, 0),()),
		"DirectionVector": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"SecondPoint": ((2, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadRegion(DispatchBaseClass):
	CLSID = IID('{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')
	coclass_clsid = IID('{38C8B14E-7879-4DA9-8C3F-8CAAC359293A}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Boolean(self, Operation=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (9, 1)),Operation
			, Object)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def Explode(self):
		return self._ApplyTypes_(11, 1, (12, 0), (), 'Explode', None,)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (1, 2, (5, 0), (), "Area", None),
		"Centroid": (2, 2, (12, 0), (), "Centroid", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"MomentOfInertia": (3, 2, (12, 0), (), "MomentOfInertia", None),
		"Normal": (4, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Perimeter": (5, 2, (5, 0), (), "Perimeter", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"PrincipalDirections": (6, 2, (12, 0), (), "PrincipalDirections", None),
		"PrincipalMoments": (7, 2, (12, 0), (), "PrincipalMoments", None),
		"ProductOfInertia": (8, 2, (5, 0), (), "ProductOfInertia", None),
		"RadiiOfGyration": (9, 2, (12, 0), (), "RadiiOfGyration", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadRegisteredApplication(DispatchBaseClass):
	CLSID = IID('{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')
	coclass_clsid = IID('{CC23CA32-9892-4FBA-A108-FE31CA0F35A6}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadRegisteredApplications(DispatchBaseClass):
	CLSID = IID('{5A832756-01AF-4D2F-89A6-50E0121AFD1A}')
	coclass_clsid = IID('{713C0E8A-5AE8-4695-B442-5ED6C4FE5C42}')

	# Result is of type IAcadRegisteredApplication
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadRegisteredApplication
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadRevolvedSurface(DispatchBaseClass):
	CLSID = IID('{0E305EE4-A4BB-4D14-A375-B3BAFC9D38C9}')
	coclass_clsid = IID('{9ECF83FB-23C5-43B6-83DE-93CFBDD74D4A}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"AxisDirection": (4, 2, (12, 0), (), "AxisDirection", None),
		"AxisPosition": (3, 2, (12, 0), (), "AxisPosition", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"RevolutionAngle": (2, 2, (5, 0), (), "RevolutionAngle", None),
		"SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
		"VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AxisPosition": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"RevolutionAngle": ((2, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UIsolineDensity": ((10, LCID, 4, 0),()),
		"VIsolineDensity": ((11, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSection(DispatchBaseClass):
	CLSID = IID('{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
	coclass_clsid = IID('{7C239DAB-BC87-45F3-B7B1-FCC1541A235B}')

	def AddVertex(self, nIndex=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1), (12, 1)),nIndex
			, val)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def CreateJog(self, varPt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((12, 1),),varPt
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GenerateSectionGeometry(self, pEntity=defaultNamedNotOptArg, pIntersectionBoundaryObjs=pythoncom.Missing, pIntersectionFillObjs=pythoncom.Missing, pBackgroudnObjs=pythoncom.Missing
			, pForegroudObjs=pythoncom.Missing, pCurveTangencyObjs=pythoncom.Missing):
		return self._ApplyTypes_(20, 1, (24, 0), ((9, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GenerateSectionGeometry', None,pEntity
			, pIntersectionBoundaryObjs, pIntersectionFillObjs, pBackgroudnObjs, pForegroudObjs, pCurveTangencyObjs
			)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def HitTest(self, varPtHit=defaultNamedNotOptArg, pHit=pythoncom.Missing, pSegmentIndex=pythoncom.Missing, pPtOnSegment=pythoncom.Missing
			, pSubItem=pythoncom.Missing):
		return self._ApplyTypes_(17, 1, (24, 0), ((12, 1), (16395, 2), (16387, 2), (16396, 2), (16387, 2)), 'HitTest', None,varPtHit
			, pHit, pSegmentIndex, pPtOnSegment, pSubItem)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def RemoveVertex(self, nIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1),),nIndex
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BottomHeight": (11, 2, (5, 0), (), "BottomHeight", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Elevation": (9, 2, (5, 0), (), "Elevation", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		# Method 'IndicatorFillColor' returns object of type 'IAcadAcCmColor'
		"IndicatorFillColor": (8, 2, (9, 0), (), "IndicatorFillColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"IndicatorTransparency": (7, 2, (3, 0), (), "IndicatorTransparency", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"LiveSectionEnabled": (6, 2, (11, 0), (), "LiveSectionEnabled", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Normal": (5, 2, (12, 0), (), "Normal", None),
		"NumVertices": (12, 2, (3, 0), (), "NumVertices", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'Settings' returns object of type 'IAcadSectionSettings'
		"Settings": (19, 2, (9, 0), (), "Settings", '{BB124B3C-3174-4CB8-8157-E5EFD03347AD}'),
		"State": (2, 2, (3, 0), (), "State", None),
		"TopHeight": (10, 2, (5, 0), (), "TopHeight", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VerticalDirection": (4, 2, (12, 0), (), "VerticalDirection", None),
		"Vertices": (13, 2, (12, 0), (), "Vertices", None),
		"ViewingDirection": (3, 2, (12, 0), (), "ViewingDirection", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"BottomHeight": ((11, LCID, 4, 0),()),
		"Elevation": ((9, LCID, 4, 0),()),
		"IndicatorFillColor": ((8, LCID, 4, 0),()),
		"IndicatorTransparency": ((7, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"LiveSectionEnabled": ((6, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"State": ((2, LCID, 4, 0),()),
		"TopHeight": ((10, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VerticalDirection": ((4, LCID, 4, 0),()),
		"Vertices": ((13, LCID, 4, 0),()),
		"ViewingDirection": ((3, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSectionManager(DispatchBaseClass):
	CLSID = IID('{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}')
	coclass_clsid = IID('{8795DA35-54AA-4DCB-A065-E7397C8568A9}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	# Result is of type IAcadSection
	def GetLiveSection(self):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetLiveSection', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	def GetUniqueSectionName(self, pBaseName=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(3, LCID, 1, (8, 0), ((8, 1),),pBaseName
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadSection
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{4EE05AF2-D6B9-4D79-9734-C175AC445099}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadSectionSettings(DispatchBaseClass):
	CLSID = IID('{BB124B3C-3174-4CB8-8157-E5EFD03347AD}')
	coclass_clsid = IID('{26A325BD-C715-48C5-AE7D-8E9EBEE01922}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	# Result is of type IAcadSectionTypeSettings
	def GetSectionTypeSettings(self, secType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),secType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSectionTypeSettings', '{62E19FBE-3C3D-4377-9E2F-02F84B11980D}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"CurrentSectionType": (1, 2, (3, 0), (), "CurrentSectionType", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
		"CurrentSectionType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSectionTypeSettings(DispatchBaseClass):
	CLSID = IID('{62E19FBE-3C3D-4377-9E2F-02F84B11980D}')
	coclass_clsid = IID('{F2A7D936-C8D3-4A96-B791-3DC0B718C507}')

	_prop_map_get_ = {
		# Method 'BackgroundLinesColor' returns object of type 'IAcadAcCmColor'
		"BackgroundLinesColor": (93, 2, (9, 0), (), "BackgroundLinesColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"BackgroundLinesHiddenLine": (92, 2, (11, 0), (), "BackgroundLinesHiddenLine", None),
		"BackgroundLinesLayer": (94, 2, (8, 0), (), "BackgroundLinesLayer", None),
		"BackgroundLinesLinetype": (95, 2, (8, 0), (), "BackgroundLinesLinetype", None),
		"BackgroundLinesLinetypeScale": (96, 2, (5, 0), (), "BackgroundLinesLinetypeScale", None),
		"BackgroundLinesLineweight": (98, 2, (3, 0), (), "BackgroundLinesLineweight", None),
		"BackgroundLinesPlotStyleName": (97, 2, (8, 0), (), "BackgroundLinesPlotStyleName", None),
		"BackgroundLinesVisible": (91, 2, (11, 0), (), "BackgroundLinesVisible", None),
		# Method 'CurveTangencyLinesColor' returns object of type 'IAcadAcCmColor'
		"CurveTangencyLinesColor": (132, 2, (9, 0), (), "CurveTangencyLinesColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"CurveTangencyLinesLayer": (133, 2, (8, 0), (), "CurveTangencyLinesLayer", None),
		"CurveTangencyLinesLinetype": (134, 2, (8, 0), (), "CurveTangencyLinesLinetype", None),
		"CurveTangencyLinesLinetypeScale": (135, 2, (5, 0), (), "CurveTangencyLinesLinetypeScale", None),
		"CurveTangencyLinesLineweight": (137, 2, (3, 0), (), "CurveTangencyLinesLineweight", None),
		"CurveTangencyLinesPlotStyleName": (136, 2, (8, 0), (), "CurveTangencyLinesPlotStyleName", None),
		"CurveTangencyLinesVisible": (131, 2, (11, 0), (), "CurveTangencyLinesVisible", None),
		"DestinationBlock": (3, 2, (12, 0), (), "DestinationBlock", None),
		"DestinationFile": (4, 2, (8, 0), (), "DestinationFile", None),
		# Method 'ForegroundLinesColor' returns object of type 'IAcadAcCmColor'
		"ForegroundLinesColor": (113, 2, (9, 0), (), "ForegroundLinesColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"ForegroundLinesEdgeTransparency": (120, 2, (3, 0), (), "ForegroundLinesEdgeTransparency", None),
		"ForegroundLinesFaceTransparency": (119, 2, (3, 0), (), "ForegroundLinesFaceTransparency", None),
		"ForegroundLinesHiddenLine": (112, 2, (11, 0), (), "ForegroundLinesHiddenLine", None),
		"ForegroundLinesLayer": (114, 2, (8, 0), (), "ForegroundLinesLayer", None),
		"ForegroundLinesLinetype": (115, 2, (8, 0), (), "ForegroundLinesLinetype", None),
		"ForegroundLinesLinetypeScale": (116, 2, (5, 0), (), "ForegroundLinesLinetypeScale", None),
		"ForegroundLinesLineweight": (118, 2, (3, 0), (), "ForegroundLinesLineweight", None),
		"ForegroundLinesPlotStyleName": (117, 2, (8, 0), (), "ForegroundLinesPlotStyleName", None),
		"ForegroundLinesVisible": (111, 2, (11, 0), (), "ForegroundLinesVisible", None),
		"GenerationOptions": (1, 2, (3, 0), (), "GenerationOptions", None),
		# Method 'IntersectionBoundaryColor' returns object of type 'IAcadAcCmColor'
		"IntersectionBoundaryColor": (51, 2, (9, 0), (), "IntersectionBoundaryColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"IntersectionBoundaryDivisionLines": (57, 2, (11, 0), (), "IntersectionBoundaryDivisionLines", None),
		"IntersectionBoundaryLayer": (52, 2, (8, 0), (), "IntersectionBoundaryLayer", None),
		"IntersectionBoundaryLinetype": (53, 2, (8, 0), (), "IntersectionBoundaryLinetype", None),
		"IntersectionBoundaryLinetypeScale": (54, 2, (5, 0), (), "IntersectionBoundaryLinetypeScale", None),
		"IntersectionBoundaryLineweight": (56, 2, (3, 0), (), "IntersectionBoundaryLineweight", None),
		"IntersectionBoundaryPlotStyleName": (55, 2, (8, 0), (), "IntersectionBoundaryPlotStyleName", None),
		# Method 'IntersectionFillColor' returns object of type 'IAcadAcCmColor'
		"IntersectionFillColor": (77, 2, (9, 0), (), "IntersectionFillColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"IntersectionFillFaceTransparency": (83, 2, (3, 0), (), "IntersectionFillFaceTransparency", None),
		"IntersectionFillHatchAngle": (74, 2, (5, 0), (), "IntersectionFillHatchAngle", None),
		"IntersectionFillHatchPatternName": (73, 2, (8, 0), (), "IntersectionFillHatchPatternName", None),
		"IntersectionFillHatchPatternType": (72, 2, (3, 0), (), "IntersectionFillHatchPatternType", None),
		"IntersectionFillHatchScale": (75, 2, (5, 0), (), "IntersectionFillHatchScale", None),
		"IntersectionFillHatchSpacing": (76, 2, (5, 0), (), "IntersectionFillHatchSpacing", None),
		"IntersectionFillLayer": (78, 2, (8, 0), (), "IntersectionFillLayer", None),
		"IntersectionFillLinetype": (79, 2, (8, 0), (), "IntersectionFillLinetype", None),
		"IntersectionFillLinetypeScale": (80, 2, (5, 0), (), "IntersectionFillLinetypeScale", None),
		"IntersectionFillLineweight": (82, 2, (3, 0), (), "IntersectionFillLineweight", None),
		"IntersectionFillPlotStyleName": (81, 2, (8, 0), (), "IntersectionFillPlotStyleName", None),
		"IntersectionFillVisible": (71, 2, (11, 0), (), "IntersectionFillVisible", None),
		"SourceObjects": (2, 2, (12, 0), (), "SourceObjects", None),
	}
	_prop_map_put_ = {
		"BackgroundLinesColor": ((93, LCID, 4, 0),()),
		"BackgroundLinesHiddenLine": ((92, LCID, 4, 0),()),
		"BackgroundLinesLayer": ((94, LCID, 4, 0),()),
		"BackgroundLinesLinetype": ((95, LCID, 4, 0),()),
		"BackgroundLinesLinetypeScale": ((96, LCID, 4, 0),()),
		"BackgroundLinesLineweight": ((98, LCID, 4, 0),()),
		"BackgroundLinesPlotStyleName": ((97, LCID, 4, 0),()),
		"BackgroundLinesVisible": ((91, LCID, 4, 0),()),
		"CurveTangencyLinesColor": ((132, LCID, 4, 0),()),
		"CurveTangencyLinesLayer": ((133, LCID, 4, 0),()),
		"CurveTangencyLinesLinetype": ((134, LCID, 4, 0),()),
		"CurveTangencyLinesLinetypeScale": ((135, LCID, 4, 0),()),
		"CurveTangencyLinesLineweight": ((137, LCID, 4, 0),()),
		"CurveTangencyLinesPlotStyleName": ((136, LCID, 4, 0),()),
		"CurveTangencyLinesVisible": ((131, LCID, 4, 0),()),
		"DestinationBlock": ((3, LCID, 4, 0),()),
		"DestinationFile": ((4, LCID, 4, 0),()),
		"ForegroundLinesColor": ((113, LCID, 4, 0),()),
		"ForegroundLinesEdgeTransparency": ((120, LCID, 4, 0),()),
		"ForegroundLinesFaceTransparency": ((119, LCID, 4, 0),()),
		"ForegroundLinesHiddenLine": ((112, LCID, 4, 0),()),
		"ForegroundLinesLayer": ((114, LCID, 4, 0),()),
		"ForegroundLinesLinetype": ((115, LCID, 4, 0),()),
		"ForegroundLinesLinetypeScale": ((116, LCID, 4, 0),()),
		"ForegroundLinesLineweight": ((118, LCID, 4, 0),()),
		"ForegroundLinesPlotStyleName": ((117, LCID, 4, 0),()),
		"ForegroundLinesVisible": ((111, LCID, 4, 0),()),
		"GenerationOptions": ((1, LCID, 4, 0),()),
		"IntersectionBoundaryColor": ((51, LCID, 4, 0),()),
		"IntersectionBoundaryDivisionLines": ((57, LCID, 4, 0),()),
		"IntersectionBoundaryLayer": ((52, LCID, 4, 0),()),
		"IntersectionBoundaryLinetype": ((53, LCID, 4, 0),()),
		"IntersectionBoundaryLinetypeScale": ((54, LCID, 4, 0),()),
		"IntersectionBoundaryLineweight": ((56, LCID, 4, 0),()),
		"IntersectionBoundaryPlotStyleName": ((55, LCID, 4, 0),()),
		"IntersectionFillColor": ((77, LCID, 4, 0),()),
		"IntersectionFillFaceTransparency": ((83, LCID, 4, 0),()),
		"IntersectionFillHatchAngle": ((74, LCID, 4, 0),()),
		"IntersectionFillHatchPatternName": ((73, LCID, 4, 0),()),
		"IntersectionFillHatchPatternType": ((72, LCID, 4, 0),()),
		"IntersectionFillHatchScale": ((75, LCID, 4, 0),()),
		"IntersectionFillHatchSpacing": ((76, LCID, 4, 0),()),
		"IntersectionFillLayer": ((78, LCID, 4, 0),()),
		"IntersectionFillLinetype": ((79, LCID, 4, 0),()),
		"IntersectionFillLinetypeScale": ((80, LCID, 4, 0),()),
		"IntersectionFillLineweight": ((82, LCID, 4, 0),()),
		"IntersectionFillPlotStyleName": ((81, LCID, 4, 0),()),
		"IntersectionFillVisible": ((71, LCID, 4, 0),()),
		"SourceObjects": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSectionTypeSettings2(DispatchBaseClass):
	CLSID = IID('{21158918-4D1E-49F5-8E6A-E4DFF3386250}')
	coclass_clsid = IID('{F2A7D936-C8D3-4A96-B791-3DC0B718C507}')

	_prop_map_get_ = {
		# Method 'BackgroundLinesColor' returns object of type 'IAcadAcCmColor'
		"BackgroundLinesColor": (93, 2, (9, 0), (), "BackgroundLinesColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"BackgroundLinesHiddenLine": (92, 2, (11, 0), (), "BackgroundLinesHiddenLine", None),
		"BackgroundLinesLayer": (94, 2, (8, 0), (), "BackgroundLinesLayer", None),
		"BackgroundLinesLinetype": (95, 2, (8, 0), (), "BackgroundLinesLinetype", None),
		"BackgroundLinesLinetypeScale": (96, 2, (5, 0), (), "BackgroundLinesLinetypeScale", None),
		"BackgroundLinesLineweight": (98, 2, (3, 0), (), "BackgroundLinesLineweight", None),
		"BackgroundLinesPlotStyleName": (97, 2, (8, 0), (), "BackgroundLinesPlotStyleName", None),
		"BackgroundLinesVisible": (91, 2, (11, 0), (), "BackgroundLinesVisible", None),
		# Method 'CurveTangencyLinesColor' returns object of type 'IAcadAcCmColor'
		"CurveTangencyLinesColor": (132, 2, (9, 0), (), "CurveTangencyLinesColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"CurveTangencyLinesLayer": (133, 2, (8, 0), (), "CurveTangencyLinesLayer", None),
		"CurveTangencyLinesLinetype": (134, 2, (8, 0), (), "CurveTangencyLinesLinetype", None),
		"CurveTangencyLinesLinetypeScale": (135, 2, (5, 0), (), "CurveTangencyLinesLinetypeScale", None),
		"CurveTangencyLinesLineweight": (137, 2, (3, 0), (), "CurveTangencyLinesLineweight", None),
		"CurveTangencyLinesPlotStyleName": (136, 2, (8, 0), (), "CurveTangencyLinesPlotStyleName", None),
		"CurveTangencyLinesVisible": (131, 2, (11, 0), (), "CurveTangencyLinesVisible", None),
		"DestinationBlock": (3, 2, (12, 0), (), "DestinationBlock", None),
		"DestinationFile": (4, 2, (8, 0), (), "DestinationFile", None),
		# Method 'ForegroundLinesColor' returns object of type 'IAcadAcCmColor'
		"ForegroundLinesColor": (113, 2, (9, 0), (), "ForegroundLinesColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"ForegroundLinesEdgeTransparency": (120, 2, (3, 0), (), "ForegroundLinesEdgeTransparency", None),
		"ForegroundLinesFaceTransparency": (119, 2, (3, 0), (), "ForegroundLinesFaceTransparency", None),
		"ForegroundLinesHiddenLine": (112, 2, (11, 0), (), "ForegroundLinesHiddenLine", None),
		"ForegroundLinesLayer": (114, 2, (8, 0), (), "ForegroundLinesLayer", None),
		"ForegroundLinesLinetype": (115, 2, (8, 0), (), "ForegroundLinesLinetype", None),
		"ForegroundLinesLinetypeScale": (116, 2, (5, 0), (), "ForegroundLinesLinetypeScale", None),
		"ForegroundLinesLineweight": (118, 2, (3, 0), (), "ForegroundLinesLineweight", None),
		"ForegroundLinesPlotStyleName": (117, 2, (8, 0), (), "ForegroundLinesPlotStyleName", None),
		"ForegroundLinesVisible": (111, 2, (11, 0), (), "ForegroundLinesVisible", None),
		"GenerationOptions": (1, 2, (3, 0), (), "GenerationOptions", None),
		# Method 'IntersectionBoundaryColor' returns object of type 'IAcadAcCmColor'
		"IntersectionBoundaryColor": (51, 2, (9, 0), (), "IntersectionBoundaryColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"IntersectionBoundaryDivisionLines": (57, 2, (11, 0), (), "IntersectionBoundaryDivisionLines", None),
		"IntersectionBoundaryLayer": (52, 2, (8, 0), (), "IntersectionBoundaryLayer", None),
		"IntersectionBoundaryLinetype": (53, 2, (8, 0), (), "IntersectionBoundaryLinetype", None),
		"IntersectionBoundaryLinetypeScale": (54, 2, (5, 0), (), "IntersectionBoundaryLinetypeScale", None),
		"IntersectionBoundaryLineweight": (56, 2, (3, 0), (), "IntersectionBoundaryLineweight", None),
		"IntersectionBoundaryPlotStyleName": (55, 2, (8, 0), (), "IntersectionBoundaryPlotStyleName", None),
		"IntersectionBoundaryVisible": (50, 2, (11, 0), (), "IntersectionBoundaryVisible", None),
		# Method 'IntersectionFillColor' returns object of type 'IAcadAcCmColor'
		"IntersectionFillColor": (77, 2, (9, 0), (), "IntersectionFillColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"IntersectionFillFaceTransparency": (83, 2, (3, 0), (), "IntersectionFillFaceTransparency", None),
		"IntersectionFillHatchAngle": (74, 2, (5, 0), (), "IntersectionFillHatchAngle", None),
		"IntersectionFillHatchPatternName": (73, 2, (8, 0), (), "IntersectionFillHatchPatternName", None),
		"IntersectionFillHatchPatternType": (72, 2, (3, 0), (), "IntersectionFillHatchPatternType", None),
		"IntersectionFillHatchScale": (75, 2, (5, 0), (), "IntersectionFillHatchScale", None),
		"IntersectionFillHatchSpacing": (76, 2, (5, 0), (), "IntersectionFillHatchSpacing", None),
		"IntersectionFillLayer": (78, 2, (8, 0), (), "IntersectionFillLayer", None),
		"IntersectionFillLinetype": (79, 2, (8, 0), (), "IntersectionFillLinetype", None),
		"IntersectionFillLinetypeScale": (80, 2, (5, 0), (), "IntersectionFillLinetypeScale", None),
		"IntersectionFillLineweight": (82, 2, (3, 0), (), "IntersectionFillLineweight", None),
		"IntersectionFillPlotStyleName": (81, 2, (8, 0), (), "IntersectionFillPlotStyleName", None),
		"IntersectionFillVisible": (71, 2, (11, 0), (), "IntersectionFillVisible", None),
		"SourceObjects": (2, 2, (12, 0), (), "SourceObjects", None),
	}
	_prop_map_put_ = {
		"BackgroundLinesColor": ((93, LCID, 4, 0),()),
		"BackgroundLinesHiddenLine": ((92, LCID, 4, 0),()),
		"BackgroundLinesLayer": ((94, LCID, 4, 0),()),
		"BackgroundLinesLinetype": ((95, LCID, 4, 0),()),
		"BackgroundLinesLinetypeScale": ((96, LCID, 4, 0),()),
		"BackgroundLinesLineweight": ((98, LCID, 4, 0),()),
		"BackgroundLinesPlotStyleName": ((97, LCID, 4, 0),()),
		"BackgroundLinesVisible": ((91, LCID, 4, 0),()),
		"CurveTangencyLinesColor": ((132, LCID, 4, 0),()),
		"CurveTangencyLinesLayer": ((133, LCID, 4, 0),()),
		"CurveTangencyLinesLinetype": ((134, LCID, 4, 0),()),
		"CurveTangencyLinesLinetypeScale": ((135, LCID, 4, 0),()),
		"CurveTangencyLinesLineweight": ((137, LCID, 4, 0),()),
		"CurveTangencyLinesPlotStyleName": ((136, LCID, 4, 0),()),
		"CurveTangencyLinesVisible": ((131, LCID, 4, 0),()),
		"DestinationBlock": ((3, LCID, 4, 0),()),
		"DestinationFile": ((4, LCID, 4, 0),()),
		"ForegroundLinesColor": ((113, LCID, 4, 0),()),
		"ForegroundLinesEdgeTransparency": ((120, LCID, 4, 0),()),
		"ForegroundLinesFaceTransparency": ((119, LCID, 4, 0),()),
		"ForegroundLinesHiddenLine": ((112, LCID, 4, 0),()),
		"ForegroundLinesLayer": ((114, LCID, 4, 0),()),
		"ForegroundLinesLinetype": ((115, LCID, 4, 0),()),
		"ForegroundLinesLinetypeScale": ((116, LCID, 4, 0),()),
		"ForegroundLinesLineweight": ((118, LCID, 4, 0),()),
		"ForegroundLinesPlotStyleName": ((117, LCID, 4, 0),()),
		"ForegroundLinesVisible": ((111, LCID, 4, 0),()),
		"GenerationOptions": ((1, LCID, 4, 0),()),
		"IntersectionBoundaryColor": ((51, LCID, 4, 0),()),
		"IntersectionBoundaryDivisionLines": ((57, LCID, 4, 0),()),
		"IntersectionBoundaryLayer": ((52, LCID, 4, 0),()),
		"IntersectionBoundaryLinetype": ((53, LCID, 4, 0),()),
		"IntersectionBoundaryLinetypeScale": ((54, LCID, 4, 0),()),
		"IntersectionBoundaryLineweight": ((56, LCID, 4, 0),()),
		"IntersectionBoundaryPlotStyleName": ((55, LCID, 4, 0),()),
		"IntersectionBoundaryVisible": ((50, LCID, 4, 0),()),
		"IntersectionFillColor": ((77, LCID, 4, 0),()),
		"IntersectionFillFaceTransparency": ((83, LCID, 4, 0),()),
		"IntersectionFillHatchAngle": ((74, LCID, 4, 0),()),
		"IntersectionFillHatchPatternName": ((73, LCID, 4, 0),()),
		"IntersectionFillHatchPatternType": ((72, LCID, 4, 0),()),
		"IntersectionFillHatchScale": ((75, LCID, 4, 0),()),
		"IntersectionFillHatchSpacing": ((76, LCID, 4, 0),()),
		"IntersectionFillLayer": ((78, LCID, 4, 0),()),
		"IntersectionFillLinetype": ((79, LCID, 4, 0),()),
		"IntersectionFillLinetypeScale": ((80, LCID, 4, 0),()),
		"IntersectionFillLineweight": ((82, LCID, 4, 0),()),
		"IntersectionFillPlotStyleName": ((81, LCID, 4, 0),()),
		"IntersectionFillVisible": ((71, LCID, 4, 0),()),
		"SourceObjects": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSecurityParams(DispatchBaseClass):
	CLSID = IID('{805F5969-BFFD-4683-9821-CD5590FF2F4E}')
	coclass_clsid = IID('{DF6525C2-6358-4B07-813D-708120C5FE1A}')

	_prop_map_get_ = {
		"Action": (1, 2, (3, 0), (), "Action", None),
		"Algorithm": (5, 2, (3, 0), (), "Algorithm", None),
		"Comment": (10, 2, (8, 0), (), "Comment", None),
		"Issuer": (8, 2, (8, 0), (), "Issuer", None),
		"KeyLength": (6, 2, (3, 0), (), "KeyLength", None),
		"Password": (2, 2, (8, 0), (), "Password", None),
		"ProviderName": (4, 2, (8, 0), (), "ProviderName", None),
		"ProviderType": (3, 2, (3, 0), (), "ProviderType", None),
		"SerialNumber": (9, 2, (8, 0), (), "SerialNumber", None),
		"Subject": (7, 2, (8, 0), (), "Subject", None),
		"TimeServer": (11, 2, (8, 0), (), "TimeServer", None),
	}
	_prop_map_put_ = {
		"Action": ((1, LCID, 4, 0),()),
		"Algorithm": ((5, LCID, 4, 0),()),
		"Comment": ((10, LCID, 4, 0),()),
		"Issuer": ((8, LCID, 4, 0),()),
		"KeyLength": ((6, LCID, 4, 0),()),
		"Password": ((2, LCID, 4, 0),()),
		"ProviderName": ((4, LCID, 4, 0),()),
		"ProviderType": ((3, LCID, 4, 0),()),
		"SerialNumber": ((9, LCID, 4, 0),()),
		"Subject": ((7, LCID, 4, 0),()),
		"TimeServer": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSelectionSet(DispatchBaseClass):
	CLSID = IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')
	coclass_clsid = IID('{B4D2D9F3-C5D1-44AF-913A-BAFB1F357950}')

	def AddItems(self, pSelSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((12, 1),),pSelSet
			)

	def Clear(self):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def Highlight(self, bFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((11, 1),),bFlag
			)

	# Result is of type IAcadEntity
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def RemoveItems(self, Objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((12, 1),),Objects
			)

	def Select(self, Mode=defaultNamedNotOptArg, Point1=defaultNamedOptArg, Point2=defaultNamedOptArg, FilterType=defaultNamedOptArg
			, FilterData=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Mode
			, Point1, Point2, FilterType, FilterData)

	def SelectAtPoint(self, Point=defaultNamedNotOptArg, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1), (12, 17), (12, 17)),Point
			, FilterType, FilterData)

	def SelectByPolygon(self, Mode=defaultNamedNotOptArg, PointsList=defaultNamedNotOptArg, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (12, 1), (12, 17), (12, 17)),Mode
			, PointsList, FilterType, FilterData)

	def SelectOnScreen(self, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 17), (12, 17)),FilterType
			, FilterData)

	def Update(self):
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (6, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1, 2, (3, 0), (), "Count", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E460D811-DFF0-4FCD-9D75-B440FA38263B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadSelectionSets(DispatchBaseClass):
	CLSID = IID('{913DBB03-9E39-4CA3-940E-BB7C4B88EF89}')
	coclass_clsid = IID('{2F6DB935-F865-4709-808C-ADA241F7E592}')

	# Result is of type IAcadSelectionSet
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')
		return ret

	# Result is of type IAcadSelectionSet
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadShadowDisplay(DispatchBaseClass):
	CLSID = IID('{3836C443-B84E-4F50-A3F5-D7DF6FF5366A}')
	coclass_clsid = None

	_prop_map_get_ = {
		"EnableShadowDisplay": (1610678274, 2, (3, 0), (), "EnableShadowDisplay", None),
		"ShadowDisplay": (1610678272, 2, (3, 0), (), "ShadowDisplay", None),
	}
	_prop_map_put_ = {
		"ShadowDisplay": ((1610678272, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadShape(DispatchBaseClass):
	CLSID = IID('{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')
	coclass_clsid = IID('{AC5CECFA-F03A-41D2-A89C-704C44935941}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (3, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Normal": (7, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (6, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (4, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (5, 2, (5, 0), (), "ScaleFactor", None),
		"Thickness": (8, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Height": ((3, LCID, 4, 0),()),
		"InsertionPoint": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Normal": ((7, LCID, 4, 0),()),
		"ObliqueAngle": ((6, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((4, LCID, 4, 0),()),
		"ScaleFactor": ((5, LCID, 4, 0),()),
		"Thickness": ((8, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSolid(DispatchBaseClass):
	CLSID = IID('{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')
	coclass_clsid = IID('{A6A3D586-44CF-44C2-A92C-620BB713B4F2}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (2, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Thickness": (3, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((2, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Thickness": ((3, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSortentsTable(DispatchBaseClass):
	CLSID = IID('{73166AEE-97AE-4F35-AD73-DFCD36E37C04}')
	coclass_clsid = IID('{048ED0E0-12CF-4C0F-9FFA-947C2FBE8C8E}')

	# Result is of type IAcadBlock
	def Block(self):
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Block', '{165531B8-67A4-46D8-AC99-F8150FA7A412}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFullDrawOrder(self, Objects=pythoncom.Missing, honorSortentsSysvar=defaultNamedNotOptArg):
		return self._ApplyTypes_(7, 1, (24, 0), ((16396, 2), (11, 1)), 'GetFullDrawOrder', None,Objects
			, honorSortentsSysvar)

	def GetRelativeDrawOrder(self, Objects=pythoncom.Missing, honorSortentsSysvar=defaultNamedNotOptArg):
		return self._ApplyTypes_(8, 1, (24, 0), ((16396, 2), (11, 1)), 'GetRelativeDrawOrder', None,Objects
			, honorSortentsSysvar)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def MoveAbove(self, Objects=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 1), (9, 1)),Objects
			, Target)

	def MoveBelow(self, Objects=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1), (9, 1)),Objects
			, Target)

	def MoveToBottom(self, Objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((12, 1),),Objects
			)

	def MoveToTop(self, Objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),Objects
			)

	def SetRelativeDrawOrder(self, Objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1),),Objects
			)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def SwapOrder(self, Object1=defaultNamedNotOptArg, Object2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((9, 1), (9, 1)),Object1
			, Object2)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSpline(DispatchBaseClass):
	CLSID = IID('{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')
	coclass_clsid = IID('{59A224A2-BEF8-4C89-96E0-83A5411ABB6C}')

	def AddFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
			, fitPoint)

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def DeleteFitPoint(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1),),Index
			)

	def ElevateOrder(self, Order=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1),),Order
			)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetControlPoint(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(15, 1, (12, 0), ((3, 1),), 'GetControlPoint', None,Index
			)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFitPoint(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(17, 1, (12, 0), ((3, 1),), 'GetFitPoint', None,Index
			)

	def GetWeight(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (5, 0), ((3, 1),),Index
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(23, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def PurgeFitData(self):
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

	def Reverse(self):
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetControlPoint(self, Index=defaultNamedNotOptArg, controlPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
			, controlPoint)

	def SetFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
			, fitPoint)

	def SetWeight(self, Index=defaultNamedNotOptArg, weight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
			, weight)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Area": (13, 2, (5, 0), (), "Area", None),
		"Closed": (6, 2, (11, 0), (), "Closed", None),
		"ControlPoints": (2, 2, (12, 0), (), "ControlPoints", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Degree": (5, 2, (3, 0), (), "Degree", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EndTangent": (11, 2, (12, 0), (), "EndTangent", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FitPoints": (4, 2, (12, 0), (), "FitPoints", None),
		"FitTolerance": (12, 2, (5, 0), (), "FitTolerance", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"IsPeriodic": (9, 2, (11, 0), (), "IsPeriodic", None),
		"IsPlanar": (7, 2, (11, 0), (), "IsPlanar", None),
		"IsRational": (8, 2, (11, 0), (), "IsRational", None),
		"Knots": (26, 2, (12, 0), (), "Knots", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"NumberOfControlPoints": (1, 2, (3, 0), (), "NumberOfControlPoints", None),
		"NumberOfFitPoints": (3, 2, (3, 0), (), "NumberOfFitPoints", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"StartTangent": (10, 2, (12, 0), (), "StartTangent", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Weights": (27, 2, (12, 0), (), "Weights", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"ControlPoints": ((2, LCID, 4, 0),()),
		"EndTangent": ((11, LCID, 4, 0),()),
		"FitPoints": ((4, LCID, 4, 0),()),
		"FitTolerance": ((12, LCID, 4, 0),()),
		"Knots": ((26, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"StartTangent": ((10, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Weights": ((27, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadState(DispatchBaseClass):
	CLSID = IID('{144790A6-6C66-49EC-96B0-DC148D06DB98}')
	coclass_clsid = IID('{2D46F523-8E0C-4E6D-A4BB-68ACED0C676C}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"IsQuiescent": (2, 2, (11, 0), (), "IsQuiescent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidEdge(DispatchBaseClass):
	CLSID = IID('{06619D36-FEC2-4CD3-97F1-84949FFD63C7}')
	coclass_clsid = IID('{559E3754-6F34-47AF-BC1F-E2BE712B16EB}')

	def OnModified(self):
		return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'color' returns object of type 'IAcadAcCmColor'
		"color": (1302, 2, (9, 0), (), "color", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
	}
	_prop_map_put_ = {
		"color": ((1302, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidFace(DispatchBaseClass):
	CLSID = IID('{84822F99-8F0C-4F7C-8251-4344919CFEF3}')
	coclass_clsid = IID('{4FC6CEE8-23F6-405F-8BA2-1F7036050715}')

	def OnModified(self):
		return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'color' returns object of type 'IAcadAcCmColor'
		"color": (1302, 2, (9, 0), (), "color", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
	}
	_prop_map_put_ = {
		"Material": ((1399, LCID, 4, 0),()),
		"color": ((1302, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidNode(DispatchBaseClass):
	CLSID = IID('{699B4233-20E7-4638-8439-384D3CB00019}')
	coclass_clsid = IID('{25F43C48-6A48-4646-8EC4-D34563D6A4F4}')

	def OnModified(self):
		return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'color' returns object of type 'IAcadAcCmColor'
		"color": (1302, 2, (9, 0), (), "color", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
	}
	_prop_map_put_ = {
		"color": ((1302, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidVertex(DispatchBaseClass):
	CLSID = IID('{DEF51352-1B14-465C-9183-A69B87A3D11C}')
	coclass_clsid = IID('{203D46FB-C6F0-4E95-B702-C1E01ADEBC04}')

	def OnModified(self):
		return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'color' returns object of type 'IAcadAcCmColor'
		"color": (1302, 2, (9, 0), (), "color", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
	}
	_prop_map_put_ = {
		"color": ((1302, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSubEntity(DispatchBaseClass):
	CLSID = IID('{FEF26B75-296F-4402-9210-EC80A9B39972}')
	coclass_clsid = IID('{2B82582B-C683-49C2-AC5E-20105AD47CE9}')

	def OnModified(self):
		return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		# Method 'color' returns object of type 'IAcadAcCmColor'
		"color": (1302, 2, (9, 0), (), "color", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
	}
	_prop_map_put_ = {
		"color": ((1302, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSummaryInfo(DispatchBaseClass):
	CLSID = IID('{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}')
	coclass_clsid = IID('{798391FE-4AF2-4851-9DDA-1F0D70C02A9E}')

	def AddCustomInfo(self, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (8, 1)),key
			, Value)

	def GetCustomByIndex(self, Index=defaultNamedNotOptArg, pKey=pythoncom.Missing, pValue=pythoncom.Missing):
		return self._ApplyTypes_(10, 1, (24, 0), ((3, 1), (16392, 2), (16392, 2)), 'GetCustomByIndex', None,Index
			, pKey, pValue)

	def GetCustomByKey(self, key=defaultNamedNotOptArg, pValue=pythoncom.Missing):
		return self._ApplyTypes_(11, 1, (24, 0), ((8, 1), (16392, 2)), 'GetCustomByKey', None,key
			, pValue)

	def NumCustomInfo(self):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), (),)

	def RemoveCustomByIndex(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1),),Index
			)

	def RemoveCustomByKey(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1),),key
			)

	def SetCustomByIndex(self, Index=defaultNamedNotOptArg, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (8, 1), (8, 1)),Index
			, key, Value)

	def SetCustomByKey(self, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (8, 1)),key
			, Value)

	_prop_map_get_ = {
		"Author": (1, 2, (8, 0), (), "Author", None),
		"Comments": (2, 2, (8, 0), (), "Comments", None),
		"HyperlinkBase": (3, 2, (8, 0), (), "HyperlinkBase", None),
		"Keywords": (4, 2, (8, 0), (), "Keywords", None),
		"LastSavedBy": (5, 2, (8, 0), (), "LastSavedBy", None),
		"RevisionNumber": (6, 2, (8, 0), (), "RevisionNumber", None),
		"Subject": (7, 2, (8, 0), (), "Subject", None),
		"Title": (8, 2, (8, 0), (), "Title", None),
	}
	_prop_map_put_ = {
		"Author": ((1, LCID, 4, 0),()),
		"Comments": ((2, LCID, 4, 0),()),
		"HyperlinkBase": ((3, LCID, 4, 0),()),
		"Keywords": ((4, LCID, 4, 0),()),
		"LastSavedBy": ((5, LCID, 4, 0),()),
		"RevisionNumber": ((6, LCID, 4, 0),()),
		"Subject": ((7, LCID, 4, 0),()),
		"Title": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSurface(DispatchBaseClass):
	CLSID = IID('{59747640-33C2-4824-B942-57E893619124}')
	coclass_clsid = IID('{8ED07FEF-E1B0-4CC3-B2BA-D354828AB952}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
		"VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UIsolineDensity": ((10, LCID, 4, 0),()),
		"VIsolineDensity": ((11, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadSweptSurface(DispatchBaseClass):
	CLSID = IID('{6F708280-7555-499F-B5E2-0248AB74AB2F}')
	coclass_clsid = IID('{FE054BB2-AF94-40AC-88AA-2F59F7018B1D}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Bank": (3, 2, (11, 0), (), "Bank", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Length": (6, 2, (5, 0), (), "Length", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"ProfileRotation": (2, 2, (5, 0), (), "ProfileRotation", None),
		"SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Twist": (4, 2, (5, 0), (), "Twist", None),
		"UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
		"VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
		"scale": (5, 2, (5, 0), (), "scale", None),
	}
	_prop_map_put_ = {
		"Bank": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"ProfileRotation": ((2, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Twist": ((4, LCID, 4, 0),()),
		"UIsolineDensity": ((10, LCID, 4, 0),()),
		"VIsolineDensity": ((11, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
		"scale": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadTable(DispatchBaseClass):
	CLSID = IID('{187D4409-BABE-43D8-8379-2AF11136DA16}')
	coclass_clsid = IID('{2C7D1157-7D50-4A88-9777-5EBBA3189AB8}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ClearSubSelection(self):
		return self._oleobj_.InvokeTypes(110, LCID, 1, (24, 0), (),)

	def ClearTableStyleOverrides(self, flag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((3, 1),),flag
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def DeleteCellContent(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(67, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
			, col)

	def DeleteColumns(self, col=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(96, LCID, 1, (24, 0), ((3, 1), (3, 1)),col
			, cols)

	def DeleteRows(self, row=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(98, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
			, Rows)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def FormatValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg, pVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(121, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (16392, 0)),row
			, col, nOption, pVal)

	def GenerateLayout(self):
		return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), (),)

	def GetAlignment(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(33, LCID, 1, (3, 0), ((3, 1),),rowType
			)

	def GetAttachmentPoint(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._ApplyTypes_(56, 1, (12, 0), ((3, 1), (3, 1)), 'GetAttachmentPoint', None,row
			, col)

	def GetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(77, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(37, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBackgroundColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(35, LCID, 1, (11, 0), ((3, 1),),rowType
			)

	def GetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(112, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, attdefId)

	def GetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(83, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
			, col)

	def GetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(81, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
			, col)

	def GetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(79, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(58, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(62, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
			, col)
		if ret is not None:
			ret = Dispatch(ret, 'GetCellBackgroundColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(60, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(64, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
			, col)
		if ret is not None:
			ret = Dispatch(ret, 'GetCellContentColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(1946, 1, (24, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetCellDataType', None,row
			, col, pDataType, pUnitType)

	def GetCellExtents(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bOuterCell=defaultNamedNotOptArg):
		return self._ApplyTypes_(55, 1, (12, 0), ((3, 1), (3, 1), (11, 1)), 'GetCellExtents', None,row
			, col, bOuterCell)

	def GetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1948, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(87, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, edge)
		if ret is not None:
			ret = Dispatch(ret, 'GetCellGridColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(85, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, edge)

	def GetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(89, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, edge)

	def GetCellStyleOverrides(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._ApplyTypes_(66, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellStyleOverrides', None,row
			, col)

	def GetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(73, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
			, col)

	def GetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(71, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
			, col)

	def GetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(53, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._ApplyTypes_(1950, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellValue', None,row
			, col)

	def GetColumnWidth(self, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (5, 0), ((3, 1),),col
			)

	# Result is of type IAcadAcCmColor
	def GetContentColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(39, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetContentColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(117, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
			, pDataType, pUnitType)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(114, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetFormat(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(119, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	# Result is of type IAcadAcCmColor
	def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)
		if ret is not None:
			ret = Dispatch(ret, 'GetGridColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(45, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(49, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetMinimumColumnWidth(self, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26, LCID, 1, (5, 0), ((3, 1),),col
			)

	def GetMinimumRowHeight(self, row=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(27, LCID, 1, (5, 0), ((3, 1),),row
			)

	def GetRowHeight(self, row=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (5, 0), ((3, 1),),row
			)

	def GetRowType(self, row=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(68, LCID, 1, (3, 0), ((3, 1),),row
			)

	def GetSubSelection(self, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing, colMax=pythoncom.Missing):
		return self._ApplyTypes_(108, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetSubSelection', None,rowMin
			, rowMax, colMin, colMax)

	def GetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(69, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
			, col)

	def GetTextHeight(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(43, LCID, 1, (5, 0), ((3, 1),),rowType
			)

	def GetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(75, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetTextStyle(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(41, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def HitTest(self, wpt=defaultNamedNotOptArg, wviewVec=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(104, 1, (11, 0), ((12, 1), (12, 1), (16387, 2), (16387, 2)), 'HitTest', None,wpt
			, wviewVec, resultRowIndex, resultColumnIndex)

	def InsertColumns(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(95, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),col
			, Width, cols)

	def InsertRows(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(97, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),row
			, Height, Rows)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def IsMergedCell(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, minRow=pythoncom.Missing, maxRow=pythoncom.Missing
			, minCol=pythoncom.Missing, maxCol=pythoncom.Missing):
		return self._ApplyTypes_(101, 1, (11, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'IsMergedCell', None,row
			, col, minRow, maxRow, minCol, maxCol
			)

	def MergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(99, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
			, maxRow, minCol, maxCol)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def RecomputeTableBlock(self, bForceUpdate=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((11, 1),),bForceUpdate
			)

	def ReselectSubRegion(self):
		return self._oleobj_.InvokeTypes(107, LCID, 1, (24, 0), (),)

	def ResetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2209, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
			, col)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def Select(self, wpt=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg, wxaper=defaultNamedNotOptArg
			, wyaper=defaultNamedNotOptArg, allowOutside=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(105, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1), (16387, 2), (16387, 2)), 'Select', None,wpt
			, wvwVec, wvwxVec, wxaper, wyaper, allowOutside
			, resultRowIndex, resultColumnIndex)

	def SelectSubRegion(self, wpt1=defaultNamedNotOptArg, wpt2=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg
			, seltype=defaultNamedNotOptArg, bIncludeCurrentSelection=defaultNamedNotOptArg, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing
			, colMax=pythoncom.Missing):
		return self._ApplyTypes_(106, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (3, 1), (11, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'SelectSubRegion', None,wpt1
			, wpt2, wvwVec, wvwxVec, seltype, bIncludeCurrentSelection
			, rowMin, rowMax, colMin, colMax)

	def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
			, cellAlignment)

	def SetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(78, LCID, 1, (24, 0), ((3, 1), (3, 1), (16395, 1)),row
			, col, bValue)

	def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((3, 1), (16395, 1)),rowTypes
			, bValue)

	def SetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg, bstrValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(113, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),row
			, col, attdefId, bstrValue)

	def SetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkRotation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
			, col, blkRotation)

	def SetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkScale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(82, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
			, col, blkScale)

	def SetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(80, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
			, col, blkId, bAutoFit)

	def SetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(59, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, cellAlignment)

	def SetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
			, col, pColor)

	def SetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(61, LCID, 1, (24, 0), ((3, 1), (3, 1), (16395, 1)),row
			, col, bValue)

	def SetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
			, col, pColor)

	def SetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1947, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (3, 0)),row
			, col, dataType, unitType)

	def SetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1949, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 0)),row
			, col, pFormat)

	def SetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(88, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),row
			, col, edges, pColor)

	def SetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(86, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),row
			, col, edges, Lineweight)

	def SetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(90, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
			, col, edges, bValue)

	def SetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(74, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
			, col, TextHeight)

	def SetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(72, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
			, col, bstrName)

	def SetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, CellType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, CellType)

	def SetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1951, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 0)),row
			, col, val)

	def SetCellValueFromText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2208, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (3, 1)),row
			, col, val, nOption)

	def SetColumnWidth(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((3, 1), (5, 1)),col
			, Width)

	def SetContentColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetDataType(self, rowTypes=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(118, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
			, dataType, unitType)

	def SetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, fieldId=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(115, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, fieldId)

	def SetFormat(self, rowTypes=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(120, LCID, 1, (24, 0), ((3, 1), (8, 0)),rowTypes
			, pFormat)

	def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
			, rowTypes, pColor)

	def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
			, rowTypes, Lineweight)

	def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
			, rowTypes, bValue)

	def SetRowHeight(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (5, 1)),row
			, Height)

	def SetSubSelection(self, rowMin=defaultNamedNotOptArg, rowMax=defaultNamedNotOptArg, colMin=defaultNamedNotOptArg, colMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(109, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),rowMin
			, rowMax, colMin, colMax)

	def SetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(70, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
			, col, pStr)

	def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
			, TextHeight)

	def SetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextRotation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(76, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, TextRotation)

	def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
			, bstrName)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def UnmergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(100, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
			, maxRow, minCol, maxCol)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Columns": (3, 2, (3, 0), (), "Columns", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (30, 2, (12, 0), (), "Direction", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HasSubSelection": (111, 2, (11, 0), (), "HasSubSelection", None),
		"HeaderSuppressed": (32, 2, (11, 0), (), "HeaderSuppressed", None),
		"Height": (6, 2, (5, 0), (), "Height", None),
		"HorzCellMargin": (8, 2, (5, 0), (), "HorzCellMargin", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (9, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"MinimumTableHeight": (29, 2, (5, 0), (), "MinimumTableHeight", None),
		"MinimumTableWidth": (28, 2, (5, 0), (), "MinimumTableWidth", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"RegenerateTableSuppressed": (116, 2, (11, 0), (), "RegenerateTableSuppressed", None),
		"Rows": (2, 2, (3, 0), (), "Rows", None),
		"StyleName": (1, 2, (8, 0), (), "StyleName", None),
		"TableStyleOverrides": (51, 2, (12, 0), (), "TableStyleOverrides", None),
		"TitleSuppressed": (31, 2, (11, 0), (), "TitleSuppressed", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VertCellMargin": (7, 2, (5, 0), (), "VertCellMargin", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"ColumnWidth": ((12, LCID, 4, 0),()),
		"Columns": ((3, LCID, 4, 0),()),
		"Direction": ((30, LCID, 4, 0),()),
		"FlowDirection": ((4, LCID, 4, 0),()),
		"HeaderSuppressed": ((32, LCID, 4, 0),()),
		"Height": ((6, LCID, 4, 0),()),
		"HorzCellMargin": ((8, LCID, 4, 0),()),
		"InsertionPoint": ((9, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"RegenerateTableSuppressed": ((116, LCID, 4, 0),()),
		"RowHeight": ((15, LCID, 4, 0),()),
		"Rows": ((2, LCID, 4, 0),()),
		"StyleName": ((1, LCID, 4, 0),()),
		"TitleSuppressed": ((31, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VertCellMargin": ((7, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadTable2(DispatchBaseClass):
	CLSID = IID('{109AA82B-2388-4431-B488-42AE26505C8A}')
	coclass_clsid = IID('{2C7D1157-7D50-4A88-9777-5EBBA3189AB8}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ClearSubSelection(self):
		return self._oleobj_.InvokeTypes(110, LCID, 1, (24, 0), (),)

	def ClearTableStyleOverrides(self, flag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((3, 1),),flag
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def CreateContent(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2213, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nIndex)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def DeleteCellContent(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(67, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
			, col)

	def DeleteColumns(self, col=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(96, LCID, 1, (24, 0), ((3, 1), (3, 1)),col
			, cols)

	def DeleteContent(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2215, LCID, 1, (24, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def DeleteRows(self, row=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(98, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
			, Rows)

	def EnableMergeAll(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, bEnable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2368, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),nRow
			, nCol, bEnable)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def FormatValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg, pVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(121, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (16392, 0)),row
			, col, nOption, pVal)

	def GenerateLayout(self):
		return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), (),)

	def GetAlignment(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(33, LCID, 1, (3, 0), ((3, 1),),rowType
			)

	def GetAttachmentPoint(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._ApplyTypes_(56, 1, (12, 0), ((3, 1), (3, 1)), 'GetAttachmentPoint', None,row
			, col)

	def GetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(77, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
			, col)

	def GetAutoScale2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2276, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	# Result is of type IAcadAcCmColor
	def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(37, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBackgroundColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(35, LCID, 1, (11, 0), ((3, 1),),rowType
			)

	def GetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(112, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, attdefId)

	def GetBlockAttributeValue2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2243, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent, blkId)

	def GetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(83, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
			, col)

	def GetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(81, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
			, col)

	def GetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(79, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetBlockTableRecordId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2241, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	def GetBreakHeight(self, nIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2309, LCID, 1, (5, 0), ((3, 1),),nIndex
			)

	def GetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(58, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(62, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
			, col)
		if ret is not None:
			ret = Dispatch(ret, 'GetCellBackgroundColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(60, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(64, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
			, col)
		if ret is not None:
			ret = Dispatch(ret, 'GetCellContentColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(1946, 1, (24, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetCellDataType', None,row
			, col, pDataType, pUnitType)

	def GetCellExtents(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bOuterCell=defaultNamedNotOptArg):
		return self._ApplyTypes_(55, 1, (12, 0), ((3, 1), (3, 1), (11, 1)), 'GetCellExtents', None,row
			, col, bOuterCell)

	def GetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1948, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
			, col)

	# Result is of type IAcadAcCmColor
	def GetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(87, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, edge)
		if ret is not None:
			ret = Dispatch(ret, 'GetCellGridColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(85, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, edge)

	def GetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(89, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, edge)

	def GetCellState(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2360, LCID, 1, (3, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def GetCellStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2249, LCID, 1, (8, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def GetCellStyleOverrides(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._ApplyTypes_(66, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellStyleOverrides', None,row
			, col)

	def GetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(73, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
			, col)

	def GetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(71, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
			, col)

	def GetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(53, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._ApplyTypes_(1950, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellValue', None,row
			, col)

	def GetColumnName(self, nIndex=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(65528, LCID, 1, (8, 0), ((3, 1),),nIndex
			)

	def GetColumnWidth(self, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (5, 0), ((3, 1),),col
			)

	# Result is of type IAcadAcCmColor
	def GetContentColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(39, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetContentColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	# Result is of type IAcadAcCmColor
	def GetContentColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2260, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)
		if ret is not None:
			ret = Dispatch(ret, 'GetContentColor2', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetContentLayout(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2327, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetContentType(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2311, LCID, 1, (3, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def GetCustomData(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, szKey=defaultNamedNotOptArg, pData=pythoncom.Missing):
		return self._ApplyTypes_(2247, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (16396, 2)), 'GetCustomData', None,nRow
			, nCol, szKey, pData)

	def GetDataFormat(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2227, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(117, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
			, pDataType, pUnitType)

	def GetDataType2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, pDataType=pythoncom.Missing
			, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(2262, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetDataType2', None,nRow
			, nCol, nContent, pDataType, pUnitType)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(114, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetFieldId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2232, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetFormat(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(119, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	def GetFormula(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2355, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	# Result is of type IAcadAcCmColor
	def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)
		if ret is not None:
			ret = Dispatch(ret, 'GetGridColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	# Result is of type IAcadAcCmColor
	def GetGridColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2291, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType)
		if ret is not None:
			ret = Dispatch(ret, 'GetGridColor2', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetGridDoubleLineSpacing(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2295, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType)

	def GetGridLineStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2340, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType)

	def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(45, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetGridLineWeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2281, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType)

	def GetGridLinetype(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2289, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType)

	def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(49, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetGridVisibility2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2293, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType)

	def GetHasFormula(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2354, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetMargin(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nMargin=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2324, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nMargin)

	def GetMinimumColumnWidth(self, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26, LCID, 1, (5, 0), ((3, 1),),col
			)

	def GetMinimumRowHeight(self, row=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(27, LCID, 1, (5, 0), ((3, 1),),row
			)

	def GetOverride(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2338, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetRotation(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(36322, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetRowHeight(self, row=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (5, 0), ((3, 1),),row
			)

	def GetRowType(self, row=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(68, LCID, 1, (3, 0), ((3, 1),),row
			)

	def GetScale(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2278, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetSubSelection(self, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing, colMax=pythoncom.Missing):
		return self._ApplyTypes_(108, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetSubSelection', None,rowMin
			, rowMax, colMin, colMax)

	def GetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(69, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
			, col)

	def GetTextHeight(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(43, LCID, 1, (5, 0), ((3, 1),),rowType
			)

	def GetTextHeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2272, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(75, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
			, col)

	def GetTextString(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2229, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetTextStyle(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(41, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	def GetTextStyle2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2264, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent)

	def GetValue(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
		return self._ApplyTypes_(2217, 1, (12, 0), ((3, 1), (3, 1), (3, 1)), 'GetValue', None,nRow
			, nCol, nContent)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def HitTest(self, wpt=defaultNamedNotOptArg, wviewVec=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(104, 1, (11, 0), ((12, 1), (12, 1), (16387, 2), (16387, 2)), 'HitTest', None,wpt
			, wviewVec, resultRowIndex, resultColumnIndex)

	def InsertColumns(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(95, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),col
			, Width, cols)

	def InsertColumnsAndInherit(self, col=defaultNamedNotOptArg, nInheritFrom=defaultNamedNotOptArg, nNumCols=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2353, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),col
			, nInheritFrom, nNumCols)

	def InsertRows(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(97, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),row
			, Height, Rows)

	def InsertRowsAndInherit(self, nIndex=defaultNamedNotOptArg, nInheritFrom=defaultNamedNotOptArg, nNumRows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2345, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),nIndex
			, nInheritFrom, nNumRows)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def IsContentEditable(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2358, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def IsEmpty(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2210, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def IsFormatEditable(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2359, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def IsMergeAllEnabled(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2369, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def IsMergedCell(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, minRow=pythoncom.Missing, maxRow=pythoncom.Missing
			, minCol=pythoncom.Missing, maxCol=pythoncom.Missing):
		return self._ApplyTypes_(101, 1, (11, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'IsMergedCell', None,row
			, col, minRow, maxRow, minCol, maxCol
			)

	def MergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(99, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
			, maxRow, minCol, maxCol)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def MoveContent(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nFromIndex=defaultNamedNotOptArg, nToIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2214, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nFromIndex, nToIndex)

	def RecomputeTableBlock(self, bForceUpdate=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((11, 1),),bForceUpdate
			)

	def RemoveAllOverrides(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2280, LCID, 1, (24, 0), ((3, 1), (3, 1)),nRow
			, nCol)

	def ReselectSubRegion(self):
		return self._oleobj_.InvokeTypes(107, LCID, 1, (24, 0), (),)

	def ResetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2209, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
			, col)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def Select(self, wpt=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg, wxaper=defaultNamedNotOptArg
			, wyaper=defaultNamedNotOptArg, allowOutside=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(105, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1), (16387, 2), (16387, 2)), 'Select', None,wpt
			, wvwVec, wvwxVec, wxaper, wyaper, allowOutside
			, resultRowIndex, resultColumnIndex)

	def SelectSubRegion(self, wpt1=defaultNamedNotOptArg, wpt2=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg
			, seltype=defaultNamedNotOptArg, bIncludeCurrentSelection=defaultNamedNotOptArg, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing
			, colMax=pythoncom.Missing):
		return self._ApplyTypes_(106, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (3, 1), (11, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'SelectSubRegion', None,wpt1
			, wpt2, wvwVec, wvwxVec, seltype, bIncludeCurrentSelection
			, rowMin, rowMax, colMin, colMax)

	def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
			, cellAlignment)

	def SetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(78, LCID, 1, (24, 0), ((3, 1), (3, 1), (16395, 1)),row
			, col, bValue)

	def SetAutoScale2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(36325, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nRow
			, nCol, nContent, bAutoFit)

	def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((3, 1), (16395, 1)),rowTypes
			, bValue)

	def SetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg, bstrValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(113, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),row
			, col, attdefId, bstrValue)

	def SetBlockAttributeValue2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
			, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2244, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),nRow
			, nCol, nContent, blkId, Value)

	def SetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkRotation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
			, col, blkRotation)

	def SetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkScale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(82, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
			, col, blkScale)

	def SetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(80, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
			, col, blkId, bAutoFit)

	def SetBlockTableRecordId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
			, autoFit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2242, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),nRow
			, nCol, nContent, blkId, autoFit)

	def SetBreakHeight(self, nIndex=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2310, LCID, 1, (24, 0), ((3, 1), (5, 1)),nIndex
			, Height)

	def SetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(59, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, cellAlignment)

	def SetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
			, col, pColor)

	def SetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(61, LCID, 1, (24, 0), ((3, 1), (3, 1), (16395, 1)),row
			, col, bValue)

	def SetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
			, col, pColor)

	def SetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1947, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (3, 0)),row
			, col, dataType, unitType)

	def SetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1949, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 0)),row
			, col, pFormat)

	def SetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(88, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),row
			, col, edges, pColor)

	def SetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(86, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),row
			, col, edges, Lineweight)

	def SetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(90, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
			, col, edges, bValue)

	def SetCellState(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nLock=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nLock)

	def SetCellStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, szCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2256, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),nRow
			, nCol, szCellStyle)

	def SetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(74, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
			, col, TextHeight)

	def SetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(72, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
			, col, bstrName)

	def SetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, CellType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, CellType)

	def SetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1951, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 0)),row
			, col, val)

	def SetCellValueFromText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2208, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (3, 1)),row
			, col, val, nOption)

	def SetColumnName(self, nIndex=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(65529, LCID, 1, (24, 0), ((3, 1), (8, 1)),nIndex
			, Name)

	def SetColumnWidth(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((3, 1), (5, 1)),col
			, Width)

	def SetContentColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetContentColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2261, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),nRow
			, nCol, nContent, pColor)

	def SetContentLayout(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, nLayout=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2328, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, nLayout)

	def SetCustomData(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, szKey=defaultNamedNotOptArg, data=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2248, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (12, 1)),nRow
			, nCol, szKey, data)

	def SetDataFormat(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, szFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2228, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
			, nCol, nContent, szFormat)

	def SetDataType(self, rowTypes=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(118, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
			, dataType, unitType)

	def SetDataType2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg
			, unitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2263, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent, dataType, unitType)

	def SetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, fieldId=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(115, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, fieldId)

	def SetFieldId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, acDbObjectId=defaultNamedNotOptArg
			, nflag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2233, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent, acDbObjectId, nflag)

	def SetFormat(self, rowTypes=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(120, LCID, 1, (24, 0), ((3, 1), (8, 0)),rowTypes
			, pFormat)

	def SetFormula(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, pszFormula=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2356, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
			, nCol, nContent, pszFormula)

	def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
			, rowTypes, pColor)

	def SetGridColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2292, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),nRow
			, nCol, nGridLineType, pColor)

	def SetGridDoubleLineSpacing(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, fSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2296, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
			, nCol, nGridLineType, fSpacing)

	def SetGridLineStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineTypes=defaultNamedNotOptArg, nLineStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2341, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineTypes, nLineStyle)

	def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
			, rowTypes, Lineweight)

	def SetGridLineWeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2288, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType, Lineweight)

	def SetGridLinetype(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, idLinetype=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2290, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nGridLineType, idLinetype)

	def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
			, rowTypes, bValue)

	def SetGridVisibility2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, bVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2294, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nRow
			, nCol, nGridLineType, bVisible)

	def SetMargin(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nMargins=defaultNamedNotOptArg, fMargin=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2326, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
			, nCol, nMargins, fMargin)

	def SetOverride(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, nProp=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2339, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, nContent, nProp)

	def SetRotation(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2275, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
			, nCol, nContent, Value)

	def SetRowHeight(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (5, 1)),row
			, Height)

	def SetScale(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, scale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2279, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
			, nCol, nContent, scale)

	def SetSubSelection(self, rowMin=defaultNamedNotOptArg, rowMax=defaultNamedNotOptArg, colMin=defaultNamedNotOptArg, colMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(109, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),rowMin
			, rowMax, colMin, colMax)

	def SetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(70, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
			, col, pStr)

	def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
			, TextHeight)

	def SetTextHeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2273, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
			, nCol, nContent, Height)

	def SetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextRotation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(76, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
			, col, TextRotation)

	def SetTextString(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2231, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
			, nCol, nContent, Text)

	def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
			, bstrName)

	def SetTextStyle2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, bstrStyleName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2265, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
			, nCol, nContent, bstrStyleName)

	def SetToolTip(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, tip=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(65530, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),nRow
			, nCol, tip)

	def SetValue(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, acValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2224, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),nRow
			, nCol, nContent, acValue)

	def SetValueFromText(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, szText=defaultNamedNotOptArg
			, nOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2225, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1), (3, 1)),nRow
			, nCol, nContent, szText, nOption)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def UnmergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(100, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
			, maxRow, minCol, maxCol)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AllowManualHeights": (65525, 2, (11, 0), (), "AllowManualHeights", None),
		"AllowManualPositions": (65524, 2, (11, 0), (), "AllowManualPositions", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BreakSpacing": (65527, 2, (5, 0), (), "BreakSpacing", None),
		"BreaksEnabled": (65520, 2, (11, 0), (), "BreaksEnabled", None),
		"Columns": (3, 2, (3, 0), (), "Columns", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (30, 2, (12, 0), (), "Direction", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HasSubSelection": (111, 2, (11, 0), (), "HasSubSelection", None),
		"HeaderSuppressed": (32, 2, (11, 0), (), "HeaderSuppressed", None),
		"Height": (6, 2, (5, 0), (), "Height", None),
		"HorzCellMargin": (8, 2, (5, 0), (), "HorzCellMargin", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (9, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"MinimumTableHeight": (29, 2, (5, 0), (), "MinimumTableHeight", None),
		"MinimumTableWidth": (28, 2, (5, 0), (), "MinimumTableWidth", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"RegenerateTableSuppressed": (116, 2, (11, 0), (), "RegenerateTableSuppressed", None),
		"RepeatBottomLabels": (65522, 2, (11, 0), (), "RepeatBottomLabels", None),
		"RepeatTopLabels": (65521, 2, (11, 0), (), "RepeatTopLabels", None),
		"Rows": (2, 2, (3, 0), (), "Rows", None),
		"StyleName": (1, 2, (8, 0), (), "StyleName", None),
		"TableBreakFlowDirection": (65523, 2, (3, 0), (), "TableBreakFlowDirection", None),
		"TableBreakHeight": (65526, 2, (5, 0), (), "TableBreakHeight", None),
		"TableStyleOverrides": (51, 2, (12, 0), (), "TableStyleOverrides", None),
		"TitleSuppressed": (31, 2, (11, 0), (), "TitleSuppressed", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"VertCellMargin": (7, 2, (5, 0), (), "VertCellMargin", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AllowManualHeights": ((65525, LCID, 4, 0),()),
		"AllowManualPositions": ((65524, LCID, 4, 0),()),
		"BreakSpacing": ((65527, LCID, 4, 0),()),
		"BreaksEnabled": ((65520, LCID, 4, 0),()),
		"ColumnWidth": ((12, LCID, 4, 0),()),
		"Columns": ((3, LCID, 4, 0),()),
		"Direction": ((30, LCID, 4, 0),()),
		"EnableBreak": ((2308, LCID, 4, 0),()),
		"FlowDirection": ((4, LCID, 4, 0),()),
		"HeaderSuppressed": ((32, LCID, 4, 0),()),
		"Height": ((6, LCID, 4, 0),()),
		"HorzCellMargin": ((8, LCID, 4, 0),()),
		"InsertionPoint": ((9, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"RegenerateTableSuppressed": ((116, LCID, 4, 0),()),
		"RepeatBottomLabels": ((65522, LCID, 4, 0),()),
		"RepeatTopLabels": ((65521, LCID, 4, 0),()),
		"RowHeight": ((15, LCID, 4, 0),()),
		"Rows": ((2, LCID, 4, 0),()),
		"StyleName": ((1, LCID, 4, 0),()),
		"TableBreakFlowDirection": ((65523, LCID, 4, 0),()),
		"TableBreakHeight": ((65526, LCID, 4, 0),()),
		"TitleSuppressed": ((31, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"VertCellMargin": ((7, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadTableStyle(DispatchBaseClass):
	CLSID = IID('{C1EF838D-1F50-4313-9A42-B290F14470AB}')
	coclass_clsid = IID('{72EFC580-D085-4B81-8C55-26A79E445338}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetAlignment(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (3, 0), ((3, 1),),rowType
			)

	# Result is of type IAcadAcCmColor
	def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(17, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBackgroundColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),rowType
			)

	# Result is of type IAcadAcCmColor
	def GetColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(27, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
			, pDataType, pUnitType)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFormat(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(29, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	# Result is of type IAcadAcCmColor
	def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(23, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)
		if ret is not None:
			ret = Dispatch(ret, 'GetGridColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetTextHeight(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((3, 1),),rowType
			)

	def GetTextStyle(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(9, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
			, cellAlignment)

	def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (16395, 1)),rowTypes
			, bValue)

	def SetColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetDataType(self, rowTypes=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nUnitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
			, nDataType, nUnitType)

	def SetFormat(self, rowTypes=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
			, val)

	def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
			, rowTypes, pColor)

	def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
			, rowTypes, Lineweight)

	def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
			, rowTypes, bValue)

	def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
			, TextHeight)

	def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
			, bstrName)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Description": (2, 2, (8, 0), (), "Description", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HeaderSuppressed": (8, 2, (11, 0), (), "HeaderSuppressed", None),
		"HorzCellMargin": (5, 2, (5, 0), (), "HorzCellMargin", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"TitleSuppressed": (7, 2, (11, 0), (), "TitleSuppressed", None),
		"VertCellMargin": (6, 2, (5, 0), (), "VertCellMargin", None),
	}
	_prop_map_put_ = {
		"BitFlags": ((3, LCID, 4, 0),()),
		"Description": ((2, LCID, 4, 0),()),
		"FlowDirection": ((4, LCID, 4, 0),()),
		"HeaderSuppressed": ((8, LCID, 4, 0),()),
		"HorzCellMargin": ((5, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"TitleSuppressed": ((7, LCID, 4, 0),()),
		"VertCellMargin": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadTableStyle2(DispatchBaseClass):
	CLSID = IID('{AD9CE10C-535C-48A6-86F0-DB9B105BD292}')
	coclass_clsid = IID('{72EFC580-D085-4B81-8C55-26A79E445338}')

	def CreateCellStyle(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),bstrCellStyle
			)

	def CreateCellStyleFromStyle(self, bstrCellStyle=defaultNamedNotOptArg, bstrSourceCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((8, 1), (8, 1)),bstrCellStyle
			, bstrSourceCellStyle)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def DeleteCellStyle(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((8, 1),),bstrCellStyle
			)

	def EnableMergeAll(self, bstrCellStyle=defaultNamedNotOptArg, bEnable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610874907, LCID, 1, (24, 0), ((8, 1), (11, 1)),bstrCellStyle
			, bEnable)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetAlignment(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (3, 0), ((3, 1),),rowType
			)

	def GetAlignment2(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(43, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
			)

	# Result is of type IAcadAcCmColor
	def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(17, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBackgroundColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	# Result is of type IAcadAcCmColor
	def GetBackgroundColor2(self, bstrCellStyle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), ((8, 1),),bstrCellStyle
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBackgroundColor2', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),rowType
			)

	def GetCellClass(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610874902, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
			)

	def GetCellStyles(self, cellStylesArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((16396, 1),),cellStylesArray
			)

	# Result is of type IAcadAcCmColor
	def GetColor(self, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((3, 1),),rowType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	# Result is of type IAcadAcCmColor
	def GetColor2(self, bstrCellStyle=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(45, LCID, 1, (9, 0), ((8, 1),),bstrCellStyle
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetColor2', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(27, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
			, pDataType, pUnitType)

	def GetDataType2(self, bstrCellStyle=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
		return self._ApplyTypes_(51, 1, (24, 0), ((8, 1), (16387, 2), (16387, 2)), 'GetDataType2', None,bstrCellStyle
			, pDataType, pUnitType)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFormat(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(29, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	def GetFormat2(self, bstrCellStyle=defaultNamedNotOptArg, pbstrFormat=pythoncom.Missing):
		return self._ApplyTypes_(53, 1, (24, 0), ((8, 1), (16392, 2)), 'GetFormat2', None,bstrCellStyle
			, pbstrFormat)

	# Result is of type IAcadAcCmColor
	def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(23, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)
		if ret is not None:
			ret = Dispatch(ret, 'GetGridColor', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	# Result is of type IAcadAcCmColor
	def GetGridColor2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(57, LCID, 1, (9, 0), ((8, 1), (3, 1)),bstrCellStyle
			, gridLineType)
		if ret is not None:
			ret = Dispatch(ret, 'GetGridColor2', '{7382F647-BC48-456E-B877-D18F58BE6878}')
		return ret

	def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetGridLineWeight2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(55, LCID, 1, (3, 0), ((8, 1), (3, 1)),bstrCellStyle
			, gridLineType)

	def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
			, rowType)

	def GetGridVisibility2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(59, LCID, 1, (11, 0), ((8, 1), (3, 1)),bstrCellStyle
			, gridLineType)

	def GetIsCellStyleInUse(self, pszCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(36, LCID, 1, (11, 0), ((8, 1),),pszCellStyle
			)

	def GetIsMergeAllEnabled(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610874906, LCID, 1, (11, 0), ((8, 1),),bstrCellStyle
			)

	def GetRotation(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610874904, LCID, 1, (5, 0), ((8, 1),),bstrCellStyle
			)

	def GetTextHeight(self, rowType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((3, 1),),rowType
			)

	def GetTextHeight2(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(41, LCID, 1, (5, 0), ((8, 1),),bstrCellStyle
			)

	def GetTextStyle(self, rowType=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(9, LCID, 1, (8, 0), ((3, 1),),rowType
			)

	def GetTextStyleId(self, bstrCellStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(39, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
			)

	def GetUniqueCellStyleName(self, pszBaseName=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(35, LCID, 1, (8, 0), ((8, 1),),pszBaseName
			)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def RenameCellStyle(self, bstrOldName=defaultNamedNotOptArg, bstrNewName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((8, 1), (8, 1)),bstrOldName
			, bstrNewName)

	def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
			, cellAlignment)

	def SetAlignment2(self, bstrCellStyle=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
			, cellAlignment)

	def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetBackgroundColor2(self, bstrCellStyle=defaultNamedNotOptArg, color=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((8, 1), (9, 1)),bstrCellStyle
			, color)

	def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (16395, 1)),rowTypes
			, bValue)

	def SetCellClass(self, bstrCellStyle=defaultNamedNotOptArg, cellClass=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610874903, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
			, cellClass)

	def SetColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
			, pColor)

	def SetColor2(self, bstrCellStyle=defaultNamedNotOptArg, color=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((8, 1), (9, 1)),bstrCellStyle
			, color)

	def SetDataType(self, rowTypes=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nUnitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
			, nDataType, nUnitType)

	def SetDataType2(self, bstrCellStyle=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nUnitType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1)),bstrCellStyle
			, nDataType, nUnitType)

	def SetFormat(self, rowTypes=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
			, val)

	def SetFormat2(self, bstrCellStyle=defaultNamedNotOptArg, bstrFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((8, 1), (8, 1)),bstrCellStyle
			, bstrFormat)

	def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
			, rowTypes, pColor)

	def SetGridColor2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(58, LCID, 1, (24, 0), ((8, 1), (3, 1), (9, 1)),bstrCellStyle
			, gridLineTypes, pColor)

	def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
			, rowTypes, Lineweight)

	def SetGridLineWeight2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(56, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1)),bstrCellStyle
			, gridLineTypes, Lineweight)

	def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
			, rowTypes, bValue)

	def SetGridVisibility2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(60, LCID, 1, (24, 0), ((8, 1), (3, 1), (11, 1)),bstrCellStyle
			, gridLineTypes, bValue)

	def SetRotation(self, bstrCellStyle=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610874905, LCID, 1, (24, 0), ((8, 1), (5, 1)),bstrCellStyle
			, Rotation)

	def SetTemplateId(self, val=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (3, 0)),val
			, option)

	def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
			, TextHeight)

	def SetTextHeight2(self, bstrCellStyle=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((8, 1), (5, 1)),bstrCellStyle
			, Height)

	def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
			, bstrName)

	def SetTextStyleId(self, bstrCellStyle=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
			, val)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Description": (2, 2, (8, 0), (), "Description", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HeaderSuppressed": (8, 2, (11, 0), (), "HeaderSuppressed", None),
		"HorzCellMargin": (5, 2, (5, 0), (), "HorzCellMargin", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumCellStyles": (37, 2, (3, 0), (), "NumCellStyles", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"TemplateId": (61, 2, (3, 0), (), "TemplateId", None),
		"TitleSuppressed": (7, 2, (11, 0), (), "TitleSuppressed", None),
		"VertCellMargin": (6, 2, (5, 0), (), "VertCellMargin", None),
	}
	_prop_map_put_ = {
		"BitFlags": ((3, LCID, 4, 0),()),
		"Description": ((2, LCID, 4, 0),()),
		"FlowDirection": ((4, LCID, 4, 0),()),
		"HeaderSuppressed": ((8, LCID, 4, 0),()),
		"HorzCellMargin": ((5, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"TemplateId": ((61, LCID, 4, 0),()),
		"TitleSuppressed": ((7, LCID, 4, 0),()),
		"VertCellMargin": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadText(DispatchBaseClass):
	CLSID = IID('{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')
	coclass_clsid = IID('{E4222C78-3670-4BB1-9AD4-7D8F3E581F2D}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def FieldCode(self):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(17, LCID, 1, (8, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Alignment": (3, 2, (3, 0), (), "Alignment", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Backward": (16, 2, (11, 0), (), "Backward", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (6, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (4, 2, (3, 0), (), "HorizontalAlignment", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (11, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (12, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (9, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Rotation": (7, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (8, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (2, 2, (8, 0), (), "StyleName", None),
		"TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
		"TextGenerationFlag": (13, 2, (3, 0), (), "TextGenerationFlag", None),
		"TextString": (1, 2, (8, 0), (), "TextString", None),
		"Thickness": (14, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UpsideDown": (15, 2, (11, 0), (), "UpsideDown", None),
		"VerticalAlignment": (5, 2, (3, 0), (), "VerticalAlignment", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Alignment": ((3, LCID, 4, 0),()),
		"Backward": ((16, LCID, 4, 0),()),
		"Height": ((6, LCID, 4, 0),()),
		"HorizontalAlignment": ((4, LCID, 4, 0),()),
		"InsertionPoint": ((11, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((12, LCID, 4, 0),()),
		"ObliqueAngle": ((9, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Rotation": ((7, LCID, 4, 0),()),
		"ScaleFactor": ((8, LCID, 4, 0),()),
		"StyleName": ((2, LCID, 4, 0),()),
		"TextAlignmentPoint": ((10, LCID, 4, 0),()),
		"TextGenerationFlag": ((13, LCID, 4, 0),()),
		"TextString": ((1, LCID, 4, 0),()),
		"Thickness": ((14, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UpsideDown": ((15, LCID, 4, 0),()),
		"VerticalAlignment": ((5, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadTextStyle(DispatchBaseClass):
	CLSID = IID('{BDF006CF-A063-40B0-912C-AF478B1CE15B}')
	coclass_clsid = IID('{F868EAEC-1B73-4F5E-BA73-90EBA94E75BE}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetFont(self, TypeFace=pythoncom.Missing, Bold=pythoncom.Missing, Italic=pythoncom.Missing, Charset=pythoncom.Missing
			, PitchAndFamily=pythoncom.Missing):
		return self._ApplyTypes_(9, 1, (24, 0), ((16392, 2), (16395, 2), (16395, 2), (16387, 2), (16387, 2)), 'GetFont', None,TypeFace
			, Bold, Italic, Charset, PitchAndFamily)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetFont(self, TypeFace=defaultNamedNotOptArg, Bold=defaultNamedNotOptArg, Italic=defaultNamedNotOptArg, Charset=defaultNamedNotOptArg
			, PitchAndFamily=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (11, 1), (11, 1), (3, 1), (3, 1)),TypeFace
			, Bold, Italic, Charset, PitchAndFamily)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BigFontFile": (1, 2, (8, 0), (), "BigFontFile", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (3, 2, (5, 0), (), "Height", None),
		"LastHeight": (4, 2, (5, 0), (), "LastHeight", None),
		"Name": (5, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"ObliqueAngle": (6, 2, (5, 0), (), "ObliqueAngle", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"TextGenerationFlag": (7, 2, (3, 0), (), "TextGenerationFlag", None),
		"Width": (8, 2, (5, 0), (), "Width", None),
		"fontFile": (2, 2, (8, 0), (), "fontFile", None),
	}
	_prop_map_put_ = {
		"BigFontFile": ((1, LCID, 4, 0),()),
		"Height": ((3, LCID, 4, 0),()),
		"LastHeight": ((4, LCID, 4, 0),()),
		"ObliqueAngle": ((6, LCID, 4, 0),()),
		"TextGenerationFlag": ((7, LCID, 4, 0),()),
		"Width": ((8, LCID, 4, 0),()),
		"fontFile": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadTextStyles(DispatchBaseClass):
	CLSID = IID('{617040CF-4E9D-4CC3-9814-AD69E0AB9751}')
	coclass_clsid = IID('{BF224DC3-B602-4EEE-BFE9-9E4E0AED6837}')

	# Result is of type IAcadTextStyle
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BDF006CF-A063-40B0-912C-AF478B1CE15B}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadTextStyle
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BDF006CF-A063-40B0-912C-AF478B1CE15B}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BDF006CF-A063-40B0-912C-AF478B1CE15B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BDF006CF-A063-40B0-912C-AF478B1CE15B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadTolerance(DispatchBaseClass):
	CLSID = IID('{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')
	coclass_clsid = IID('{F40E2FF0-4D77-40B2-9A44-A3AEECCE8EFF}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
		"DirectionVector": (80, 2, (12, 0), (), "DirectionVector", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"InsertionPoint": (81, 2, (12, 0), (), "InsertionPoint", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (82, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
		"StyleName": (1542, 2, (8, 0), (), "StyleName", None),
		"TextColor": (1546, 2, (3, 0), (), "TextColor", None),
		"TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
		"TextString": (1541, 2, (8, 0), (), "TextString", None),
		"TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"DimensionLineColor": ((13, LCID, 4, 0),()),
		"DirectionVector": ((80, LCID, 4, 0),()),
		"InsertionPoint": ((81, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((82, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"ScaleFactor": ((1553, LCID, 4, 0),()),
		"StyleName": ((1542, LCID, 4, 0),()),
		"TextColor": ((1546, LCID, 4, 0),()),
		"TextHeight": ((1563, LCID, 4, 0),()),
		"TextString": ((1541, LCID, 4, 0),()),
		"TextStyle": ((1562, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadToolbar(DispatchBaseClass):
	CLSID = IID('{0C961978-3209-499F-809C-CABA49EBCA97}')
	coclass_clsid = IID('{B002FDCB-B013-4654-ACE9-8256ABB240F9}')

	# Result is of type IAcadToolbarItem
	def AddSeparator(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1610743830, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddSeparator', '{B0E04681-40F0-4BCB-A78F-03660DE0651A}')
		return ret

	# Result is of type IAcadToolbarItem
	def AddToolbarButton(self, Index=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, HelpString=defaultNamedNotOptArg, Macro=defaultNamedNotOptArg
			, FlyoutButton=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1610743829, LCID, 1, (9, 0), ((12, 1), (8, 1), (8, 1), (8, 1), (12, 17)),Index
			, Name, HelpString, Macro, FlyoutButton)
		if ret is not None:
			ret = Dispatch(ret, 'AddToolbarButton', '{B0E04681-40F0-4BCB-A78F-03660DE0651A}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1610743833, LCID, 1, (24, 0), (),)

	def Dock(self, Side=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743831, LCID, 1, (24, 0), ((3, 1),),Side
			)

	def Float(self, top=defaultNamedNotOptArg, left=defaultNamedNotOptArg, NumberFloatRows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743832, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),top
			, left, NumberFloatRows)

	# Result is of type IAcadToolbarItem
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{B0E04681-40F0-4BCB-A78F-03660DE0651A}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
		"DockStatus": (1610743817, 2, (3, 0), (), "DockStatus", None),
		"FloatingRows": (1610743825, 2, (3, 0), (), "FloatingRows", None),
		"Height": (1610743824, 2, (3, 0), (), "Height", None),
		"HelpString": (1610743827, 2, (8, 0), (), "HelpString", None),
		"LargeButtons": (1610743818, 2, (11, 0), (), "LargeButtons", None),
		"Name": (1610743813, 2, (8, 0), (), "Name", None),
		"Parent": (1610743812, 2, (9, 0), (), "Parent", None),
		"TagString": (1610743834, 2, (8, 0), (), "TagString", None),
		"Visible": (1610743815, 2, (11, 0), (), "Visible", None),
		"Width": (1610743823, 2, (3, 0), (), "Width", None),
		"left": (1610743819, 2, (3, 0), (), "left", None),
		"top": (1610743821, 2, (3, 0), (), "top", None),
	}
	_prop_map_put_ = {
		"FloatingRows": ((1610743825, LCID, 4, 0),()),
		"HelpString": ((1610743827, LCID, 4, 0),()),
		"Name": ((1610743813, LCID, 4, 0),()),
		"Visible": ((1610743815, LCID, 4, 0),()),
		"left": ((1610743819, LCID, 4, 0),()),
		"top": ((1610743821, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{B0E04681-40F0-4BCB-A78F-03660DE0651A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{B0E04681-40F0-4BCB-A78F-03660DE0651A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadToolbarItem(DispatchBaseClass):
	CLSID = IID('{B0E04681-40F0-4BCB-A78F-03660DE0651A}')
	coclass_clsid = IID('{1AAB334A-492D-4502-9F59-247C4966E705}')

	def AttachToolbarToFlyout(self, MenuGroupName=defaultNamedNotOptArg, ToolbarName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743823, LCID, 1, (24, 0), ((8, 1), (8, 1)),MenuGroupName
			, ToolbarName)

	def Delete(self):
		return self._oleobj_.InvokeTypes(1610743824, LCID, 1, (24, 0), (),)

	def GetBitmaps(self, SmallIconName=pythoncom.Missing, LargeIconName=pythoncom.Missing):
		return self._ApplyTypes_(1610743821, 1, (24, 0), ((16392, 2), (16392, 2)), 'GetBitmaps', None,SmallIconName
			, LargeIconName)

	def SetBitmaps(self, SmallIconName=defaultNamedNotOptArg, LargeIconName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (24, 0), ((8, 1), (8, 1)),SmallIconName
			, LargeIconName)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743808, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		# Method 'Flyout' returns object of type 'IAcadToolbar'
		"Flyout": (1610743815, 2, (9, 0), (), "Flyout", '{0C961978-3209-499F-809C-CABA49EBCA97}'),
		"HelpString": (1610743819, 2, (8, 0), (), "HelpString", None),
		"Index": (1610743818, 2, (3, 0), (), "Index", None),
		"Macro": (1610743816, 2, (8, 0), (), "Macro", None),
		"Name": (1610743810, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IAcadToolbar'
		"Parent": (1610743809, 2, (9, 0), (), "Parent", '{0C961978-3209-499F-809C-CABA49EBCA97}'),
		"TagString": (1610743812, 2, (8, 0), (), "TagString", None),
		"Type": (1610743814, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"HelpString": ((1610743819, LCID, 4, 0),()),
		"Macro": ((1610743816, LCID, 4, 0),()),
		"Name": ((1610743810, LCID, 4, 0),()),
		"TagString": ((1610743812, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadToolbars(DispatchBaseClass):
	CLSID = IID('{1081A53F-2A08-4767-A131-08831AE62035}')
	coclass_clsid = IID('{6DA5711F-DFD4-4D81-8D23-F7AEA68A920C}')

	# Result is of type IAcadToolbar
	def Add(self, ToolbarName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1610743815, LCID, 1, (9, 0), ((8, 1),),ToolbarName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0C961978-3209-499F-809C-CABA49EBCA97}')
		return ret

	# Result is of type IAcadToolbar
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0C961978-3209-499F-809C-CABA49EBCA97}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IAcadApplication'
		"Application": (1610743811, 2, (9, 0), (), "Application", '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}'),
		"Count": (1610743810, 2, (3, 0), (), "Count", None),
		"LargeButtons": (1610743813, 2, (11, 0), (), "LargeButtons", None),
		# Method 'Parent' returns object of type 'IAcadMenuGroup'
		"Parent": (1610743812, 2, (9, 0), (), "Parent", '{D6261081-12FD-49ED-A359-D990DF71949D}'),
	}
	_prop_map_put_ = {
		"LargeButtons": ((1610743813, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0C961978-3209-499F-809C-CABA49EBCA97}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0C961978-3209-499F-809C-CABA49EBCA97}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadTrace(DispatchBaseClass):
	CLSID = IID('{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')
	coclass_clsid = IID('{071339A1-1946-44B2-B63E-50459B15DB86}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	# The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Normal": (2, 2, (12, 0), (), "Normal", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Thickness": (3, 2, (5, 0), (), "Thickness", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"Coordinates": ((1, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Normal": ((2, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Thickness": ((3, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadUCS(DispatchBaseClass):
	CLSID = IID('{78C244EF-F4CC-43C7-AA5D-91A496215310}')
	coclass_clsid = IID('{849AFB5B-D6C9-4924-A712-F7118FF9611F}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetUCSMatrix(self):
		return self._ApplyTypes_(5, 1, (12, 0), (), 'GetUCSMatrix', None,)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"Origin": (2, 2, (12, 0), (), "Origin", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"XVector": (3, 2, (12, 0), (), "XVector", None),
		"YVector": (4, 2, (12, 0), (), "YVector", None),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
		"Origin": ((2, LCID, 4, 0),()),
		"XVector": ((3, LCID, 4, 0),()),
		"YVector": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadUCSs(DispatchBaseClass):
	CLSID = IID('{BF4812B8-408D-4E07-B595-ACB8336B6A93}')
	coclass_clsid = IID('{1EA072EE-57FD-495E-889C-8243C3BDBDBC}')

	# Result is of type IAcadUCS
	def Add(self, Origin=defaultNamedNotOptArg, XAxisPoint=defaultNamedNotOptArg, YAxisPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (8, 1)),Origin
			, XAxisPoint, YAxisPoint, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{78C244EF-F4CC-43C7-AA5D-91A496215310}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadUCS
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{78C244EF-F4CC-43C7-AA5D-91A496215310}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{78C244EF-F4CC-43C7-AA5D-91A496215310}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{78C244EF-F4CC-43C7-AA5D-91A496215310}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadUnderlay(DispatchBaseClass):
	CLSID = IID('{1140D7A3-E582-4599-B98D-2387DAF35A71}')
	coclass_clsid = IID('{11EC23A0-50D1-4129-8D37-8D1148B800DE}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ClipBoundary(self, boundry=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),boundry
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AdjustForBackground": (15, 2, (11, 0), (), "AdjustForBackground", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ClippingEnabled": (16, 2, (11, 0), (), "ClippingEnabled", None),
		"Contrast": (1, 2, (3, 0), (), "Contrast", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Fade": (2, 2, (3, 0), (), "Fade", None),
		"File": (13, 2, (8, 0), (), "File", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (6, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"ItemName": (8, 2, (8, 0), (), "ItemName", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Monochrome": (10, 2, (11, 0), (), "Monochrome", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Position": (3, 2, (12, 0), (), "Position", None),
		"Rotation": (4, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (12, 2, (5, 0), (), "ScaleFactor", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnderlayName": (7, 2, (8, 0), (), "UnderlayName", None),
		"UnderlayVisibility": (14, 2, (11, 0), (), "UnderlayVisibility", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AdjustForBackground": ((15, LCID, 4, 0),()),
		"ClippingEnabled": ((16, LCID, 4, 0),()),
		"Contrast": ((1, LCID, 4, 0),()),
		"Fade": ((2, LCID, 4, 0),()),
		"File": ((13, LCID, 4, 0),()),
		"Height": ((6, LCID, 4, 0),()),
		"ItemName": ((8, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Monochrome": ((10, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Position": ((3, LCID, 4, 0),()),
		"Rotation": ((4, LCID, 4, 0),()),
		"ScaleFactor": ((12, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnderlayName": ((7, LCID, 4, 0),()),
		"UnderlayVisibility": ((14, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadUnderlay2(DispatchBaseClass):
	CLSID = IID('{46CAAFD6-D918-45D5-AE5B-EB1334198980}')
	coclass_clsid = IID('{0D0CFF77-1350-4902-9AE0-8C9A3C22EE34}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def ClipBoundary(self, boundry=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),boundry
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AdjustForBackground": (15, 2, (11, 0), (), "AdjustForBackground", None),
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ClippingEnabled": (16, 2, (11, 0), (), "ClippingEnabled", None),
		"Contrast": (1, 2, (3, 0), (), "Contrast", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Fade": (2, 2, (3, 0), (), "Fade", None),
		"File": (13, 2, (8, 0), (), "File", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (6, 2, (5, 0), (), "Height", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"ItemName": (8, 2, (8, 0), (), "ItemName", None),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"Monochrome": (10, 2, (11, 0), (), "Monochrome", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"Position": (3, 2, (12, 0), (), "Position", None),
		"Rotation": (4, 2, (5, 0), (), "Rotation", None),
		"ScaleFactor": (12, 2, (5, 0), (), "ScaleFactor", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"UnderlayLayerOverrideApplied": (17, 2, (3, 0), (), "UnderlayLayerOverrideApplied", None),
		"UnderlayName": (7, 2, (8, 0), (), "UnderlayName", None),
		"UnderlayVisibility": (14, 2, (11, 0), (), "UnderlayVisibility", None),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"AdjustForBackground": ((15, LCID, 4, 0),()),
		"ClippingEnabled": ((16, LCID, 4, 0),()),
		"Contrast": ((1, LCID, 4, 0),()),
		"Fade": ((2, LCID, 4, 0),()),
		"File": ((13, LCID, 4, 0),()),
		"Height": ((6, LCID, 4, 0),()),
		"ItemName": ((8, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"Monochrome": ((10, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"Position": ((3, LCID, 4, 0),()),
		"Rotation": ((4, LCID, 4, 0),()),
		"ScaleFactor": ((12, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"UnderlayLayerOverrideApplied": ((17, LCID, 4, 0),()),
		"UnderlayName": ((7, LCID, 4, 0),()),
		"UnderlayVisibility": ((14, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadUtility(DispatchBaseClass):
	CLSID = IID('{22C8E547-0D27-4793-BB9F-AC58D4F8E794}')
	coclass_clsid = IID('{30A1B04F-D62D-4925-96AC-9CB7478B910F}')

	def AngleFromXAxis(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743820, LCID, 1, (5, 0), ((12, 1), (12, 1)),StartPoint
			, EndPoint)

	def AngleToReal(self, Angle=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743808, LCID, 1, (5, 0), ((8, 1), (3, 1)),Angle
			, Unit)

	def AngleToString(self, Angle=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg, precision=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1610743809, LCID, 1, (8, 0), ((5, 1), (3, 1), (3, 1)),Angle
			, Unit, precision)

	def CreateTypedArray(self, *args):
		return self._get_good_object_(self._oleobj_.Invoke(*((1610743826,0,1,1)+args)),'CreateTypedArray')

	def DistanceToReal(self, Distance=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743810, LCID, 1, (5, 0), ((8, 1), (3, 1)),Distance
			, Unit)

	def GetAngle(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743819, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
			, Prompt)

	def GetCorner(self, Point=defaultNamedNotOptArg, Prompt=defaultNamedOptArg):
		return self._ApplyTypes_(1610743821, 1, (12, 0), ((12, 1), (12, 17)), 'GetCorner', None,Point
			, Prompt)

	def GetDistance(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
			, Prompt)

	def GetEntity(self, Object=pythoncom.Missing, PickedPoint=pythoncom.Missing, Prompt=defaultNamedOptArg):
		return self._ApplyTypes_(1610743827, 1, (24, 0), ((16393, 2), (16396, 2), (12, 17)), 'GetEntity', None,Object
			, PickedPoint, Prompt)

	def GetInput(self):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (8, 0), (),)

	def GetInteger(self, Prompt=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (3, 0), ((12, 17),),Prompt
			)

	def GetKeyword(self, Prompt=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (8, 0), ((12, 17),),Prompt
			)

	def GetOrientation(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743823, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
			, Prompt)

	def GetPoint(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
		return self._ApplyTypes_(1610743824, 1, (12, 0), ((12, 17), (12, 17)), 'GetPoint', None,Point
			, Prompt)

	def GetReal(self, Prompt=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (5, 0), ((12, 17),),Prompt
			)

	def GetRemoteFile(self, URL=defaultNamedNotOptArg, LocalFile=pythoncom.Missing, IgnoreCache=defaultNamedNotOptArg):
		return self._ApplyTypes_(1610743831, 1, (24, 0), ((8, 1), (16392, 2), (11, 1)), 'GetRemoteFile', None,URL
			, LocalFile, IgnoreCache)

	def GetString(self, HasSpaces=defaultNamedNotOptArg, Prompt=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1610743818, LCID, 1, (8, 0), ((3, 1), (12, 17)),HasSpaces
			, Prompt)

	def GetSubEntity(self, Object=pythoncom.Missing, PickedPoint=pythoncom.Missing, transMatrix=pythoncom.Missing, ContextData=pythoncom.Missing
			, Prompt=defaultNamedOptArg):
		return self._ApplyTypes_(1610743829, 1, (24, 0), ((16393, 2), (16396, 2), (16396, 2), (16396, 2), (12, 17)), 'GetSubEntity', None,Object
			, PickedPoint, transMatrix, ContextData, Prompt)

	def InitializeUserInput(self, Bits=defaultNamedNotOptArg, KeyWordList=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((3, 1), (12, 17)),Bits
			, KeyWordList)

	def IsRemoteFile(self, LocalFile=defaultNamedNotOptArg, URL=pythoncom.Missing):
		return self._ApplyTypes_(1610743833, 1, (11, 0), ((8, 1), (16392, 2)), 'IsRemoteFile', None,LocalFile
			, URL)

	def IsURL(self, URL=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743830, LCID, 1, (11, 0), ((8, 1),),URL
			)

	def LaunchBrowserDialog(self, SelectedURL=pythoncom.Missing, DialogTitle=defaultNamedNotOptArg, OpenButtonCaption=defaultNamedNotOptArg, StartPageURL=defaultNamedNotOptArg
			, RegistryRootKey=defaultNamedNotOptArg, OpenButtonAlwaysEnabled=defaultNamedNotOptArg):
		return self._ApplyTypes_(1610743834, 1, (11, 0), ((16392, 2), (8, 1), (8, 1), (8, 1), (8, 1), (11, 1)), 'LaunchBrowserDialog', None,SelectedURL
			, DialogTitle, OpenButtonCaption, StartPageURL, RegistryRootKey, OpenButtonAlwaysEnabled
			)

	def PolarPoint(self, Point=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(1610743825, 1, (12, 0), ((12, 1), (5, 1), (5, 1)), 'PolarPoint', None,Point
			, Angle, Distance)

	def Prompt(self, Message=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743828, LCID, 1, (24, 0), ((8, 1),),Message
			)

	def PutRemoteFile(self, URL=defaultNamedNotOptArg, LocalFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743832, LCID, 1, (24, 0), ((8, 1), (8, 1)),URL
			, LocalFile)

	def RealToString(self, Value=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg, precision=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (8, 0), ((5, 1), (3, 1), (3, 1)),Value
			, Unit, precision)

	def SendModelessOperationEnded(self, Context=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743836, LCID, 1, (24, 0), ((8, 0),),Context
			)

	def SendModelessOperationStart(self, Context=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1610743835, LCID, 1, (24, 0), ((8, 0),),Context
			)

	def TranslateCoordinates(self, Point=defaultNamedNotOptArg, FromCoordSystem=defaultNamedNotOptArg, ToCoordSystem=defaultNamedNotOptArg, Displacement=defaultNamedNotOptArg
			, OCSNormal=defaultNamedOptArg):
		return self._ApplyTypes_(1610743812, 1, (12, 0), ((12, 1), (3, 1), (3, 1), (3, 1), (12, 17)), 'TranslateCoordinates', None,Point
			, FromCoordSystem, ToCoordSystem, Displacement, OCSNormal)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadView(DispatchBaseClass):
	CLSID = IID('{B189A3C4-324E-4130-8516-381635BE10EF}')
	coclass_clsid = IID('{C061C82C-D041-4214-BB07-B608107CEFCB}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"CategoryName": (7, 2, (8, 0), (), "CategoryName", None),
		"Center": (1, 2, (12, 0), (), "Center", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (5, 2, (12, 0), (), "Direction", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"HasVpAssociation": (10, 2, (11, 0), (), "HasVpAssociation", None),
		"Height": (2, 2, (5, 0), (), "Height", None),
		"LayerState": (9, 2, (8, 0), (), "LayerState", None),
		"LayoutId": (8, 2, (3, 0), (), "LayoutId", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"Target": (4, 2, (12, 0), (), "Target", None),
		"Width": (3, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"CategoryName": ((7, LCID, 4, 0),()),
		"Center": ((1, LCID, 4, 0),()),
		"Direction": ((5, LCID, 4, 0),()),
		"HasVpAssociation": ((10, LCID, 4, 0),()),
		"Height": ((2, LCID, 4, 0),()),
		"LayerState": ((9, LCID, 4, 0),()),
		"LayoutId": ((8, LCID, 4, 0),()),
		"Name": ((6, LCID, 4, 0),()),
		"Target": ((4, LCID, 4, 0),()),
		"Width": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadViewport(DispatchBaseClass):
	CLSID = IID('{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')
	coclass_clsid = IID('{1D625598-C876-4C51-8EF5-F9D8F96F62AA}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
		return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
			, YSpacing)

	def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
		return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
			, YSpacing)

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
			, YSpacing)

	def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
			, YSpacing)

	def SetView(self, View=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((9, 1),),View
			)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def Split(self, NumWins=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((3, 1),),NumWins
			)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"ArcSmoothness": (23, 2, (3, 0), (), "ArcSmoothness", None),
		"Center": (1, 2, (12, 0), (), "Center", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Direction": (5, 2, (12, 0), (), "Direction", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"GridOn": (7, 2, (11, 0), (), "GridOn", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Height": (2, 2, (5, 0), (), "Height", None),
		"LowerLeftCorner": (15, 2, (12, 0), (), "LowerLeftCorner", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OrthoOn": (8, 2, (11, 0), (), "OrthoOn", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"SnapBasePoint": (9, 2, (12, 0), (), "SnapBasePoint", None),
		"SnapOn": (10, 2, (11, 0), (), "SnapOn", None),
		"SnapRotationAngle": (11, 2, (5, 0), (), "SnapRotationAngle", None),
		"Target": (4, 2, (12, 0), (), "Target", None),
		"UCSIconAtOrigin": (14, 2, (11, 0), (), "UCSIconAtOrigin", None),
		"UCSIconOn": (13, 2, (11, 0), (), "UCSIconOn", None),
		"UpperRightCorner": (16, 2, (12, 0), (), "UpperRightCorner", None),
		"Width": (3, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"ArcSmoothness": ((23, LCID, 4, 0),()),
		"Center": ((1, LCID, 4, 0),()),
		"Direction": ((5, LCID, 4, 0),()),
		"GridOn": ((7, LCID, 4, 0),()),
		"Height": ((2, LCID, 4, 0),()),
		"Name": ((6, LCID, 4, 0),()),
		"OrthoOn": ((8, LCID, 4, 0),()),
		"SnapBasePoint": ((9, LCID, 4, 0),()),
		"SnapOn": ((10, LCID, 4, 0),()),
		"SnapRotationAngle": ((11, LCID, 4, 0),()),
		"Target": ((4, LCID, 4, 0),()),
		"UCSIconAtOrigin": ((14, LCID, 4, 0),()),
		"UCSIconOn": ((13, LCID, 4, 0),()),
		"Width": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadViewports(DispatchBaseClass):
	CLSID = IID('{98558EDE-E8B4-4870-9D78-15BE6370E1C1}')
	coclass_clsid = IID('{2709544A-5B24-4F9F-A5DA-CEC7297D3A4E}')

	# Result is of type IAcadViewport
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def DeleteConfiguration(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadViewport
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadViews(DispatchBaseClass):
	CLSID = IID('{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}')
	coclass_clsid = IID('{0B38CACA-3D3C-48EA-BEB5-7D95F4F6EE15}')

	# Result is of type IAcadView
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B189A3C4-324E-4130-8516-381635BE10EF}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	# Result is of type IAcadView
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{B189A3C4-324E-4130-8516-381635BE10EF}')
		return ret

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{B189A3C4-324E-4130-8516-381635BE10EF}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{B189A3C4-324E-4130-8516-381635BE10EF}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAcadXRecord(DispatchBaseClass):
	CLSID = IID('{BD45EE03-5243-4466-813C-95E33F562665}')
	coclass_clsid = IID('{F5522F0C-962A-48AC-9992-E81B07628F1F}')

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def GetXRecordData(self, XRecordDataType=pythoncom.Missing, XRecordDataValue=pythoncom.Missing):
		return self._ApplyTypes_(2, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetXRecordData', None,XRecordDataType
			, XRecordDataValue)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def SetXRecordData(self, XRecordDataType=defaultNamedNotOptArg, XRecordDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1), (12, 1)),XRecordDataType
			, XRecordDataValue)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"TranslateIDs": (4, 2, (11, 0), (), "TranslateIDs", None),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
		"TranslateIDs": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAcadXline(DispatchBaseClass):
	CLSID = IID('{96FC51A1-B610-406F-990D-0652F53758A9}')
	coclass_clsid = IID('{2BCA857B-A18B-4AFA-B183-CC0E49C12058}')

	def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
		return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
			, AngleToFill, CenterPoint)

	def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
			, DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
		return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
			, NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
			)

	def Copy(self):
		ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

	def Erase(self):
		return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

	def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
		return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
			, MaxPoint)

	# Result is of type IAcadDictionary
	def GetExtensionDictionary(self):
		ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetExtensionDictionary', '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')
		return ret

	def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
		return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
			, XDataType, XDataValue)

	def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
			)

	def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
		return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
			, option)

	def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
			, Point2)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror', None)
		return ret

	def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
			, Point2, point3)
		if ret is not None:
			ret = Dispatch(ret, 'Mirror3D', None)
		return ret

	def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
			, ToPoint)

	def Offset(self, Distance=defaultNamedNotOptArg):
		return self._ApplyTypes_(4, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
			)

	def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, RotationAngle)

	def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
			, Point2, RotationAngle)

	def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
			, ScaleFactor)

	def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
			, XDataValue)

	def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1030, 2, (9, 0), (), "Application", None),
		"BasePoint": (1, 2, (12, 0), (), "BasePoint", None),
		# Method 'Database' returns object of type 'IAcadDatabase'
		"Database": (1031, 2, (9, 0), (), "Database", '{A9625062-DC43-4D1C-9FC6-8512123BB91B}'),
		"DirectionVector": (3, 2, (12, 0), (), "DirectionVector", None),
		"Document": (1035, 2, (9, 0), (), "Document", None),
		"EntityName": (1397, 2, (8, 0), (), "EntityName", None),
		"EntityType": (1398, 2, (3, 0), (), "EntityType", None),
		"Handle": (1024, 2, (8, 0), (), "Handle", None),
		"HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
		# Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
		"Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}'),
		"Layer": (1281, 2, (8, 0), (), "Layer", None),
		"Linetype": (1282, 2, (8, 0), (), "Linetype", None),
		"LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
		"Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
		"Material": (1399, 2, (8, 0), (), "Material", None),
		"ObjectID": (1029, 2, (3, 0), (), "ObjectID", None),
		"ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
		"OwnerID": (1034, 2, (3, 0), (), "OwnerID", None),
		"PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
		"SecondPoint": (2, 2, (12, 0), (), "SecondPoint", None),
		# Method 'TrueColor' returns object of type 'IAcadAcCmColor'
		"TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{7382F647-BC48-456E-B877-D18F58BE6878}'),
		"Visible": (1284, 2, (11, 0), (), "Visible", None),
		"color": (1280, 2, (3, 0), (), "color", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((1, LCID, 4, 0),()),
		"DirectionVector": ((3, LCID, 4, 0),()),
		"Layer": ((1281, LCID, 4, 0),()),
		"Linetype": ((1282, LCID, 4, 0),()),
		"LinetypeScale": ((1283, LCID, 4, 0),()),
		"Lineweight": ((1300, LCID, 4, 0),()),
		"Material": ((1399, LCID, 4, 0),()),
		"PlotStyleName": ((1299, LCID, 4, 0),()),
		"SecondPoint": ((2, LCID, 4, 0),()),
		"TrueColor": ((1302, LCID, 4, 0),()),
		"Visible": ((1284, LCID, 4, 0),()),
		"color": ((1280, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _DAcadApplicationEvents:
	CLSID = CLSID_Sink = IID('{E8D59748-B414-4BE6-AF82-870C62C0CF4C}')
	coclass_clsid = IID('{6AB55F46-2523-4701-A912-B226F46252BA}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnSysVarChanged",
		        2 : "OnNewDrawing",
		        3 : "OnAppActivate",
		        4 : "OnAppDeactivate",
		        5 : "OnWindowMovedOrResized",
		        6 : "OnBeginModal",
		        7 : "OnEndModal",
		        8 : "OnBeginQuit",
		       10 : "OnBeginFileDrop",
		       11 : "OnARXLoaded",
		       12 : "OnARXUnloaded",
		       13 : "OnBeginPlot",
		       14 : "OnEndPlot",
		       19 : "OnBeginSave",
		       20 : "OnEndSave",
		       21 : "OnBeginOpen",
		       22 : "OnEndOpen",
		       17 : "OnBeginCommand",
		       18 : "OnEndCommand",
		       15 : "OnBeginLisp",
		       16 : "OnEndLisp",
		       24 : "OnLispCancelled",
		       25 : "OnWindowChanged",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnSysVarChanged(self, SysvarName=defaultNamedNotOptArg, newVal=defaultNamedNotOptArg):
#	def OnNewDrawing(self):
#	def OnAppActivate(self):
#	def OnAppDeactivate(self):
#	def OnWindowMovedOrResized(self, HWNDFrame=defaultNamedNotOptArg, bMoved=defaultNamedNotOptArg):
#	def OnBeginModal(self):
#	def OnEndModal(self):
#	def OnBeginQuit(self, Cancel=defaultNamedNotOptArg):
#	def OnBeginFileDrop(self, FileName=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnARXLoaded(self, AppName=defaultNamedNotOptArg):
#	def OnARXUnloaded(self, AppName=defaultNamedNotOptArg):
#	def OnBeginPlot(self, DrawingName=defaultNamedNotOptArg):
#	def OnEndPlot(self, DrawingName=defaultNamedNotOptArg):
#	def OnBeginSave(self, FileName=defaultNamedNotOptArg):
#	def OnEndSave(self, FileName=defaultNamedNotOptArg):
#	def OnBeginOpen(self, FileName=defaultNamedNotOptArg):
#	def OnEndOpen(self, FileName=defaultNamedNotOptArg):
#	def OnBeginCommand(self, CommandName=defaultNamedNotOptArg):
#	def OnEndCommand(self, CommandName=defaultNamedNotOptArg):
#	def OnBeginLisp(self, FirstLine=defaultNamedNotOptArg):
#	def OnEndLisp(self):
#	def OnLispCancelled(self):
#	def OnWindowChanged(self, WindowState=defaultNamedNotOptArg):


class _DAcadDocumentEvents:
	CLSID = CLSID_Sink = IID('{C814C69D-A74B-494C-8EE6-23731B145CCB}')
	coclass_clsid = IID('{7AABBB95-79BE-4C0F-8024-EB6AF271231C}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginSave",
		        2 : "OnEndSave",
		        6 : "OnBeginCommand",
		        7 : "OnEndCommand",
		        8 : "OnBeginLisp",
		        9 : "OnEndLisp",
		       10 : "OnLispCancelled",
		       11 : "OnSelectionChanged",
		       12 : "OnActivate",
		       13 : "OnDeactivate",
		       14 : "OnBeginRightClick",
		       15 : "OnBeginShortcutMenuDefault",
		       16 : "OnBeginShortcutMenuEdit",
		       17 : "OnBeginShortcutMenuCommand",
		       18 : "OnBeginShortcutMenuGrip",
		       19 : "OnBeginShortcutMenuOsnap",
		       30 : "OnEndShortcutMenu",
		       20 : "OnBeginDoubleClick",
		       21 : "OnObjectAdded",
		       22 : "OnObjectErased",
		       23 : "OnObjectModified",
		       24 : "OnBeginPlot",
		       25 : "OnEndPlot",
		       29 : "OnWindowMovedOrResized",
		       31 : "OnLayoutSwitched",
		       32 : "OnWindowChanged",
		       33 : "OnBeginClose",
		       34 : "OnBeginDocClose",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginSave(self, FileName=defaultNamedNotOptArg):
#	def OnEndSave(self, FileName=defaultNamedNotOptArg):
#	def OnBeginCommand(self, CommandName=defaultNamedNotOptArg):
#	def OnEndCommand(self, CommandName=defaultNamedNotOptArg):
#	def OnBeginLisp(self, FirstLine=defaultNamedNotOptArg):
#	def OnEndLisp(self):
#	def OnLispCancelled(self):
#	def OnSelectionChanged(self):
#	def OnActivate(self):
#	def OnDeactivate(self):
#	def OnBeginRightClick(self, PickPoint=defaultNamedNotOptArg):
#	def OnBeginShortcutMenuDefault(self, ShortcutMenu=pythoncom.Missing):
#	def OnBeginShortcutMenuEdit(self, ShortcutMenu=pythoncom.Missing, SelectionSet=pythoncom.Missing):
#	def OnBeginShortcutMenuCommand(self, ShortcutMenu=pythoncom.Missing, Command=defaultNamedNotOptArg):
#	def OnBeginShortcutMenuGrip(self, ShortcutMenu=pythoncom.Missing):
#	def OnBeginShortcutMenuOsnap(self, ShortcutMenu=pythoncom.Missing):
#	def OnEndShortcutMenu(self, ShortcutMenu=pythoncom.Missing):
#	def OnBeginDoubleClick(self, PickPoint=defaultNamedNotOptArg):
#	def OnObjectAdded(self, Object=defaultNamedNotOptArg):
#	def OnObjectErased(self, ObjectID=defaultNamedNotOptArg):
#	def OnObjectModified(self, Object=defaultNamedNotOptArg):
#	def OnBeginPlot(self, DrawingName=defaultNamedNotOptArg):
#	def OnEndPlot(self, DrawingName=defaultNamedNotOptArg):
#	def OnWindowMovedOrResized(self, HWNDFrame=defaultNamedNotOptArg, bMoved=defaultNamedNotOptArg):
#	def OnLayoutSwitched(self, LayoutName=defaultNamedNotOptArg):
#	def OnWindowChanged(self, WindowState=defaultNamedNotOptArg):
#	def OnBeginClose(self):
#	def OnBeginDocClose(self, Cancel=defaultNamedNotOptArg):


from win32com.client import CoClassBaseClass
class Acad3DFace(CoClassBaseClass): # A CoClass
	CLSID = IID('{8AA16DFC-DFC6-4B51-8FA2-A5D812BE33BF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcad3DFace,
	]
	default_interface = IAcad3DFace

class Acad3DPolyline(CoClassBaseClass): # A CoClass
	CLSID = IID('{46C56738-39C6-4240-8B9B-008CCD769A84}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcad3DPolyline,
	]
	default_interface = IAcad3DPolyline

class Acad3DSolid(CoClassBaseClass): # A CoClass
	CLSID = IID('{70DBCAE8-8C2B-450C-9E1D-43E4686C6512}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcad3DSolid,
	]
	default_interface = IAcad3DSolid

# This CoClass is known by the name 'AutoCAD.AcCmColor.17'
class AcadAcCmColor(CoClassBaseClass): # A CoClass
	CLSID = IID('{C8C18F89-794D-466B-8B97-95634D9890EF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadAcCmColor,
	]
	default_interface = IAcadAcCmColor

# This CoClass is known by the name 'AutoCAD.Application.17'
class AcadApplication(CoClassBaseClass): # A CoClass
	CLSID = IID('{28B7AA99-C0F9-4C47-995E-8A8D729603A1}')
	coclass_sources = [
		_DAcadApplicationEvents,
	]
	default_source = _DAcadApplicationEvents
	coclass_interfaces = [
		IAcadApplication,
	]
	default_interface = IAcadApplication

# This CoClass is known by the name 'AutoCAD.Application.17.1'
class AcadApplicationMinorVersion1(CoClassBaseClass): # A CoClass
	# AutoCAD Application Object
	CLSID = IID('{6AB55F46-2523-4701-A912-B226F46252BA}')
	coclass_sources = [
		_DAcadApplicationEvents,
	]
	default_source = _DAcadApplicationEvents
	coclass_interfaces = [
		IAcadApplication,
	]
	default_interface = IAcadApplication

class AcadArc(CoClassBaseClass): # A CoClass
	CLSID = IID('{EF01D98A-747B-4522-AD70-991B90855DBF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadArc,
	]
	default_interface = IAcadArc

class AcadAttribute(CoClassBaseClass): # A CoClass
	# AutoCAD Attribute Object
	CLSID = IID('{E29F6C45-6927-4508-8F3F-34105FD3FC5F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadAttribute,
		IAcadAttribute2,
	]
	default_interface = IAcadAttribute

class AcadAttributeReference(CoClassBaseClass): # A CoClass
	CLSID = IID('{40770568-0D5E-49D4-BE47-BC47A4F0B0A4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadAttributeReference,
		IAcadAttributeReference2,
	]
	default_interface = IAcadAttributeReference

class AcadBlock(CoClassBaseClass): # A CoClass
	CLSID = IID('{20E47D5B-529A-45BD-8E77-BF1A3064A008}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadBlock,
		IAcadBlock2,
	]
	default_interface = IAcadBlock

class AcadBlockReference(CoClassBaseClass): # A CoClass
	CLSID = IID('{1E8A29BA-827D-4031-A4A3-AE7999B402F6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadBlockReference,
	]
	default_interface = IAcadBlockReference

class AcadBlocks(CoClassBaseClass): # A CoClass
	CLSID = IID('{64B99FDB-1D85-447F-98C7-569DBDA723DB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadBlocks,
	]
	default_interface = IAcadBlocks

class AcadCircle(CoClassBaseClass): # A CoClass
	CLSID = IID('{F78DCF7C-043D-45FC-9D21-676FC307BA3F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadCircle,
	]
	default_interface = IAcadCircle

class AcadDatabase(CoClassBaseClass): # A CoClass
	CLSID = IID('{B53CEF4B-1A13-49DE-BBC5-A7100FB2F38C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDatabase,
	]
	default_interface = IAcadDatabase

class AcadDatabasePreferences(CoClassBaseClass): # A CoClass
	CLSID = IID('{1D6DFD6A-9E16-435A-9327-6FFEC6BA372F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDatabasePreferences,
	]
	default_interface = IAcadDatabasePreferences

class AcadDgnUnderlay(CoClassBaseClass): # A CoClass
	CLSID = IID('{11EC23A0-50D1-4129-8D37-8D1148B800DE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadUnderlay,
	]
	default_interface = IAcadUnderlay

class AcadDictionaries(CoClassBaseClass): # A CoClass
	CLSID = IID('{89F0FC31-3B1D-494B-A75B-6BD4FA527B8A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDictionaries,
	]
	default_interface = IAcadDictionaries

class AcadDictionary(CoClassBaseClass): # A CoClass
	CLSID = IID('{E70DE962-842A-4488-9481-1D0FD72A020F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDictionary,
	]
	default_interface = IAcadDictionary

class AcadDim3PointAngular(CoClassBaseClass): # A CoClass
	CLSID = IID('{BC71DEA1-D6FB-48B8-AB06-D151C81BBCDD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDim3PointAngular,
	]
	default_interface = IAcadDim3PointAngular

class AcadDimAligned(CoClassBaseClass): # A CoClass
	CLSID = IID('{BF4CC07E-E9BB-40D6-873F-855B211033B9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimAligned,
	]
	default_interface = IAcadDimAligned

class AcadDimAngular(CoClassBaseClass): # A CoClass
	CLSID = IID('{750AEC19-2E4C-4ED9-9B9F-F9CAFCD060F3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimAngular,
	]
	default_interface = IAcadDimAngular

class AcadDimArcLength(CoClassBaseClass): # A CoClass
	CLSID = IID('{ABBE3F83-D585-4A50-9B69-198B0F566F2E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimArcLength,
	]
	default_interface = IAcadDimArcLength

class AcadDimDiametric(CoClassBaseClass): # A CoClass
	CLSID = IID('{85452F88-5071-492E-B850-2E3C586DCBD8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimDiametric,
	]
	default_interface = IAcadDimDiametric

class AcadDimOrdinate(CoClassBaseClass): # A CoClass
	CLSID = IID('{44A52280-AE56-490D-890C-89FB7279ED6B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimOrdinate,
	]
	default_interface = IAcadDimOrdinate

class AcadDimRadial(CoClassBaseClass): # A CoClass
	CLSID = IID('{2C74F89E-7421-46B4-BA54-F86F1BD9F237}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimRadial,
	]
	default_interface = IAcadDimRadial

class AcadDimRadialLarge(CoClassBaseClass): # A CoClass
	CLSID = IID('{D86B6C47-11F2-4D95-B635-EA575F0892FC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimRadialLarge,
	]
	default_interface = IAcadDimRadialLarge

class AcadDimRotated(CoClassBaseClass): # A CoClass
	CLSID = IID('{BBF6A206-CB04-479D-96AE-349E1E83319A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimRotated,
	]
	default_interface = IAcadDimRotated

class AcadDimStyle(CoClassBaseClass): # A CoClass
	CLSID = IID('{B80687F9-FA4C-4735-9DC4-E5715F2BC698}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimStyle,
	]
	default_interface = IAcadDimStyle

class AcadDimStyles(CoClassBaseClass): # A CoClass
	CLSID = IID('{794199C5-827C-41C8-8CB2-3A1EA056AF5E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimStyles,
	]
	default_interface = IAcadDimStyles

class AcadDimension(CoClassBaseClass): # A CoClass
	CLSID = IID('{6F56D7C9-18DD-4C15-9FA8-C54E3610EC40}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDimension,
	]
	default_interface = IAcadDimension

# This CoClass is known by the name 'AutoCAD.Drawing.17'
class AcadDocument(CoClassBaseClass): # A CoClass
	CLSID = IID('{7AABBB95-79BE-4C0F-8024-EB6AF271231C}')
	coclass_sources = [
		_DAcadDocumentEvents,
	]
	default_source = _DAcadDocumentEvents
	coclass_interfaces = [
		IAcadDocument,
	]
	default_interface = IAcadDocument

class AcadDocuments(CoClassBaseClass): # A CoClass
	CLSID = IID('{CA6096C3-1A75-45FF-BCBF-A198769571CC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDocuments,
	]
	default_interface = IAcadDocuments

class AcadDwfUnderlay(CoClassBaseClass): # A CoClass
	CLSID = IID('{0D0CFF77-1350-4902-9AE0-8C9A3C22EE34}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadUnderlay,
		IAcadUnderlay2,
	]
	default_interface = IAcadUnderlay

class AcadDynamicBlockReferenceProperty(CoClassBaseClass): # A CoClass
	CLSID = IID('{0215A4C0-5431-4FD0-9B06-46589B5C4939}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadDynamicBlockReferenceProperty,
	]
	default_interface = IAcadDynamicBlockReferenceProperty

class AcadEllipse(CoClassBaseClass): # A CoClass
	CLSID = IID('{48FEFCD7-5D7C-4E4A-9F11-60E69A31D4B1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadEllipse,
	]
	default_interface = IAcadEllipse

class AcadEntity(CoClassBaseClass): # A CoClass
	CLSID = IID('{D66873EA-AAE5-41CC-8DD2-8CE3228E9F89}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadEntity,
	]
	default_interface = IAcadEntity

class AcadExternalReference(CoClassBaseClass): # A CoClass
	CLSID = IID('{B2A579E0-A797-40B1-8AEE-A8F6404719F8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadExternalReference,
	]
	default_interface = IAcadExternalReference

class AcadExtrudedSurface(CoClassBaseClass): # A CoClass
	CLSID = IID('{C2D4ACCC-A3D1-4A0A-AD59-0DD8BA3D5EE1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadExtrudedSurface,
	]
	default_interface = IAcadExtrudedSurface

class AcadFileDependencies(CoClassBaseClass): # A CoClass
	CLSID = IID('{834CE679-2E47-49DE-9E41-FEC87E9192EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadFileDependencies,
	]
	default_interface = IAcadFileDependencies

class AcadFileDependency(CoClassBaseClass): # A CoClass
	CLSID = IID('{CD865713-70D6-4E15-BB7B-9B99AD9DEB85}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadFileDependency,
	]
	default_interface = IAcadFileDependency

class AcadGroup(CoClassBaseClass): # A CoClass
	CLSID = IID('{08A60FF7-BB37-44F4-9759-0ADA6C7B9CC9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadGroup,
	]
	default_interface = IAcadGroup

class AcadGroups(CoClassBaseClass): # A CoClass
	CLSID = IID('{162EF0A1-5A33-46F2-ACCF-CA388B084A09}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadGroups,
	]
	default_interface = IAcadGroups

class AcadHatch(CoClassBaseClass): # A CoClass
	CLSID = IID('{FE718E8F-C3AA-4F30-9103-432450CF1DA1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadHatch,
	]
	default_interface = IAcadHatch

class AcadHelix(CoClassBaseClass): # A CoClass
	CLSID = IID('{DE74F5AD-DA2F-429F-BAF9-850A2808D585}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadHelix,
	]
	default_interface = IAcadHelix

class AcadHyperlink(CoClassBaseClass): # A CoClass
	CLSID = IID('{988F4102-E6E3-4282-ACAC-55270827F2A8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadHyperlink,
	]
	default_interface = IAcadHyperlink

class AcadHyperlinks(CoClassBaseClass): # A CoClass
	CLSID = IID('{1481B385-759A-4B00-9257-E96357563999}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadHyperlinks,
	]
	default_interface = IAcadHyperlinks

class AcadIdPair(CoClassBaseClass): # A CoClass
	CLSID = IID('{14679E3B-C952-4998-8E13-4B1286E6DD99}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadIdPair,
	]
	default_interface = IAcadIdPair

class AcadLWPolyline(CoClassBaseClass): # A CoClass
	CLSID = IID('{E9C07CEC-7B82-49E4-BBA2-7533B88E9D64}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLWPolyline,
	]
	default_interface = IAcadLWPolyline

class AcadLayer(CoClassBaseClass): # A CoClass
	CLSID = IID('{BAE5802A-CF21-4F9C-AE04-D98F4036AC31}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLayer,
	]
	default_interface = IAcadLayer

# This CoClass is known by the name 'AutoCAD.AcadLayerStateManager.17'
class AcadLayerStateManager(CoClassBaseClass): # A CoClass
	CLSID = IID('{4B40437B-8972-4444-BBE3-1588FF55F203}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLayerStateManager,
	]
	default_interface = IAcadLayerStateManager

class AcadLayers(CoClassBaseClass): # A CoClass
	CLSID = IID('{E177A457-9EAA-43C3-A3CE-84874A28F6CA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLayers,
	]
	default_interface = IAcadLayers

class AcadLayout(CoClassBaseClass): # A CoClass
	CLSID = IID('{4A756F5F-CBA4-428B-B17F-AF80C0C8502D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLayout,
	]
	default_interface = IAcadLayout

class AcadLayouts(CoClassBaseClass): # A CoClass
	CLSID = IID('{6BCE6F6E-C050-4F39-BD98-E2743949F724}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLayouts,
	]
	default_interface = IAcadLayouts

class AcadLeader(CoClassBaseClass): # A CoClass
	CLSID = IID('{FA97F7A7-FD19-4D55-ABF2-CFEFFF777426}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLeader,
	]
	default_interface = IAcadLeader

class AcadLine(CoClassBaseClass): # A CoClass
	CLSID = IID('{4BD03680-3C0F-4501-AFF7-3D008586917F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLine,
	]
	default_interface = IAcadLine

class AcadLineType(CoClassBaseClass): # A CoClass
	CLSID = IID('{0D555CE0-304A-47A6-858B-B145209A3982}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLineType,
	]
	default_interface = IAcadLineType

class AcadLineTypes(CoClassBaseClass): # A CoClass
	CLSID = IID('{C8EC7647-1E79-4F13-81D7-2EED803D0D22}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLineTypes,
	]
	default_interface = IAcadLineTypes

class AcadLoftedSurface(CoClassBaseClass): # A CoClass
	CLSID = IID('{3497C2EC-5684-4B21-AF74-F6760E0221DC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadLoftedSurface,
	]
	default_interface = IAcadLoftedSurface

class AcadMInsertBlock(CoClassBaseClass): # A CoClass
	CLSID = IID('{B1560245-190E-4BBD-81DF-9B642D0E5325}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMInsertBlock,
	]
	default_interface = IAcadMInsertBlock

class AcadMLeader(CoClassBaseClass): # A CoClass
	CLSID = IID('{643A46A9-997A-4E10-8117-0B887D0D435F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMLeader,
	]
	default_interface = IAcadMLeader

class AcadMLeaderStyle(CoClassBaseClass): # A CoClass
	CLSID = IID('{F3C3049A-AADC-4F4E-B35E-B15AA27DA2E7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMLeaderStyle,
	]
	default_interface = IAcadMLeaderStyle

class AcadMLine(CoClassBaseClass): # A CoClass
	CLSID = IID('{87F5CF8F-A06D-498F-A05F-E520E6B570DB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMLine,
	]
	default_interface = IAcadMLine

class AcadMText(CoClassBaseClass): # A CoClass
	CLSID = IID('{9906CDFC-DB2C-4126-9422-13139B148495}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMText,
	]
	default_interface = IAcadMText

class AcadMaterial(CoClassBaseClass): # A CoClass
	CLSID = IID('{76193B93-A799-44D6-96F2-76742437E097}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMaterial,
	]
	default_interface = IAcadMaterial

class AcadMaterials(CoClassBaseClass): # A CoClass
	CLSID = IID('{1CFD327B-45B3-4FD5-90B2-F89A57052783}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMaterials,
	]
	default_interface = IAcadMaterials

class AcadMenuBar(CoClassBaseClass): # A CoClass
	CLSID = IID('{64B283AE-0D0B-4C24-9E94-B2F26C210C0E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMenuBar,
	]
	default_interface = IAcadMenuBar

class AcadMenuGroup(CoClassBaseClass): # A CoClass
	CLSID = IID('{6BD98AF5-A2B2-46A2-87EE-C3CB29A5A9CC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMenuGroup,
	]
	default_interface = IAcadMenuGroup

class AcadMenuGroups(CoClassBaseClass): # A CoClass
	CLSID = IID('{E2DA6C15-C324-457C-A136-69279E9C394E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadMenuGroups,
	]
	default_interface = IAcadMenuGroups

class AcadModelSpace(CoClassBaseClass): # A CoClass
	CLSID = IID('{B5EE2B68-9A23-4BCD-BB77-FEA6DFB24DD6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadModelSpace,
		IAcadModelSpace2,
	]
	default_interface = IAcadModelSpace

class AcadObject(CoClassBaseClass): # A CoClass
	CLSID = IID('{9A21C6C5-27FC-4442-8590-575E7AFD73BB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadObject,
	]
	default_interface = IAcadObject

class AcadOle(CoClassBaseClass): # A CoClass
	CLSID = IID('{475C7B4A-6964-4F9E-9708-05A16EAC31D0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadOle,
	]
	default_interface = IAcadOle

class AcadPViewport(CoClassBaseClass): # A CoClass
	CLSID = IID('{F196F03F-651A-43AF-BE34-D11942F24445}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPViewport,
		IAcadPViewport2,
	]
	default_interface = IAcadPViewport

class AcadPaperSpace(CoClassBaseClass): # A CoClass
	CLSID = IID('{FE317223-8EDE-4684-B424-E48B9EA90220}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPaperSpace,
		IAcadPaperSpace2,
	]
	default_interface = IAcadPaperSpace

class AcadPlaneSurface(CoClassBaseClass): # A CoClass
	CLSID = IID('{6451051B-AD22-4C6A-ACCE-013A0E1DDBC3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPlaneSurface,
	]
	default_interface = IAcadPlaneSurface

class AcadPlot(CoClassBaseClass): # A CoClass
	CLSID = IID('{82F4F750-8BD9-4880-A71D-02FB08EBFAEA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPlot,
	]
	default_interface = IAcadPlot

class AcadPlotConfiguration(CoClassBaseClass): # A CoClass
	CLSID = IID('{EA34A0C0-5CE7-4701-A6FA-117D25CD5EBB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPlotConfiguration,
	]
	default_interface = IAcadPlotConfiguration

class AcadPlotConfigurations(CoClassBaseClass): # A CoClass
	CLSID = IID('{12545889-6D32-4424-9967-1E1D7BD1F809}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPlotConfigurations,
	]
	default_interface = IAcadPlotConfigurations

class AcadPoint(CoClassBaseClass): # A CoClass
	CLSID = IID('{48270F9E-CCF6-4C79-B6FF-267C960E6425}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPoint,
	]
	default_interface = IAcadPoint

class AcadPolyfaceMesh(CoClassBaseClass): # A CoClass
	CLSID = IID('{622F6193-E4DD-46E6-BC66-2ED88E9FD28D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPolyfaceMesh,
	]
	default_interface = IAcadPolyfaceMesh

class AcadPolygonMesh(CoClassBaseClass): # A CoClass
	CLSID = IID('{DB207560-8449-4FAF-BDC2-61676EB012D4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPolygonMesh,
	]
	default_interface = IAcadPolygonMesh

class AcadPolyline(CoClassBaseClass): # A CoClass
	CLSID = IID('{0C3393F8-94F5-4B79-8C01-49A2D0CC0FE9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPolyline,
	]
	default_interface = IAcadPolyline

class AcadPopupMenu(CoClassBaseClass): # A CoClass
	CLSID = IID('{194C5C7B-FD4B-42B7-B3A7-A5F3DFFDC999}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPopupMenu,
	]
	default_interface = IAcadPopupMenu

class AcadPopupMenuItem(CoClassBaseClass): # A CoClass
	CLSID = IID('{EA6F8E27-1BD3-468A-8A57-EE2E2116AAC4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPopupMenuItem,
	]
	default_interface = IAcadPopupMenuItem

class AcadPopupMenus(CoClassBaseClass): # A CoClass
	CLSID = IID('{8BA4FD46-2F7C-4220-987D-71DCDEC4E739}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPopupMenus,
	]
	default_interface = IAcadPopupMenus

class AcadPreferences(CoClassBaseClass): # A CoClass
	CLSID = IID('{DBEE68F4-2BF2-43A2-BF9B-353FCDE16782}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferences,
	]
	default_interface = IAcadPreferences

class AcadPreferencesDisplay(CoClassBaseClass): # A CoClass
	CLSID = IID('{26352416-E145-4D82-92E5-3EC921A4A58E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesDisplay,
	]
	default_interface = IAcadPreferencesDisplay

class AcadPreferencesDrafting(CoClassBaseClass): # A CoClass
	CLSID = IID('{98780B52-05AD-4739-BC5C-B3BAD3D5296E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesDrafting,
	]
	default_interface = IAcadPreferencesDrafting

class AcadPreferencesFiles(CoClassBaseClass): # A CoClass
	CLSID = IID('{CF7E7DCE-3696-4C9F-B29E-F8980C7650B0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesFiles,
	]
	default_interface = IAcadPreferencesFiles

class AcadPreferencesOpenSave(CoClassBaseClass): # A CoClass
	CLSID = IID('{6C6322F2-DB92-4304-8790-C6AD52685872}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesOpenSave,
	]
	default_interface = IAcadPreferencesOpenSave

class AcadPreferencesOutput(CoClassBaseClass): # A CoClass
	CLSID = IID('{E6EAB939-E3AF-4FAB-AFDC-2A77D0D5B3B8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesOutput,
	]
	default_interface = IAcadPreferencesOutput

class AcadPreferencesProfiles(CoClassBaseClass): # A CoClass
	CLSID = IID('{767E31F2-FCF8-478D-8836-223DFEE4D6B3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesProfiles,
	]
	default_interface = IAcadPreferencesProfiles

class AcadPreferencesSelection(CoClassBaseClass): # A CoClass
	CLSID = IID('{2B4D4DEA-4EC2-4C06-ADC9-B4992734A757}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesSelection,
	]
	default_interface = IAcadPreferencesSelection

class AcadPreferencesSystem(CoClassBaseClass): # A CoClass
	CLSID = IID('{06527FA0-74A3-4791-AA88-A63509AC82FB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesSystem,
	]
	default_interface = IAcadPreferencesSystem

class AcadPreferencesUser(CoClassBaseClass): # A CoClass
	CLSID = IID('{FFDC2937-8113-401C-A224-E9A034287EA6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadPreferencesUser,
	]
	default_interface = IAcadPreferencesUser

class AcadRasterImage(CoClassBaseClass): # A CoClass
	CLSID = IID('{1FD7F53F-7ED5-439C-9A77-A3821CD09E98}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadRasterImage,
	]
	default_interface = IAcadRasterImage

class AcadRay(CoClassBaseClass): # A CoClass
	CLSID = IID('{FD51ED8A-D518-4554-B236-B6E9D234FD03}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadRay,
	]
	default_interface = IAcadRay

class AcadRegion(CoClassBaseClass): # A CoClass
	CLSID = IID('{38C8B14E-7879-4DA9-8C3F-8CAAC359293A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadRegion,
	]
	default_interface = IAcadRegion

class AcadRegisteredApplication(CoClassBaseClass): # A CoClass
	CLSID = IID('{CC23CA32-9892-4FBA-A108-FE31CA0F35A6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadRegisteredApplication,
	]
	default_interface = IAcadRegisteredApplication

class AcadRegisteredApplications(CoClassBaseClass): # A CoClass
	CLSID = IID('{713C0E8A-5AE8-4695-B442-5ED6C4FE5C42}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadRegisteredApplications,
	]
	default_interface = IAcadRegisteredApplications

class AcadRevolvedSurface(CoClassBaseClass): # A CoClass
	CLSID = IID('{9ECF83FB-23C5-43B6-83DE-93CFBDD74D4A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadRevolvedSurface,
	]
	default_interface = IAcadRevolvedSurface

class AcadSection(CoClassBaseClass): # A CoClass
	CLSID = IID('{7C239DAB-BC87-45F3-B7B1-FCC1541A235B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSection,
	]
	default_interface = IAcadSection

class AcadSectionManager(CoClassBaseClass): # A CoClass
	CLSID = IID('{8795DA35-54AA-4DCB-A065-E7397C8568A9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSectionManager,
	]
	default_interface = IAcadSectionManager

class AcadSectionSettings(CoClassBaseClass): # A CoClass
	CLSID = IID('{26A325BD-C715-48C5-AE7D-8E9EBEE01922}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSectionSettings,
	]
	default_interface = IAcadSectionSettings

class AcadSectionTypeSettings(CoClassBaseClass): # A CoClass
	CLSID = IID('{F2A7D936-C8D3-4A96-B791-3DC0B718C507}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSectionTypeSettings2,
		IAcadSectionTypeSettings,
	]
	default_interface = IAcadSectionTypeSettings2

# This CoClass is known by the name 'AutoCAD.SecurityParams.17'
class AcadSecurityParams(CoClassBaseClass): # A CoClass
	CLSID = IID('{DF6525C2-6358-4B07-813D-708120C5FE1A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSecurityParams,
	]
	default_interface = IAcadSecurityParams

class AcadSelectionSet(CoClassBaseClass): # A CoClass
	CLSID = IID('{B4D2D9F3-C5D1-44AF-913A-BAFB1F357950}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSelectionSet,
	]
	default_interface = IAcadSelectionSet

class AcadSelectionSets(CoClassBaseClass): # A CoClass
	CLSID = IID('{2F6DB935-F865-4709-808C-ADA241F7E592}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSelectionSets,
	]
	default_interface = IAcadSelectionSets

class AcadShape(CoClassBaseClass): # A CoClass
	CLSID = IID('{AC5CECFA-F03A-41D2-A89C-704C44935941}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadShape,
	]
	default_interface = IAcadShape

class AcadSolid(CoClassBaseClass): # A CoClass
	CLSID = IID('{A6A3D586-44CF-44C2-A92C-620BB713B4F2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSolid,
	]
	default_interface = IAcadSolid

class AcadSortentsTable(CoClassBaseClass): # A CoClass
	CLSID = IID('{048ED0E0-12CF-4C0F-9FFA-947C2FBE8C8E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSortentsTable,
	]
	default_interface = IAcadSortentsTable

class AcadSpline(CoClassBaseClass): # A CoClass
	CLSID = IID('{59A224A2-BEF8-4C89-96E0-83A5411ABB6C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSpline,
	]
	default_interface = IAcadSpline

class AcadState(CoClassBaseClass): # A CoClass
	CLSID = IID('{2D46F523-8E0C-4E6D-A4BB-68ACED0C676C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadState,
	]
	default_interface = IAcadState

class AcadSubEntSolidEdge(CoClassBaseClass): # A CoClass
	CLSID = IID('{559E3754-6F34-47AF-BC1F-E2BE712B16EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSubEntSolidEdge,
	]
	default_interface = IAcadSubEntSolidEdge

class AcadSubEntSolidFace(CoClassBaseClass): # A CoClass
	CLSID = IID('{4FC6CEE8-23F6-405F-8BA2-1F7036050715}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSubEntSolidFace,
	]
	default_interface = IAcadSubEntSolidFace

class AcadSubEntSolidNode(CoClassBaseClass): # A CoClass
	CLSID = IID('{25F43C48-6A48-4646-8EC4-D34563D6A4F4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSubEntSolidNode,
	]
	default_interface = IAcadSubEntSolidNode

class AcadSubEntSolidVertex(CoClassBaseClass): # A CoClass
	CLSID = IID('{203D46FB-C6F0-4E95-B702-C1E01ADEBC04}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSubEntSolidVertex,
	]
	default_interface = IAcadSubEntSolidVertex

class AcadSubEntity(CoClassBaseClass): # A CoClass
	CLSID = IID('{2B82582B-C683-49C2-AC5E-20105AD47CE9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSubEntity,
	]
	default_interface = IAcadSubEntity

class AcadSummaryInfo(CoClassBaseClass): # A CoClass
	CLSID = IID('{798391FE-4AF2-4851-9DDA-1F0D70C02A9E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSummaryInfo,
	]
	default_interface = IAcadSummaryInfo

class AcadSurface(CoClassBaseClass): # A CoClass
	CLSID = IID('{8ED07FEF-E1B0-4CC3-B2BA-D354828AB952}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSurface,
	]
	default_interface = IAcadSurface

class AcadSweptSurface(CoClassBaseClass): # A CoClass
	CLSID = IID('{FE054BB2-AF94-40AC-88AA-2F59F7018B1D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadSweptSurface,
	]
	default_interface = IAcadSweptSurface

class AcadTable(CoClassBaseClass): # A CoClass
	CLSID = IID('{2C7D1157-7D50-4A88-9777-5EBBA3189AB8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadTable,
		IAcadTable2,
	]
	default_interface = IAcadTable

class AcadTableStyle(CoClassBaseClass): # A CoClass
	CLSID = IID('{72EFC580-D085-4B81-8C55-26A79E445338}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadTableStyle,
		IAcadTableStyle2,
	]
	default_interface = IAcadTableStyle

class AcadText(CoClassBaseClass): # A CoClass
	CLSID = IID('{E4222C78-3670-4BB1-9AD4-7D8F3E581F2D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadText,
	]
	default_interface = IAcadText

class AcadTextStyle(CoClassBaseClass): # A CoClass
	CLSID = IID('{F868EAEC-1B73-4F5E-BA73-90EBA94E75BE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadTextStyle,
	]
	default_interface = IAcadTextStyle

class AcadTextStyles(CoClassBaseClass): # A CoClass
	CLSID = IID('{BF224DC3-B602-4EEE-BFE9-9E4E0AED6837}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadTextStyles,
	]
	default_interface = IAcadTextStyles

class AcadTolerance(CoClassBaseClass): # A CoClass
	CLSID = IID('{F40E2FF0-4D77-40B2-9A44-A3AEECCE8EFF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadTolerance,
	]
	default_interface = IAcadTolerance

class AcadToolbar(CoClassBaseClass): # A CoClass
	CLSID = IID('{B002FDCB-B013-4654-ACE9-8256ABB240F9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadToolbar,
	]
	default_interface = IAcadToolbar

class AcadToolbarItem(CoClassBaseClass): # A CoClass
	CLSID = IID('{1AAB334A-492D-4502-9F59-247C4966E705}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadToolbarItem,
	]
	default_interface = IAcadToolbarItem

class AcadToolbars(CoClassBaseClass): # A CoClass
	CLSID = IID('{6DA5711F-DFD4-4D81-8D23-F7AEA68A920C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadToolbars,
	]
	default_interface = IAcadToolbars

class AcadTrace(CoClassBaseClass): # A CoClass
	CLSID = IID('{071339A1-1946-44B2-B63E-50459B15DB86}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadTrace,
	]
	default_interface = IAcadTrace

class AcadUCS(CoClassBaseClass): # A CoClass
	CLSID = IID('{849AFB5B-D6C9-4924-A712-F7118FF9611F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadUCS,
	]
	default_interface = IAcadUCS

class AcadUCSs(CoClassBaseClass): # A CoClass
	CLSID = IID('{1EA072EE-57FD-495E-889C-8243C3BDBDBC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadUCSs,
	]
	default_interface = IAcadUCSs

class AcadUtility(CoClassBaseClass): # A CoClass
	CLSID = IID('{30A1B04F-D62D-4925-96AC-9CB7478B910F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadUtility,
	]
	default_interface = IAcadUtility

class AcadView(CoClassBaseClass): # A CoClass
	CLSID = IID('{C061C82C-D041-4214-BB07-B608107CEFCB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadView,
	]
	default_interface = IAcadView

class AcadViewport(CoClassBaseClass): # A CoClass
	CLSID = IID('{1D625598-C876-4C51-8EF5-F9D8F96F62AA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadViewport,
	]
	default_interface = IAcadViewport

class AcadViewports(CoClassBaseClass): # A CoClass
	CLSID = IID('{2709544A-5B24-4F9F-A5DA-CEC7297D3A4E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadViewports,
	]
	default_interface = IAcadViewports

class AcadViews(CoClassBaseClass): # A CoClass
	CLSID = IID('{0B38CACA-3D3C-48EA-BEB5-7D95F4F6EE15}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadViews,
	]
	default_interface = IAcadViews

class AcadXRecord(CoClassBaseClass): # A CoClass
	CLSID = IID('{F5522F0C-962A-48AC-9992-E81B07628F1F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadXRecord,
	]
	default_interface = IAcadXRecord

class AcadXline(CoClassBaseClass): # A CoClass
	CLSID = IID('{2BCA857B-A18B-4AFA-B183-CC0E49C12058}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAcadXline,
	]
	default_interface = IAcadXline

IAcad3DFace_vtables_dispatch_ = 1
IAcad3DFace_vtables_ = [
	(( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge1' , 'visibility' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge1' , 'visibility' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge2' , 'visibility' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge2' , 'visibility' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge3' , 'visibility' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge3' , 'visibility' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge4' , 'visibility' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'VisibilityEdge4' , 'visibility' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'GetInvisibleEdge' , 'Index' , 'bVisible' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'SetInvisibleEdge' , 'Index' , 'State' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 1024 , )),
]

IAcad3DPolyline_vtables_dispatch_ = 1
IAcad3DPolyline_vtables_ = [
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'AppendVertex' , 'vertex' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Explode' , 'pArrayObjs' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'Type' , 'Type' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'fClose' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'fClose' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Length' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
]

IAcad3DSolid_vtables_dispatch_ = 1
IAcad3DSolid_vtables_ = [
	(( 'Centroid' , 'Centroid' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 1024 , )),
	(( 'MomentOfInertia' , 'momentInertia' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'PrincipalDirections' , 'prinDir' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'PrincipalMoments' , 'prinMoments' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'ProductOfInertia' , 'prodInertia' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 1024 , )),
	(( 'RadiiOfGyration' , 'radiiGyration' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'Volume' , 'Volume' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 1024 , )),
	(( 'Boolean' , 'Operation' , 'SolidObject' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'CheckInterference' , 'Object' , 'CreateInterferenceSolid' , 'pIntSolid' , ), 9, (9, (), [ 
			 (9, 1, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , (11, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'SectionSolid' , 'Point1' , 'Point2' , 'point3' , 'pRegion' , 
			 ), 10, (10, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'SliceSolid' , 'Point1' , 'Point2' , 'point3' , 'Negative' , 
			 'pNegSideSolid' , ), 11, (11, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (11, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'SolidType' , 'SolidType' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'Position' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'Position' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'History' , 'bHistory' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'History' , 'bHistory' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ShowHistory' , 'Position' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'ShowHistory' , 'Position' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadAcCmColor_vtables_dispatch_ = 1
IAcadAcCmColor_vtables_ = [
	(( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ColorName' , 'Name' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'BookName' , 'Name' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SetNames' , 'ColorName' , 'BookName' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Red' , 'Red' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Blue' , 'Blue' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Green' , 'Green' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetRGB' , 'Red' , 'Green' , 'Blue' , ), 9, (9, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ColorMethod' , 'Flags' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ColorMethod' , 'Flags' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ColorIndex' , 'color' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ColorIndex' , 'color' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetColorBookColor' , 'BookName' , 'ColorName' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcadApplication_vtables_dispatch_ = 1
IAcadApplication_vtables_ = [
	(( 'Visible' , 'Visible' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pAppName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'bstrCaption' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 4, (4, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDocument' , 'pActiveDoc' , ), 5, (5, (), [ (16393, 10, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDocument' , 'pActiveDoc' , ), 5, (5, (), [ (9, 1, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'FullName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'WindowLeft' , 'left' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'WindowLeft' , 'left' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'bstrPath' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'LocaleId' , 'lcid' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'WindowTop' , 'top' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'WindowTop' , 'top' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'bstrVer' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Preferences' , 'pPreferences' , ), 14, (14, (), [ (16393, 10, None, "IID('{5A6047B5-55E8-456B-A5D1-D42C5DC90B96}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'StatusId' , 'VportObj' , 'bStatus' , ), 17, (17, (), [ (9, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ListArx' , 'pVarListArray' , ), 18, (18, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LoadArx' , 'Name' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetInterfaceObject' , 'ProgID' , 'pObj' , ), 20, (20, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'UnloadArx' , 'Name' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Update' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Quit' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Zoom' , 'Type' , 'vParams' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (16396, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'VBE' , 'pDispVBE' , ), 27, (27, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'MenuGroups' , 'pMenuGroups' , ), 28, (28, (), [ (16393, 10, None, "IID('{38931362-4638-4A2F-8201-E7B2AA52CA37}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'MenuBar' , 'pMenuBar' , ), 29, (29, (), [ (16393, 10, None, "IID('{BD7E485E-3CD1-4DD5-9959-EB76B03024A5}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LoadDVB' , 'Name' , ), 30, (30, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UnloadDVB' , 'Name' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Documents' , 'pDocuments' , ), 32, (32, (), [ (16393, 10, None, "IID('{CDF18C05-94F9-4902-856D-137AC54CEADF}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Eval' , 'Expression' , ), 33, (33, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'WindowState' , 'eWinState' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'WindowState' , 'eWinState' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'RunMacro' , 'MacroPath' , ), 35, (35, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ZoomExtents' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ZoomAll' , ), 37, (37, (), [ ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ZoomCenter' , 'Center' , 'Magnify' , ), 38, (38, (), [ (12, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ZoomScaled' , 'scale' , 'ScaleType' , ), 39, (39, (), [ (5, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ZoomWindow' , 'LowerLeft' , 'UpperRight' , ), 40, (40, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ZoomPickWindow' , ), 41, (41, (), [ ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'GetAcadState' , 'pVal' , ), 42, (42, (), [ (16393, 10, None, "IID('{144790A6-6C66-49EC-96B0-DC148D06DB98}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ZoomPrevious' , ), 43, (43, (), [ ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'HWND' , 'HWND' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
]

IAcadArc_vtables_dispatch_ = 1
IAcadArc_vtables_ = [
	(( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'CenterPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'CenterPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'EndPoint' , 'EndPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Radius' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Radius' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'StartAngle' , 'Angle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'StartAngle' , 'Angle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'EndAngle' , 'Angle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'EndAngle' , 'Angle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'TotalAngle' , 'TotalAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ArcLength' , 'ArcLength' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 10, (10, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'Area' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadAttribute_vtables_dispatch_ = 1
IAcadAttribute_vtables_ = [
	(( 'FieldLength' , 'fieldLen' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 1024 , )),
	(( 'FieldLength' , 'fieldLen' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'TagString' , 'Tag' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'Tag' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'PromptString' , 'bstrPrompt' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'PromptString' , 'bstrPrompt' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'Name' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'Name' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'align' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'align' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalAlignment' , 'horizAlign' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 64 , )),
	(( 'HorizontalAlignment' , 'horizAlign' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 64 , )),
	(( 'VerticalAlignment' , 'vertiAlign' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 64 , )),
	(( 'VerticalAlignment' , 'vertiAlign' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 64 , )),
	(( 'Height' , 'Height' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentPoint' , 'alignPoint' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentPoint' , 'alignPoint' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 14, (14, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 14, (14, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 1024 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 1024 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'Mode' , 'Mode' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 1024 , )),
	(( 'Mode' , 'Mode' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 1024 , )),
	(( 'UpsideDown' , 'bUpsideDown' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'UpsideDown' , 'bUpsideDown' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'Backward' , 'bBackward' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'Backward' , 'bBackward' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'Invisible' , 'bInvisible' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Invisible' , 'bInvisible' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'Constant' , 'bConstant' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'Constant' , 'bConstant' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'Verify' , 'bVerify' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'Verify' , 'bVerify' , ), 23, (23, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'Preset' , 'bPreset' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'Preset' , 'bPreset' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
]

IAcadAttribute2_vtables_dispatch_ = 1
IAcadAttribute2_vtables_ = [
	(( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'UpdateMTextAttribute' , ), 28, (28, (), [ ], 1 , 1 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 29, (29, (), [ (5, 0, None, None) , ], 1 , 4 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'MTextDrawingDirection' , 'drawDir' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'MTextDrawingDirection' , 'drawDir' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
]

IAcadAttributeReference_vtables_dispatch_ = 1
IAcadAttributeReference_vtables_ = [
	(( 'Height' , 'Height' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalAlignment' , 'horizAlign' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'HorizontalAlignment' , 'horizAlign' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 64 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'Name' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'Name' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'VerticalAlignment' , 'vertiAlign' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 64 , )),
	(( 'VerticalAlignment' , 'vertiAlign' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 64 , )),
	(( 'FieldLength' , 'fieldLen' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'FieldLength' , 'fieldLen' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'align' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'align' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'UpsideDown' , 'bUpsideDown' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'UpsideDown' , 'bUpsideDown' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'Backward' , 'bBackward' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'Backward' , 'bBackward' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'Invisible' , 'bInvisible' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'Invisible' , 'bInvisible' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'Constant' , 'bConstant' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
]

IAcadAttributeReference2_vtables_dispatch_ = 1
IAcadAttributeReference2_vtables_ = [
	(( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'UpdateMTextAttribute' , ), 29, (29, (), [ ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 30, (30, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 30, (30, (), [ (5, 0, None, None) , ], 1 , 4 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'MTextDrawingDirection' , 'drawDir' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'MTextDrawingDirection' , 'drawDir' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
]

IAcadBlock_vtables_dispatch_ = 1
IAcadBlock_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'pVal' , ), 1536, (1536, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1537, (1537, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1537, (1537, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 1538, (1538, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 1538, (1538, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AddCustomObject' , 'ClassName' , 'pObject' , ), 1539, (1539, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Add3DFace' , 'Point1' , 'Point2' , 'point3' , 'Point4' , 
			 'pFace3d' , ), 1540, (1540, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Add3DMesh' , 'M' , 'N' , 'PointsMatrix' , 'pMesh3d' , 
			 ), 1541, (1541, (), [ (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{8436D08F-6B44-4B65-AECB-4B3F570E38E8}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Add3DPoly' , 'PointsArray' , 'pPoly3d' , ), 1542, (1542, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B89275F4-543E-4EAF-A931-DAB1341A2B67}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddArc' , 'Center' , 'Radius' , 'StartAngle' , 'EndAngle' , 
			 'pArc' , ), 1543, (1543, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AddAttribute' , 'Height' , 'Mode' , 'Prompt' , 'InsertionPoint' , 
			 'Tag' , 'Value' , 'pAttr' , ), 1544, (1544, (), [ (5, 1, None, None) , 
			 (3, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (16393, 10, None, "IID('{090C78C3-33E1-451B-B00F-A58F7B62DA00}')") , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AddBox' , 'Origin' , 'Length' , 'Width' , 'Height' , 
			 'pBox' , ), 1545, (1545, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AddCircle' , 'Center' , 'Radius' , 'pCircle' , ), 1546, (1546, (), [ 
			 (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}')") , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AddCone' , 'Center' , 'BaseRadius' , 'Height' , 'pCone' , 
			 ), 1547, (1547, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AddCylinder' , 'Center' , 'Radius' , 'Height' , 'pCyl' , 
			 ), 1548, (1548, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AddDimAligned' , 'ExtLine1Point' , 'ExtLine2Point' , 'TextPosition' , 'pDim' , 
			 ), 1549, (1549, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{AB6BA922-5284-4D66-8D31-6E732B1645CC}')") , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AddDimAngular' , 'AngleVertex' , 'FirstEndPoint' , 'SecondEndPoint' , 'TextPoint' , 
			 'pDim' , ), 1550, (1550, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}')") , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AddDimDiametric' , 'ChordPoint' , 'FarChordPoint' , 'LeaderLength' , 'pDim' , 
			 ), 1551, (1551, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{CE984151-66ED-4500-B99D-85ACCEC10820}')") , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AddDimRotated' , 'ExtLine1Point' , 'ExtLine2Point' , 'DimLineLocation' , 'RotationAngle' , 
			 'pDim' , ), 1552, (1552, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}')") , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AddDimOrdinate' , 'DefinitionPoint' , 'LeaderEndPoint' , 'UseXAxis' , 'pDim' , 
			 ), 1553, (1553, (), [ (12, 1, None, None) , (12, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{8BBE360E-DC9A-4640-8597-C54166887E54}')") , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AddDimRadial' , 'Center' , 'ChordPoint' , 'LeaderLength' , 'pDim' , 
			 ), 1554, (1554, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{FC56A33B-1DC1-42FE-B848-D469E375FC44}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AddEllipse' , 'Center' , 'MajorAxis' , 'RadiusRatio' , 'pEllipse' , 
			 ), 1555, (1555, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{F64246E5-206A-42C2-B3E7-A725B2C07CFB}')") , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AddEllipticalCone' , 'Center' , 'MajorRadius' , 'MinorRadius' , 'Height' , 
			 'pEllipCone' , ), 1556, (1556, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AddEllipticalCylinder' , 'Center' , 'MajorRadius' , 'MinorRadius' , 'Height' , 
			 'pEllipCyl' , ), 1557, (1557, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'AddExtrudedSolid' , 'Profile' , 'Height' , 'TaperAngle' , 'pExtrSolid' , 
			 ), 1558, (1558, (), [ (9, 1, None, "IID('{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')") , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'AddExtrudedSolidAlongPath' , 'Profile' , 'Path' , 'pExtrSolid' , ), 1559, (1559, (), [ 
			 (9, 1, None, "IID('{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')") , (9, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AddLeader' , 'PointsArray' , 'Annotation' , 'Type' , 'pLeader' , 
			 ), 1560, (1560, (), [ (12, 1, None, None) , (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , (3, 1, None, None) , (16393, 10, None, "IID('{D035FBCB-313A-4165-86A7-AAD91DA820E5}')") , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'AddMText' , 'InsertionPoint' , 'Width' , 'Text' , 'pMtext' , 
			 ), 1561, (1561, (), [ (12, 1, None, None) , (5, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}')") , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'Point' , 'pPoint' , ), 1562, (1562, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8F0BB516-7C5B-4BA4-820F-24B1E962D971}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'AddLightWeightPolyline' , 'VerticesList' , 'pLWPolyline' , ), 1563, (1563, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{82DEE429-1C13-460B-88FA-C63E0CA33D21}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'AddPolyline' , 'VerticesList' , 'pPolyline' , ), 1564, (1564, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A09B5650-3A79-41F7-A459-1817D6F1797C}')") , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'AddRay' , 'Point1' , 'Point2' , 'pRay' , ), 1565, (1565, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{BE71C3CD-270F-4A01-86F4-91694B267C19}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'AddRegion' , 'ObjectList' , 'pRegions' , ), 1566, (1566, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'AddRevolvedSolid' , 'Profile' , 'AxisPoint' , 'AxisDir' , 'Angle' , 
			 'pRevolSolid' , ), 1567, (1567, (), [ (9, 1, None, "IID('{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')") , (12, 1, None, None) , (12, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'AddShape' , 'Name' , 'InsertionPoint' , 'ScaleFactor' , 'RotationAngle' , 
			 'pShape' , ), 1568, (1568, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}')") , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'AddSolid' , 'Point1' , 'Point2' , 'point3' , 'Point4' , 
			 'pSolid' , ), 1569, (1569, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'AddSphere' , 'Center' , 'Radius' , 'pSphere' , ), 1570, (1570, (), [ 
			 (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'AddSpline' , 'PointsArray' , 'StartTangent' , 'EndTangent' , 'pSpline' , 
			 ), 1571, (1571, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{D7727775-104A-4DBA-9CCF-0FBDC5B80872}')") , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'AddText' , 'TextString' , 'InsertionPoint' , 'Height' , 'pText' , 
			 ), 1572, (1572, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}')") , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'AddTolerance' , 'Text' , 'InsertionPoint' , 'Direction' , 'pTolerance' , 
			 ), 1573, (1573, (), [ (8, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}')") , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'AddTorus' , 'Center' , 'TorusRadius' , 'TubeRadius' , 'pTorus' , 
			 ), 1574, (1574, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'AddTrace' , 'PointsArray' , 'pTrace' , ), 1575, (1575, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}')") , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'AddWedge' , 'Center' , 'Length' , 'Width' , 'Height' , 
			 'pWedge' , ), 1576, (1576, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{DF94C736-F717-4469-A886-B9902747352D}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'AddXline' , 'Point1' , 'Point2' , 'pXline' , ), 1577, (1577, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{96FC51A1-B610-406F-990D-0652F53758A9}')") , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'InsertBlock' , 'InsertionPoint' , 'Name' , 'Xscale' , 'Yscale' , 
			 'Zscale' , 'Rotation' , 'Password' , 'pBlkRef' , ), 1578, (1578, (), [ 
			 (12, 1, None, None) , (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{17C1A78F-ECB3-4838-986C-FA92E17D41AB}')") , ], 1 , 1 , 4 , 1 , 528 , (3, 0, None, None) , 0 , )),
	(( 'AddHatch' , 'PatternType' , 'PatternName' , 'Associativity' , 'HatchObjectType' , 
			 'pHatch' , ), 1579, (1579, (), [ (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
			 (12, 17, None, None) , (16393, 10, None, "IID('{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}')") , ], 1 , 1 , 4 , 1 , 536 , (3, 0, None, None) , 0 , )),
	(( 'AddRaster' , 'imageFileName' , 'InsertionPoint' , 'ScaleFactor' , 'RotationAngle' , 
			 'pRaster' , ), 1580, (1580, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{EE3833FA-927E-4272-A918-8B487E445600}')") , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'AddLine' , 'StartPoint' , 'EndPoint' , 'pLine' , ), 1581, (1581, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{BB0A29C2-AA57-4A39-A771-DD9987890AF7}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'IsLayout' , 'bIsLayout' , ), 1582, (1582, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'pLayout' , ), 1583, (1583, (), [ (16393, 10, None, "IID('{0B119218-2411-46DD-B7B9-17C8C009222C}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'IsXRef' , 'pIsXRref' , ), 1584, (1584, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'AddMInsertBlock' , 'InsertionPoint' , 'Name' , 'Xscale' , 'Yscale' , 
			 'Zscale' , 'Rotation' , 'NumRows' , 'NumColumns' , 'RowSpacing' , 
			 'ColumnSpacing' , 'Password' , 'pMInsertBlk' , ), 1585, (1585, (), [ (12, 1, None, None) , 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , 
			 (16393, 10, None, "IID('{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}')") , ], 1 , 1 , 4 , 1 , 584 , (3, 0, None, None) , 0 , )),
	(( 'AddPolyfaceMesh' , 'VertexList' , 'FaceList' , 'pPFMesh' , ), 1586, (1586, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{60A35C35-64B5-4751-99E7-259879896519}')") , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'AddMLine' , 'VertexList' , 'pMLine' , ), 1587, (1587, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}')") , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'AddDim3PointAngular' , 'AngleVertex' , 'FirstEndPoint' , 'SecondEndPoint' , 'TextPoint' , 
			 'pDim' , ), 1588, (1588, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{BA16BE7C-0789-43DE-B371-8082AE3FA99A}')") , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'XRefDatabase' , 'pDatabase' , ), 1589, (1589, (), [ (16393, 10, None, "IID('{A9625062-DC43-4D1C-9FC6-8512123BB91B}')") , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'AttachExternalReference' , 'PathName' , 'Name' , 'InsertionPoint' , 'Xscale' , 
			 'Yscale' , 'Zscale' , 'Rotation' , 'bOverlay' , 'Password' , 
			 'pXRef' , ), 1590, (1590, (), [ (8, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , 
			 (12, 17, None, None) , (16393, 10, None, "IID('{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}')") , ], 1 , 1 , 4 , 1 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Unload' , ), 1591, (1591, (), [ ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Reload' , ), 1592, (1592, (), [ ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Bind' , 'bPrefixName' , ), 1593, (1593, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'Detach' , ), 1594, (1594, (), [ ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'AddTable' , 'InsertionPoint' , 'NumRows' , 'NumColumns' , 'RowHeight' , 
			 'ColWidth' , 'pTable' , ), 1595, (1595, (), [ (12, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{187D4409-BABE-43D8-8379-2AF11136DA16}')") , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'bstrName' , ), 1596, (1596, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'bstrName' , ), 1596, (1596, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'Comments' , 'bstrName' , ), 1597, (1597, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'Comments' , 'bstrName' , ), 1597, (1597, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'Units' , 'pIU' , ), 1598, (1598, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'Units' , 'pIU' , ), 1598, (1598, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'Explodable' , 'bExplodable' , ), 1599, (1599, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'Explodable' , 'bExplodable' , ), 1599, (1599, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'BlockScaling' , 'pBS' , ), 1600, (1600, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'BlockScaling' , 'pBS' , ), 1600, (1600, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'IsDynamicBlock' , 'pDynamicBlock' , ), 1601, (1601, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'AddDimArc' , 'ArcCenter' , 'FirstEndPoint' , 'SecondEndPoint' , 'ArcPoint' , 
			 'pDim' , ), 1602, (1602, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{FFCEA1F0-1C70-4342-9C14-929923139F4C}')") , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'AddDimRadialLarge' , 'Center' , 'ChordPoint' , 'OverrideCenter' , 'JogPoint' , 
			 'JogAngle' , 'pDim' , ), 1603, (1603, (), [ (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{F0828C6C-9FF0-4DFF-A115-158FF79B241E}')") , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'AddSection' , 'FromPoint' , 'ToPoint' , 'planeVector' , 'ppSecPlane' , 
			 ), 1604, (1604, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{4EE05AF2-D6B9-4D79-9734-C175AC445099}')") , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
]

IAcadBlock2_vtables_dispatch_ = 1
IAcadBlock2_vtables_ = [
	(( 'AddMLeader' , 'PointsArray' , 'leaderLineIndex' , 'pMLeader' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (16387, 2, None, None) , (16393, 10, None, "IID('{B125D293-E039-4D19-B975-1C4A8841C5AB}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadBlockReference_vtables_dispatch_ = 1
IAcadBlockReference_vtables_ = [
	(( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'XScaleFactor' , 'ScaleFactor' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'XScaleFactor' , 'ScaleFactor' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'YScaleFactor' , 'ScaleFactor' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'YScaleFactor' , 'ScaleFactor' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ZScaleFactor' , 'ScaleFactor' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ZScaleFactor' , 'ScaleFactor' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Explode' , 'pArrayObjs' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'GetAttributes' , 'pAttrObjs' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'GetConstantAttributes' , 'pAttrObjs' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'HasAttributes' , 'bHas' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 1024 , )),
	(( 'EffectiveName' , 'EffectiveName' , ), 512, (512, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'IsDynamicBlock' , 'pDynamicBlock' , ), 513, (513, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 1024 , )),
	(( 'GetDynamicBlockProperties' , 'dynamicPropertyArray' , ), 514, (514, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ResetBlock' , ), 515, (515, (), [ ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'ConvertToAnonymousBlock' , ), 516, (516, (), [ ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ConvertToStaticBlock' , 'newBlockName' , ), 517, (517, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'XEffectiveScaleFactor' , 'ScaleFactor' , ), 518, (518, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'XEffectiveScaleFactor' , 'ScaleFactor' , ), 518, (518, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'YEffectiveScaleFactor' , 'ScaleFactor' , ), 519, (519, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'YEffectiveScaleFactor' , 'ScaleFactor' , ), 519, (519, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ZEffectiveScaleFactor' , 'ScaleFactor' , ), 520, (520, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'ZEffectiveScaleFactor' , 'ScaleFactor' , ), 520, (520, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'InsUnits' , 'Units' , ), 521, (521, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'InsUnitsFactor' , 'factor' , ), 528, (528, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
]

IAcadBlocks_vtables_dispatch_ = 1
IAcadBlocks_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{165531B8-67A4-46D8-AC99-F8150FA7A412}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'InsertionPoint' , 'Name' , 'pBlock' , ), 2, (2, (), [ 
			 (12, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{165531B8-67A4-46D8-AC99-F8150FA7A412}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadCircle_vtables_dispatch_ = 1
IAcadCircle_vtables_ = [
	(( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Radius' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Radius' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'Diameter' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'Diameter' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Circumference' , 'Circumference' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Circumference' , 'Circumference' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'Area' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'Area' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 8, (8, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

IAcadDatabase_vtables_dispatch_ = 1
IAcadDatabase_vtables_ = [
	(( 'ModelSpace' , 'pMSpace' , ), 1, (1, (), [ (16393, 10, None, "IID('{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PaperSpace' , 'pPSpace' , ), 2, (2, (), [ (16393, 10, None, "IID('{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Blocks' , 'pBlocks' , ), 3, (3, (), [ (16393, 10, None, "IID('{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CopyObjects' , 'Objects' , 'Owner' , 'IdPairs' , 'pNewObjects' , 
			 ), 4, (4, (), [ (12, 1, None, None) , (12, 17, None, None) , (16396, 19, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Groups' , 'pGroups' , ), 5, (5, (), [ (16393, 10, None, "IID('{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DimStyles' , 'pDimStyles' , ), 6, (6, (), [ (16393, 10, None, "IID('{C62F448E-753C-4DDF-B30D-873D0DAF9735}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Layers' , 'pLayers' , ), 7, (7, (), [ (16393, 10, None, "IID('{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Linetypes' , 'pLinetypes' , ), 8, (8, (), [ (16393, 10, None, "IID('{943058F5-B25A-470F-84E6-C6364FEC2635}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Dictionaries' , 'pDictionaries' , ), 9, (9, (), [ (16393, 10, None, "IID('{803BC722-4C89-4866-98B1-E4453C5F6287}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RegisteredApplications' , 'pRegApps' , ), 10, (10, (), [ (16393, 10, None, "IID('{5A832756-01AF-4D2F-89A6-50E0121AFD1A}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TextStyles' , 'pTextStyles' , ), 11, (11, (), [ (16393, 10, None, "IID('{617040CF-4E9D-4CC3-9814-AD69E0AB9751}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UserCoordinateSystems' , 'pUCSs' , ), 12, (12, (), [ (16393, 10, None, "IID('{BF4812B8-408D-4E07-B595-ACB8336B6A93}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Views' , 'pViews' , ), 13, (13, (), [ (16393, 10, None, "IID('{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Viewports' , 'pViewports' , ), 14, (14, (), [ (16393, 10, None, "IID('{98558EDE-E8B4-4870-9D78-15BE6370E1C1}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ElevationModelSpace' , 'Elevation' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ElevationModelSpace' , 'Elevation' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ElevationPaperSpace' , 'Elevation' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ElevationPaperSpace' , 'Elevation' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Limits' , 'Limits' , ), 17, (17, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Limits' , 'Limits' , ), 17, (17, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'HandleToObject' , 'Handle' , 'pObj' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ObjectIdToObject' , 'ObjectID' , 'pObj' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Layouts' , 'pLayouts' , ), 20, (20, (), [ (16393, 10, None, "IID('{1636A05E-7F68-4CEE-B93B-8F56BA299293}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PlotConfigurations' , 'pPlotConfigs' , ), 21, (21, (), [ (16393, 10, None, "IID('{AD2543CB-31A8-4DDD-9162-845E11D7F72F}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Preferences' , 'pPref' , ), 22, (22, (), [ (16393, 10, None, "IID('{96435877-2FB6-4842-BD4F-7334ADF4B707}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'FileDependencies' , 'pFDM' , ), 70, (70, (), [ (16393, 10, None, "IID('{65156CBF-69F4-403C-AC21-682F839048DD}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SummaryInfo' , 'pSummaryInfo' , ), 71, (71, (), [ (16393, 10, None, "IID('{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SectionManager' , 'pSecMgr' , ), 72, (72, (), [ (16393, 10, None, "IID('{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Materials' , 'pMaterials' , ), 73, (73, (), [ (16393, 10, None, "IID('{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IAcadDatabasePreferences_vtables_dispatch_ = 1
IAcadDatabasePreferences_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SolidFill' , 'Fill' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SolidFill' , 'Fill' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'XRefEdit' , 'Edit' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'XRefEdit' , 'Edit' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'XRefLayerVisibility' , 'XRefLayerVis' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'XRefLayerVisibility' , 'XRefLayerVis' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'OLELaunch' , 'Launch' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'OLELaunch' , 'Launch' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AllowLongSymbolNames' , 'LongNames' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AllowLongSymbolNames' , 'LongNames' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortBySelection' , 'Sort' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortBySelection' , 'Sort' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortBySnap' , 'Sort' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortBySnap' , 'Sort' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByRedraws' , 'Sort' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByRedraws' , 'Sort' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByRegens' , 'Sort' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByRegens' , 'Sort' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByPlotting' , 'Sort' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByPlotting' , 'Sort' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByPSOutput' , 'Sort' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSortByPSOutput' , 'Sort' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ContourLinesPerSurface' , 'Path' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ContourLinesPerSurface' , 'Path' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DisplaySilhouette' , 'Path' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DisplaySilhouette' , 'Path' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'MaxActiveViewports' , 'Path' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'MaxActiveViewports' , 'Path' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'RenderSmoothness' , 'Path' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'RenderSmoothness' , 'Path' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SegmentPerPolyline' , 'Path' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SegmentPerPolyline' , 'Path' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'TextFrameDisplay' , 'Path' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'TextFrameDisplay' , 'Path' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Path' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Path' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'LineWeightDisplay' , 'Path' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'LineWeightDisplay' , 'Path' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IAcadDictionaries_vtables_dispatch_ = 1
IAcadDictionaries_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadDictionary_vtables_dispatch_ = 1
IAcadDictionary_vtables_ = [
	(( 'Name' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AddObject' , 'Keyword' , 'ObjectName' , 'pNewObj' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetName' , 'Object' , 'bstrName' , ), 4, (4, (), [ (9, 1, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetObject' , 'Name' , 'pObj' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'Name' , 'pObj' , ), 6, (6, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Rename' , 'OldName' , 'NewName' , ), 7, (7, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Replace' , 'OldName' , 'pObj' , ), 8, (8, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddXRecord' , 'Keyword' , 'pNewXRecord' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{BD45EE03-5243-4466-813C-95E33F562665}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IAcadDim3PointAngular_vtables_dispatch_ = 1
IAcadDim3PointAngular_vtables_ = [
	(( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 1024 , )),
	(( 'AngleVertex' , 'AngleVertex' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 1024 , )),
	(( 'AngleVertex' , 'AngleVertex' , ), 45, (45, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 1024 , )),
	(( 'TextPrecision' , 'AngleVertex' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'TextPrecision' , 'AngleVertex' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AngleFormat' , 'format' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AngleFormat' , 'format' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 1024 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
]

IAcadDimAligned_vtables_dispatch_ = 1
IAcadDimAligned_vtables_ = [
	(( 'ExtLine1Point' , 'xLine1Point' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine1Point' , 'xLine1Point' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2Point' , 'xLine2Point' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2Point' , 'xLine2Point' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 1024 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'suffix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'suffix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'color' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'color' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'color' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'color' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 1024 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
]

IAcadDimAngular_vtables_dispatch_ = 1
IAcadDimAngular_vtables_ = [
	(( 'ExtLine1StartPoint' , 'xLine1Point' , ), 37, (37, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine1StartPoint' , 'xLine1Point' , ), 37, (37, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2StartPoint' , 'xLine2Point' , ), 39, (39, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2StartPoint' , 'xLine2Point' , ), 39, (39, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 1024 , )),
	(( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 1024 , )),
	(( 'AngleFormat' , 'format' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AngleFormat' , 'format' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'TextPrecision' , 'precision' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'TextPrecision' , 'precision' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 1024 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
]

IAcadDimArcLength_vtables_dispatch_ = 1
IAcadDimArcLength_vtables_ = [
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1632 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1640 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1648 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1656 , (3, 0, None, None) , 1024 , )),
	(( 'ArcPoint' , 'pVal' , ), 68, (68, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
	(( 'ArcPoint' , 'pVal' , ), 68, (68, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Point' , 'pVal' , ), 69, (69, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Point' , 'pVal' , ), 69, (69, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Point' , 'pVal' , ), 70, (70, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Point' , 'pVal' , ), 70, (70, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'CenterPoint' , 'pVal' , ), 71, (71, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
	(( 'CenterPoint' , 'pVal' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
	(( 'Leader1Point' , 'pVal' , ), 72, (72, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
	(( 'Leader1Point' , 'pVal' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
	(( 'Leader2Point' , 'pVal' , ), 73, (73, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
	(( 'Leader2Point' , 'pVal' , ), 73, (73, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'IsPartial' , 'pVal' , ), 74, (74, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
	(( 'IsPartial' , 'pVal' , ), 74, (74, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
	(( 'ArcStartParam' , 'pVal' , ), 75, (75, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
	(( 'ArcStartParam' , 'pVal' , ), 75, (75, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
	(( 'ArcEndParam' , 'pVal' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
	(( 'ArcEndParam' , 'pVal' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
	(( 'HasLeader' , 'pVal' , ), 77, (77, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
	(( 'HasLeader' , 'pVal' , ), 77, (77, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
	(( 'SymbolPosition' , 'Position' , ), 67, (67, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
	(( 'SymbolPosition' , 'Position' , ), 67, (67, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
]

IAcadDimDiametric_vtables_dispatch_ = 1
IAcadDimDiametric_vtables_ = [
	(( 'LeaderLength' , ), 42, (42, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 888 , (3, 0, None, None) , 1024 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 1024 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
]

IAcadDimOrdinate_vtables_dispatch_ = 1
IAcadDimOrdinate_vtables_ = [
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
]

IAcadDimRadial_vtables_dispatch_ = 1
IAcadDimRadial_vtables_ = [
	(( 'LeaderLength' , ), 42, (42, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 888 , (3, 0, None, None) , 1024 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 1024 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 1024 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
]

IAcadDimRadialLarge_vtables_dispatch_ = 1
IAcadDimRadialLarge_vtables_ = [
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 1024 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 1024 , )),
	(( 'OverrideCenter' , 'overrideCenterPos' , ), 68, (68, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'OverrideCenter' , 'overrideCenterPos' , ), 68, (68, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'JogLocation' , 'jogPos' , ), 69, (69, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'JogLocation' , 'jogPos' , ), 69, (69, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'JogAngle' , 'JogAngle' , ), 70, (70, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'JogAngle' , 'JogAngle' , ), 70, (70, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'pVar' , ), 71, (71, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'pVar' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'ChordPoint' , 'pVal' , ), 72, (72, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'ChordPoint' , 'pVal' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
]

IAcadDimRotated_vtables_dispatch_ = 1
IAcadDimRotated_vtables_ = [
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1632 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1640 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1648 , (3, 0, None, None) , 1024 , )),
	(( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1656 , (3, 0, None, None) , 1024 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
	(( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
]

IAcadDimStyle_vtables_dispatch_ = 1
IAcadDimStyle_vtables_ = [
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CopyFrom' , 'StyleSource' , ), 2, (2, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadDimStyles_vtables_dispatch_ = 1
IAcadDimStyles_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadDimension_vtables_dispatch_ = 1
IAcadDimension_vtables_ = [
	(( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'Rotation' , 'rotAngle' , ), 1538, (1538, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Rotation' , 'rotAngle' , ), 1538, (1538, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'TextPosition' , 'textPos' , ), 1539, (1539, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'TextPosition' , 'textPos' , ), 1539, (1539, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'TextRotation' , 'rotAngle' , ), 1540, (1540, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'TextRotation' , 'rotAngle' , ), 1540, (1540, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TextOverride' , 'bstrText' , ), 1541, (1541, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TextOverride' , 'bstrText' , ), 1541, (1541, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'TextColor' , 'color' , ), 1546, (1546, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'TextColor' , 'color' , ), 1546, (1546, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSeparator' , 'character' , ), 1548, (1548, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSeparator' , 'character' , ), 1548, (1548, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'TextPrefix' , 'prefix' , ), 1551, (1551, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'TextPrefix' , 'prefix' , ), 1551, (1551, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'TextSuffix' , 'suffix' , ), 1552, (1552, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'TextSuffix' , 'suffix' , ), 1552, (1552, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'TolerancePrecision' , 'precision' , ), 1555, (1555, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'TolerancePrecision' , 'precision' , ), 1555, (1555, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceHeightScale' , 'scale' , ), 1556, (1556, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceHeightScale' , 'scale' , ), 1556, (1556, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceLowerLimit' , 'lower' , ), 1557, (1557, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceLowerLimit' , 'lower' , ), 1557, (1557, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'TextMovement' , 'Move' , ), 1558, (1558, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'TextMovement' , 'Move' , ), 1558, (1558, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceDisplay' , 'method' , ), 1559, (1559, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceDisplay' , 'method' , ), 1559, (1559, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceJustification' , 'method' , ), 1560, (1560, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceJustification' , 'method' , ), 1560, (1560, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceUpperLimit' , 'upper' , ), 1561, (1561, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceUpperLimit' , 'upper' , ), 1561, (1561, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'SuppressLeadingZeros' , 'bVal' , ), 1565, (1565, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'SuppressLeadingZeros' , 'bVal' , ), 1565, (1565, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'SuppressTrailingZeros' , 'bVal' , ), 1566, (1566, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'SuppressTrailingZeros' , 'bVal' , ), 1566, (1566, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressLeadingZeros' , 'bVal' , ), 1569, (1569, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressLeadingZeros' , 'bVal' , ), 1569, (1569, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressTrailingZeros' , 'bVal' , ), 1570, (1570, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceSuppressTrailingZeros' , 'bVal' , ), 1570, (1570, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'TextFill' , 'bVal' , ), 1571, (1571, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'TextFill' , 'bVal' , ), 1571, (1571, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'TextFillColor' , 'color' , ), 1572, (1572, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'TextFillColor' , 'color' , ), 1572, (1572, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
]

IAcadDocument_vtables_dispatch_ = 1
IAcadDocument_vtables_ = [
	(( 'Plot' , 'pPlot' , ), 23, (23, (), [ (16393, 10, None, "IID('{DFF0942E-23C4-44B5-B67C-B511B5DD5A66}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ActiveLayer' , 'pActLayer' , ), 24, (24, (), [ (16393, 10, None, "IID('{F3A8989F-5CAE-4E98-A185-E161FCF43127}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ActiveLayer' , 'pActLayer' , ), 24, (24, (), [ (9, 1, None, "IID('{F3A8989F-5CAE-4E98-A185-E161FCF43127}')") , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ActiveLinetype' , 'pActLinetype' , ), 25, (25, (), [ (16393, 10, None, "IID('{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ActiveLinetype' , 'pActLinetype' , ), 25, (25, (), [ (9, 1, None, "IID('{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')") , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDimStyle' , 'pActDimStyle' , ), 26, (26, (), [ (16393, 10, None, "IID('{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDimStyle' , 'pActDimStyle' , ), 26, (26, (), [ (9, 1, None, "IID('{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}')") , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ActiveTextStyle' , 'pActTextStyle' , ), 27, (27, (), [ (16393, 10, None, "IID('{BDF006CF-A063-40B0-912C-AF478B1CE15B}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ActiveTextStyle' , 'pActTextStyle' , ), 27, (27, (), [ (9, 1, None, "IID('{BDF006CF-A063-40B0-912C-AF478B1CE15B}')") , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ActiveUCS' , 'pActUCS' , ), 28, (28, (), [ (16393, 10, None, "IID('{78C244EF-F4CC-43C7-AA5D-91A496215310}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ActiveUCS' , 'pActUCS' , ), 28, (28, (), [ (9, 1, None, "IID('{78C244EF-F4CC-43C7-AA5D-91A496215310}')") , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ActiveViewport' , 'pActView' , ), 29, (29, (), [ (16393, 10, None, "IID('{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ActiveViewport' , 'pActView' , ), 29, (29, (), [ (9, 1, None, "IID('{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')") , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ActivePViewport' , 'pActView' , ), 30, (30, (), [ (16393, 10, None, "IID('{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ActivePViewport' , 'pActView' , ), 30, (30, (), [ (9, 1, None, "IID('{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}')") , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSpace' , 'ActSpace' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSpace' , 'ActSpace' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'SelectionSets' , 'pSelSets' , ), 32, (32, (), [ (16393, 10, None, "IID('{913DBB03-9E39-4CA3-940E-BB7C4B88EF89}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSelectionSet' , 'pSelSet' , ), 33, (33, (), [ (16393, 10, None, "IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'FullName' , ), 34, (34, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 35, (35, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'Path' , ), 36, (36, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSnapMode' , 'fSnapMode' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ObjectSnapMode' , 'fSnapMode' , ), 37, (37, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'bReadOnly' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Saved' , 'bSaved' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'MSpace' , 'Mode' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'MSpace' , 'Mode' , ), 40, (40, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Utility' , 'pUtil' , ), 41, (41, (), [ (16393, 10, None, "IID('{22C8E547-0D27-4793-BB9F-AC58D4F8E794}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Open' , 'FullName' , 'Password' , 'pDocObj' , ), 42, (42, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 1 , 4 , 1 , 520 , (3, 0, None, None) , 0 , )),
	(( 'AuditInfo' , 'FixErr' , ), 43, (43, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Import' , 'FileName' , 'InsertionPoint' , 'ScaleFactor' , 'pObj' , 
			 ), 44, (44, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Export' , 'FileName' , 'Extension' , 'SelectionSet' , ), 45, (45, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (9, 1, None, "IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')") , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'New' , 'TemplateFileName' , 'pDocObj' , ), 46, (46, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Save' , ), 47, (47, (), [ ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'FullFileName' , 'SaveAsType' , 'vSecurityParams' , ), 48, (48, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Wblock' , 'FileName' , 'SelectionSet' , ), 49, (49, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')") , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'PurgeAll' , ), 50, (50, (), [ ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'GetVariable' , 'Name' , 'Value' , ), 51, (51, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'SetVariable' , 'Name' , 'Value' , ), 52, (52, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'LoadShapeFile' , 'FullName' , ), 53, (53, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'Regen' , 'WhichViewports' , ), 54, (54, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'PickfirstSelectionSet' , 'pSelSet' , ), 55, (55, (), [ (16393, 10, None, "IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')") , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pvbActive' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Activate' , ), 57, (57, (), [ ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'SaveChanges' , 'FileName' , ), 58, (58, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 648 , (3, 0, None, None) , 0 , )),
	(( 'WindowState' , 'pWinState' , ), 59, (59, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'WindowState' , 'pWinState' , ), 59, (59, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'pWidth' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'pWidth' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'pHeight' , ), 61, (61, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'pHeight' , ), 61, (61, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'ActiveLayout' , 'pLayout' , ), 62, (62, (), [ (9, 1, None, "IID('{0B119218-2411-46DD-B7B9-17C8C009222C}')") , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'ActiveLayout' , 'pLayout' , ), 62, (62, (), [ (16393, 10, None, "IID('{0B119218-2411-46DD-B7B9-17C8C009222C}')") , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'SendCommand' , 'Command' , ), 63, (63, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'HWND' , 'HWND' , ), 64, (64, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'WindowTitle' , 'Title' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 66, (66, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'Database' , 'pDatabase' , ), 67, (67, (), [ (16393, 10, None, "IID('{A9625062-DC43-4D1C-9FC6-8512123BB91B}')") , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'StartUndoMark' , ), 68, (68, (), [ ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'EndUndoMark' , ), 69, (69, (), [ ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'ActiveMaterial' , 'pActMaterial' , ), 74, (74, (), [ (16393, 10, None, "IID('{5E69D338-33B4-40D3-9D02-ADA45791E720}')") , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'ActiveMaterial' , 'pActMaterial' , ), 74, (74, (), [ (9, 1, None, "IID('{5E69D338-33B4-40D3-9D02-ADA45791E720}')") , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadDocuments_vtables_dispatch_ = 1
IAcadDocuments_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'TemplateName' , 'pDispDoc' , ), 1610743812, (1610743812, (), [ (12, 17, None, None) , 
			 (16393, 10, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Open' , 'Name' , 'ReadOnly' , 'Password' , 'pDispDoc' , 
			 ), 1610743813, (1610743813, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{0EB66A59-8FF4-410B-B697-8813116B2C5F}')") , ], 1 , 1 , 4 , 2 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Close' , ), 1610743814, (1610743814, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAcadDynamicBlockReferenceProperty_vtables_dispatch_ = 1
IAcadDynamicBlockReferenceProperty_vtables_ = [
	(( 'PropertyName' , 'PropertyName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'ReadOnly' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Show' , 'Show' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'Description' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AllowedValues' , 'AllowedValues' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UnitsType' , 'Units' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadEllipse_vtables_dispatch_ = 1
IAcadEllipse_vtables_ = [
	(( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'Center' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'Center' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'EndPoint' , 'EndPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'MajorRadius' , 'MajorRadius' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'MajorRadius' , 'MajorRadius' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'MinorRadius' , 'MinorRadius' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'MinorRadius' , 'MinorRadius' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'RadiusRatio' , 'RadiusRatio' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'RadiusRatio' , 'RadiusRatio' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'StartAngle' , 'StartAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'StartAngle' , 'StartAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'EndAngle' , 'EndAngle' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'EndAngle' , 'EndAngle' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'StartParameter' , 'StartParameter' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 1024 , )),
	(( 'StartParameter' , 'StartParameter' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 1024 , )),
	(( 'EndParameter' , 'EndParameter' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 1024 , )),
	(( 'EndParameter' , 'EndParameter' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 1024 , )),
	(( 'MajorAxis' , 'MajorAxis' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'MajorAxis' , 'MajorAxis' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'MinorAxis' , 'MinorAxis' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 1024 , )),
	(( 'Area' , 'Area' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 15, (15, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
]

IAcadEntity_vtables_dispatch_ = 1
IAcadEntity_vtables_ = [
	(( 'TrueColor' , 'pColor' , ), 1302, (1302, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'TrueColor' , 'pColor' , ), 1302, (1302, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'bVisible' , ), 1284, (1284, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 1024 , )),
	(( 'Visible' , 'bVisible' , ), 1284, (1284, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 1024 , )),
	(( 'ArrayPolar' , 'NumberOfObjects' , 'AngleToFill' , 'CenterPoint' , 'pArrayObjs' , 
			 ), 1285, (1285, (), [ (3, 1, None, None) , (5, 1, None, None) , (12, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ArrayRectangular' , 'NumberOfRows' , 'NumberOfColumns' , 'NumberOfLevels' , 'DistBetweenRows' , 
			 'DistBetweenCols' , 'DistBetweenLevels' , 'pArrayObjs' , ), 1286, (1286, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Highlight' , 'HighlightFlag' , ), 1287, (1287, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'pCopyObj' , ), 1288, (1288, (), [ (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'FromPoint' , 'ToPoint' , ), 1289, (1289, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Rotate' , 'BasePoint' , 'RotationAngle' , ), 1290, (1290, (), [ (12, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Rotate3D' , 'Point1' , 'Point2' , 'RotationAngle' , ), 1291, (1291, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Mirror' , 'Point1' , 'Point2' , 'pMirrorObj' , ), 1292, (1292, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Mirror3D' , 'Point1' , 'Point2' , 'point3' , 'pMirrorObj' , 
			 ), 1293, (1293, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ScaleEntity' , 'BasePoint' , 'ScaleFactor' , ), 1294, (1294, (), [ (12, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'TransformBy' , 'TransformationMatrix' , ), 1295, (1295, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Update' , ), 1296, (1296, (), [ ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'GetBoundingBox' , 'MinPoint' , 'MaxPoint' , ), 1297, (1297, (), [ (16396, 2, None, None) , 
			 (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'IntersectWith' , 'IntersectObject' , 'option' , 'intPoints' , ), 1298, (1298, (), [ 
			 (9, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Hyperlinks' , 'Hyperlinks' , ), 1301, (1301, (), [ (16393, 10, None, "IID('{FE28743E-1DAD-48F5-936B-6924E68AE3BE}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'Material' , ), 1399, (1399, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'Material' , ), 1399, (1399, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'EntityName' , 'EntityName' , ), 1397, (1397, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 1088 , )),
	(( 'EntityType' , 'entType' , ), 1398, (1398, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 1088 , )),
	(( 'color' , 'color' , ), 1280, (1280, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 64 , )),
	(( 'color' , 'color' , ), 1280, (1280, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
]

IAcadExternalReference_vtables_dispatch_ = 1
IAcadExternalReference_vtables_ = [
	(( 'Path' , 'bstrName' , ), 256, (256, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'bstrName' , ), 256, (256, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
]

IAcadExtrudedSurface_vtables_dispatch_ = 1
IAcadExtrudedSurface_vtables_ = [
	(( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'TaperAngle' , 'TaperAngle' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TaperAngle' , 'TaperAngle' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Direction' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadFileDependencies_vtables_dispatch_ = 1
IAcadFileDependencies_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F309A783-F98D-4B85-AE32-BE0470A8A370}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CreateEntry' , 'Feature' , 'FullFileName' , 'AffectsGraphics' , 'noIncrement' , 
			 'Index' , ), 3, (3, (), [ (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
			 (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IndexOf' , 'Feature' , 'FullFileName' , 'Index' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RemoveEntry' , 'Index' , 'forceRemove' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UpdateEntry' , 'Index' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadFileDependency_vtables_dispatch_ = 1
IAcadFileDependency_vtables_ = [
	(( 'FullFileName' , 'FullFileName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'FileName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FoundPath' , 'FoundPath' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FingerprintGuid' , 'FingerprintGuid' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'VersionGuid' , 'VersionGuid' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Feature' , 'Feature' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsModified' , 'IsModified' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AffectsGraphics' , 'AffectsGraphics' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'Index' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TimeStamp' , 'TimeStamp' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FileSize' , 'FileSize' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceCount' , 'refCount' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadGroup_vtables_dispatch_ = 1
IAcadGroup_vtables_ = [
	(( 'Item' , 'Index' , 'ppEntity' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'TrueColor' , ), 15, (15, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Linetype' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeScale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 1024 , )),
	(( 'Highlight' , 'HighlightFlag' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PlotStyleName' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AppendItems' , 'Objects' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'RemoveItems' , 'Objects' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Update' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Material' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'color' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
]

IAcadGroups_vtables_dispatch_ = 1
IAcadGroups_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9C09D413-9CA2-462A-9D29-03CE60738E36}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{9C09D413-9CA2-462A-9D29-03CE60738E36}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadHatch_vtables_dispatch_ = 1
IAcadHatch_vtables_ = [
	(( 'Normal' , 'Normal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'NumberOfLoops' , 'numLoops' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'PatternType' , 'PatternType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'PatternName' , 'bstrName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'PatternAngle' , 'PatternAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'PatternAngle' , 'PatternAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'PatternScale' , 'PatternScale' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'PatternScale' , 'PatternScale' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'PatternSpace' , 'PatternSpace' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'PatternSpace' , 'PatternSpace' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ISOPenWidth' , 'penWidth' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ISOPenWidth' , 'penWidth' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'PatternDouble' , 'bDouble' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'PatternDouble' , 'bDouble' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'Elevation' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'Elevation' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'AssociativeHatch' , 'fAssoc' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'AssociativeHatch' , 'fAssoc' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'HatchStyle' , 'HatchStyle' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'HatchStyle' , 'HatchStyle' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'SetPattern' , 'PatternType' , 'PatternName' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'AppendOuterLoop' , 'ObjectArray' , ), 14, (14, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'AppendInnerLoop' , 'ObjectArray' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'InsertLoopAt' , 'Index' , 'LoopType' , 'ObjectArray' , ), 16, (16, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'GetLoopAt' , 'Index' , 'ObjectArray' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Evaluate' , ), 18, (18, (), [ ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'GradientColor1' , 'pColor' , ), 19, (19, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'GradientColor1' , 'pColor' , ), 19, (19, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'GradientColor2' , 'pColor' , ), 20, (20, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'GradientColor2' , 'pColor' , ), 20, (20, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'GradientAngle' , 'GradientAngle' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'GradientAngle' , 'GradientAngle' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'GradientCentered' , 'fCentered' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'GradientCentered' , 'fCentered' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'GradientName' , 'bstrName' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'GradientName' , 'bstrName' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'HatchObjectType' , 'hatchType' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 1024 , )),
	(( 'HatchObjectType' , 'hatchType' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 1024 , )),
	(( 'Area' , 'Area' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
]

IAcadHelix_vtables_dispatch_ = 1
IAcadHelix_vtables_ = [
	(( 'Position' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'StartPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Constrain' , 'constrainType' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Constrain' , 'constrainType' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Length' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Length' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Turns' , 'Turns' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Turns' , 'Turns' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TurnHeight' , 'Distance' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TurnHeight' , 'Distance' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'BaseRadius' , 'Radius' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'BaseRadius' , 'Radius' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'TopRadius' , 'Radius' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'TopRadius' , 'Radius' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Twist' , 'twistType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Twist' , 'twistType' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'TurnSlope' , 'slopeAngle' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'TotalLength' , 'TotalLength' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadHyperlink_vtables_dispatch_ = 1
IAcadHyperlink_vtables_ = [
	(( 'URL' , 'URLPath' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'URL' , 'URLPath' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'URLDescription' , 'Description' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'URLDescription' , 'Description' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'ApplicationObject' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'URLNamedLocation' , 'Location' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'URLNamedLocation' , 'Location' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadHyperlinks_vtables_dispatch_ = 1
IAcadHyperlinks_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
	(( 'Application' , 'ApplicationObject' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'Description' , 'NamedLocation' , 'pHyperlink' , 
			 ), 3, (3, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{82090F76-F6CB-4414-93E3-7A7EC8286BAC}')") , ], 1 , 1 , 4 , 2 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadIdPair_vtables_dispatch_ = 1
IAcadIdPair_vtables_ = [
	(( 'IsCloned' , 'pVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsOwnerXlated' , 'pVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsPrimary' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'key' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'ApplicationObject' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IAcadLWPolyline_vtables_dispatch_ = 1
IAcadLWPolyline_vtables_ = [
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'AddVertex' , 'Index' , 'vertex' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Explode' , 'pArrayObjs' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'GetBulge' , 'Index' , 'bulge' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'SetBulge' , 'Index' , 'bulge' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'GetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 8, (8, (), [ 
			 (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'SetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 9, (9, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 11, (11, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'Area' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 1024 , )),
	(( 'Closed' , 'fClose' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'fClose' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeGeneration' , 'bLinetypeGen' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeGeneration' , 'bLinetypeGen' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Length' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
]

IAcadLayer_vtables_dispatch_ = 1
IAcadLayer_vtables_ = [
	(( 'color' , 'color' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'color' , 'color' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'TrueColor' , 'pColor' , ), 11, (11, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'TrueColor' , 'pColor' , ), 11, (11, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Freeze' , 'bFreeze' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Freeze' , 'bFreeze' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LayerOn' , 'bOn' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LayerOn' , 'bOn' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Linetype' , 'Linetype' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Linetype' , 'Linetype' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Lock' , 'Block' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Lock' , 'Block' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Plottable' , 'bPlottable' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Plottable' , 'bPlottable' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ViewportDefault' , 'bDefault' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ViewportDefault' , 'bDefault' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PlotStyleName' , 'plotStyle' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PlotStyleName' , 'plotStyle' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Lineweight' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Lineweight' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'Description' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'Description' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Used' , 'bUsed' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'Material' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'Material' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

IAcadLayerStateManager_vtables_dispatch_ = 1
IAcadLayerStateManager_vtables_ = [
	(( 'SetDatabase' , 'iHostDb' , ), 1610743808, (1610743808, (), [ (9, 1, None, "IID('{A9625062-DC43-4D1C-9FC6-8512123BB91B}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Mask' , 'bsName' , 'eMask' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Mask' , 'bsName' , 'eMask' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'bsName' , 'eMask' , ), 1610743811, (1610743811, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Restore' , 'bsName' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'bsName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Rename' , 'bsName' , 'bsNewName' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Import' , 'bsFilename' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Export' , 'bsName' , 'bsFilename' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAcadLayers_vtables_dispatch_ = 1
IAcadLayers_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F3A8989F-5CAE-4E98-A185-E161FCF43127}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pLayer' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{F3A8989F-5CAE-4E98-A185-E161FCF43127}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GenerateUsageData' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadLayout_vtables_dispatch_ = 1
IAcadLayout_vtables_ = [
	(( 'Block' , 'pBlock' , ), 48, (48, (), [ (16393, 10, None, "IID('{165531B8-67A4-46D8-AC99-F8150FA7A412}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'TabOrder' , 'pOrder' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'TabOrder' , 'pOrder' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
]

IAcadLayouts_vtables_dispatch_ = 1
IAcadLayouts_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0B119218-2411-46DD-B7B9-17C8C009222C}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pLayout' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0B119218-2411-46DD-B7B9-17C8C009222C}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadLeader_vtables_dispatch_ = 1
IAcadLeader_vtables_ = [
	(( 'Coordinates' , 'Coordinates' , ), 64, (64, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Coordinates' , ), 64, (64, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 65, (65, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 65, (65, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Evaluate' , ), 66, (66, (), [ ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 67, (67, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 67, (67, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 1024 , )),
	(( 'Annotation' , 'pVal' , ), 68, (68, (), [ (16393, 10, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 1024 , )),
	(( 'Annotation' , 'pVal' , ), 68, (68, (), [ (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 1024 , )),
	(( 'ArrowheadSize' , 'size' , ), 1543, (1543, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 1543, (1543, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'Type' , ), 69, (69, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'Type' , ), 69, (69, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 1550, (1550, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineWeight' , 'weight' , ), 1550, (1550, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 70, (70, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 1024 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 70, (70, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 1024 , )),
]

IAcadLine_vtables_dispatch_ = 1
IAcadLine_vtables_ = [
	(( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'EndPoint' , 'EndPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'EndPoint' , 'EndPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 5, (5, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Delta' , 'Delta' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Length' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Angle' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
]

IAcadLineType_vtables_dispatch_ = 1
IAcadLineType_vtables_ = [
	(( 'Description' , 'bstrDes' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'bstrDes' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadLineTypes_vtables_dispatch_ = 1
IAcadLineTypes_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pLinetype' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'Name' , 'FileName' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadLoftedSurface_vtables_dispatch_ = 1
IAcadLoftedSurface_vtables_ = [
	(( 'NumCrossSections' , 'NumCrossSections' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'NumGuidePaths' , 'NumGuidePaths' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceNormals' , 'surfaceNormal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceNormals' , 'surfaceNormal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'StartDraftAngle' , 'StartDraftAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'StartDraftAngle' , 'StartDraftAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'StartDraftMagnitude' , 'startDraftMag' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'StartDraftMagnitude' , 'startDraftMag' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'EndDraftAngle' , 'EndDraftAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'EndDraftAngle' , 'EndDraftAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'EndDraftMagnitude' , 'endDraftMag' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'EndDraftMagnitude' , 'endDraftMag' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'bClosed' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'bClosed' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
]

IAcadMInsertBlock_vtables_dispatch_ = 1
IAcadMInsertBlock_vtables_ = [
	(( 'Columns' , 'NumColumns' , ), 256, (256, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'NumColumns' , ), 256, (256, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'ColumnSpacing' , 'Spacing' , ), 257, (257, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'ColumnSpacing' , 'Spacing' , ), 257, (257, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'Rows' , 'NumRows' , ), 258, (258, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'Rows' , 'NumRows' , ), 258, (258, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'RowSpacing' , 'Spacing' , ), 259, (259, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'RowSpacing' , 'Spacing' , ), 259, (259, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
]

IAcadMLeader_vtables_dispatch_ = 1
IAcadMLeader_vtables_ = [
	(( 'ScaleFactor' , 'scale' , ), 38, (38, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scale' , ), 38, (38, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'LeaderType' , 'Type' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'LeaderType' , 'Type' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineType' , 'Linetype' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineType' , 'Linetype' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'DogLegged' , 'val' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'DogLegged' , 'val' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'DoglegLength' , 'DoglegLength' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'DoglegLength' , 'DoglegLength' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'ContentBlockName' , 'BlockName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 1024 , )),
	(( 'ContentBlockName' , 'BlockName' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 1024 , )),
	(( 'BlockConnectionType' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'BlockConnectionType' , 'Type' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'TextStyleName' , 'bstrName' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'TextStyleName' , 'bstrName' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'TextJustify' , 'attPoint' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'TextJustify' , 'attPoint' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'TextDirection' , 'drawDir' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'TextDirection' , 'drawDir' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'TextWidth' , 'Width' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'TextWidth' , 'Width' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'TextRotation' , 'rotAngle' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'TextRotation' , 'rotAngle' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'TextLineSpacingFactor' , 'factor' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'TextLineSpacingFactor' , 'factor' , ), 18, (18, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'TextLineSpacingDistance' , 'Value' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'TextLineSpacingDistance' , 'Value' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'TextLineSpacingStyle' , 'style' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'TextLineSpacingStyle' , 'style' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'TextBackgroundFill' , 'bUseBackgroundFill' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'TextBackgroundFill' , 'bUseBackgroundFill' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'TextLeftAttachmentType' , 'Type' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'TextLeftAttachmentType' , 'Type' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'TextRightAttachmentType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'TextRightAttachmentType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'LandingGap' , 'gap' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'LandingGap' , 'gap' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 24, (24, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 1024 , )),
	(( 'ArrowheadBlock' , 'BlockName' , ), 24, (24, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 1024 , )),
	(( 'ContentBlockType' , 'Type' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'ContentBlockType' , 'Type' , ), 25, (25, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'LeaderCount' , 'number' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 1024 , )),
	(( 'AddLeader' , 'leaderIndex' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'RemoveLeader' , 'leaderIndex' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'AddLeaderLine' , 'leaderIndex' , 'pointArray' , 'leaderLineIndex' , ), 29, (29, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'AddLeaderLineEx' , 'pointArray' , 'leaderLineIndex' , ), 30, (30, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'RemoveLeaderLine' , 'leaderLineIndex' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'SetLeaderLineVertices' , 'leaderLineIndex' , 'pointArray' , ), 32, (32, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'GetLeaderLineVertices' , 'leaderLineIndex' , 'pointArray' , ), 33, (33, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'ContentType' , 'Type' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 1024 , )),
	(( 'ContentType' , 'Type' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 1024 , )),
	(( 'GetLeaderIndex' , 'leaderLineIndex' , 'leaderIndex' , ), 35, (35, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'GetLeaderLineIndexes' , 'leaderIndex' , 'leaderLineIndexes' , ), 36, (36, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'GetVertexCount' , 'leaderLineIndex' , 'number' , ), 37, (37, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'TextFrameDisplay' , 'pVal' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'TextFrameDisplay' , 'pVal' , ), 39, (39, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'Name' , ), 40, (40, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'Name' , ), 40, (40, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'GetDoglegDirection' , 'leaderIndex' , 'dirVec' , ), 41, (41, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'SetDoglegDirection' , 'leaderIndex' , 'dirVec' , ), 42, (42, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockAttributeValue' , 'attdefId' , 'Value' , ), 44, (44, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockAttributeValue' , 'attdefId' , 'Value' , ), 45, (45, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
]

IAcadMLeaderStyle_vtables_dispatch_ = 1
IAcadMLeaderStyle_vtables_ = [
	(( 'Name' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'Description' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'Description' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ContentType' , 'Type' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ContentType' , 'Type' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DrawMLeaderOrderType' , 'Type' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DrawMLeaderOrderType' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DrawLeaderOrderType' , 'Type' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DrawLeaderOrderType' , 'Type' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'MaxLeaderSegmentsPoints' , 'number' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MaxLeaderSegmentsPoints' , 'number' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FirstSegmentAngleConstraint' , 'constraint' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FirstSegmentAngleConstraint' , 'constraint' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SecondSegmentAngleConstraint' , 'constraint' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SecondSegmentAngleConstraint' , 'constraint' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineType' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineType' , 'Type' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineColor' , 'color' , ), 11, (11, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineColor' , 'color' , ), 11, (11, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineTypeId' , 'Type' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineTypeId' , 'Type' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineWeight' , 'weight' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLineWeight' , 'weight' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'EnableLanding' , 'enabled' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'EnableLanding' , 'enabled' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'LandingGap' , 'LandingGap' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'LandingGap' , 'LandingGap' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'EnableDogleg' , 'enabled' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'EnableDogleg' , 'enabled' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'DoglegLength' , 'DoglegLength' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'DoglegLength' , 'DoglegLength' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ArrowSymbol' , 'Name' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ArrowSymbol' , 'Name' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ArrowSize' , 'size' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ArrowSize' , 'size' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'Name' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'Name' , ), 20, (20, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'TextLeftAttachmentType' , 'Type' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'TextLeftAttachmentType' , 'Type' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'TextRightAttachmentType' , 'Type' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TextRightAttachmentType' , 'Type' , ), 40, (40, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TextColor' , 'color' , ), 22, (22, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'TextColor' , 'color' , ), 22, (22, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'EnableFrameText' , 'enabled' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'EnableFrameText' , 'enabled' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'AlignSpace' , 'AlignSpace' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'AlignSpace' , 'AlignSpace' , ), 25, (25, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Block' , 'Name' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Block' , 'Name' , ), 26, (26, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'BlockColor' , 'color' , ), 27, (27, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'BlockColor' , 'color' , ), 27, (27, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'EnableBlockScale' , 'enabled' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'EnableBlockScale' , 'enabled' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'BlockScale' , 'ScaleFactor' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'BlockScale' , 'ScaleFactor' , ), 29, (29, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'EnableBlockRotation' , 'enabled' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'EnableBlockRotation' , 'enabled' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'BlockRotation' , 'Rotation' , ), 31, (31, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'BlockRotation' , 'Rotation' , ), 31, (31, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'BlockConnectionType' , 'Type' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'BlockConnectionType' , 'Type' , ), 32, (32, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scale' , ), 33, (33, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scale' , ), 33, (33, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'OverwritePropChanged' , 'changed' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'Annotative' , 'Annotative' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'Annotative' , 'Annotative' , ), 35, (35, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'BreakSize' , 'size' , ), 36, (36, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'BreakSize' , 'size' , ), 36, (36, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'Text' , ), 37, (37, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'Text' , ), 37, (37, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'TextAngleType' , 'Type' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'TextAngleType' , 'Type' , ), 38, (38, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentType' , 'Type' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentType' , 'Type' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadMLine_vtables_dispatch_ = 1
IAcadMLine_vtables_ = [
	(( 'StyleName' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Vertices' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinates' , 'Vertices' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Justification' , 'Justification' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Justification' , 'Justification' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'MLineScale' , 'scale' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'MLineScale' , 'scale' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
]

IAcadMText_vtables_dispatch_ = 1
IAcadMText_vtables_ = [
	(( 'TextString' , 'bstrText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'AttachmentPoint' , 'attPoint' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'AttachmentPoint' , 'attPoint' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'DrawingDirection' , 'drawDir' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'DrawingDirection' , 'drawDir' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 1024 , )),
	(( 'LineSpacingFactor' , 'factor' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'LineSpacingFactor' , 'factor' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'LineSpacingStyle' , 'style' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'LineSpacingStyle' , 'style' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'LineSpacingDistance' , 'Value' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'LineSpacingDistance' , 'Value' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundFill' , 'bUseBackgroundFill' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundFill' , 'bUseBackgroundFill' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'FieldCode' , 'bstrText' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
]

IAcadMaterial_vtables_dispatch_ = 1
IAcadMaterial_vtables_ = [
	(( 'Description' , 'bstrDes' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'bstrDes' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadMaterials_vtables_dispatch_ = 1
IAcadMaterials_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5E69D338-33B4-40D3-9D02-ADA45791E720}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{5E69D338-33B4-40D3-9D02-ADA45791E720}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadMenuBar_vtables_dispatch_ = 1
IAcadMenuBar_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadMenuGroup_vtables_dispatch_ = 1
IAcadMenuGroup_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{38931362-4638-4A2F-8201-E7B2AA52CA37}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'menuType' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MenuFileName' , 'Name' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Menus' , 'pMenus' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{984C0B3E-F861-403A-A0FD-E332A7EC0CF3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Toolbars' , 'pToolbars' , ), 1610743814, (1610743814, (), [ (16393, 10, None, "IID('{1081A53F-2A08-4767-A131-08831AE62035}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Unload' , ), 1610743815, (1610743815, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'MenuFileType' , ), 1610743816, (1610743816, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'MenuFileName' , 'MenuFileType' , ), 1610743817, (1610743817, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadMenuGroups_vtables_dispatch_ = 1
IAcadMenuGroups_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D6261081-12FD-49ED-A359-D990DF71949D}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'MenuFileName' , 'BaseMenu' , 'pMenuGroup' , ), 1610743813, (1610743813, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{D6261081-12FD-49ED-A359-D990DF71949D}')") , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
]

IAcadModelSpace_vtables_dispatch_ = 1
IAcadModelSpace_vtables_ = [
]

IAcadModelSpace2_vtables_dispatch_ = 1
IAcadModelSpace2_vtables_ = [
	(( 'AddMLeader' , 'PointsArray' , 'leaderLineIndex' , 'pMLeader' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (16387, 2, None, None) , (16393, 10, None, "IID('{B125D293-E039-4D19-B975-1C4A8841C5AB}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadObject_vtables_dispatch_ = 1
IAcadObject_vtables_ = [
	(( 'Handle' , 'Handle' , ), 1024, (1024, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 1024 , )),
	(( 'ObjectName' , 'ObjectName' , ), 1025, (1025, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 1024 , )),
	(( 'GetXData' , 'AppName' , 'XDataType' , 'XDataValue' , ), 1026, (1026, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetXData' , 'XDataType' , 'XDataValue' , ), 1027, (1027, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 1028, (1028, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ObjectID' , 'ObjectID' , ), 1029, (1029, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 1024 , )),
	(( 'Application' , 'ApplicationObject' , ), 1030, (1030, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 1024 , )),
	(( 'Database' , 'pDatabase' , ), 1031, (1031, (), [ (16393, 10, None, "IID('{A9625062-DC43-4D1C-9FC6-8512123BB91B}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 1088 , )),
	(( 'HasExtensionDictionary' , 'bHasDictionary' , ), 1032, (1032, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 1024 , )),
	(( 'GetExtensionDictionary' , 'pExtDictionary' , ), 1033, (1033, (), [ (16393, 10, None, "IID('{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OwnerID' , 'OwnerID' , ), 1034, (1034, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 1024 , )),
	(( 'Document' , 'pDocument' , ), 1035, (1035, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 1024 , )),
	(( 'Erase' , ), 1141, (1141, (), [ ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
]

IAcadObjectEvents_vtables_dispatch_ = 0
IAcadObjectEvents_vtables_ = [
	(( 'Modified' , 'pObject' , ), 768, (768, (), [ (9, 1, None, "IID('{EF942C4F-A848-4192-B7C2-94C680C264A1}')") , ], 1 , 1 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
]

IAcadOle_vtables_dispatch_ = 1
IAcadOle_vtables_ = [
	(( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rot' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rot' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'ScaleWidth' , 'swidth' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'ScaleWidth' , 'swidth' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ScaleHeight' , 'sheight' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ScaleHeight' , 'sheight' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'LockAspectRatio' , 'aspect' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'LockAspectRatio' , 'aspect' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'OleItemType' , 'pType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'OleItemType' , 'pType' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'OlePlotQuality' , 'pPQuality' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'OlePlotQuality' , 'pPQuality' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'OleSourceApp' , 'srcApp' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'OleSourceApp' , 'srcApp' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadPViewport_vtables_dispatch_ = 1
IAcadPViewport_vtables_ = [
	(( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'dirVector' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Direction' , 'dirVector' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'GridOn' , 'bGridOn' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 1024 , )),
	(( 'GridOn' , 'bGridOn' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'Height' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ViewportOn' , 'bOn' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ViewportOn' , 'bOn' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Clipped' , 'bClipped' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'DisplayLocked' , 'bLocked' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'DisplayLocked' , 'bLocked' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'StandardScale' , 'scale' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'StandardScale' , 'scale' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'CustomScale' , 'scale' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'CustomScale' , 'scale' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 64 , )),
	(( 'StyleSheet' , 'pName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 64 , )),
	(( 'UCSPerViewport' , 'UCSSaved' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'UCSPerViewport' , 'UCSSaved' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'SnapBasePoint' , 'lowLeft' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 1024 , )),
	(( 'SnapBasePoint' , 'lowLeft' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 1024 , )),
	(( 'SnapOn' , 'bSnapOn' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 1024 , )),
	(( 'SnapOn' , 'bSnapOn' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 1024 , )),
	(( 'SnapRotationAngle' , 'Angle' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 1024 , )),
	(( 'SnapRotationAngle' , 'Angle' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 1024 , )),
	(( 'UCSIconOn' , 'bIconOn' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 1024 , )),
	(( 'UCSIconOn' , 'bIconOn' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 1024 , )),
	(( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 1024 , )),
	(( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 1024 , )),
	(( 'GetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 18, (18, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'SetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 19, (19, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'GetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 20, (20, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'SetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 21, (21, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'Display' , 'bStatus' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'TwistAngle' , 'Angle' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 1024 , )),
	(( 'TwistAngle' , 'Angle' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 1024 , )),
	(( 'LensLength' , 'Length' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 1024 , )),
	(( 'LensLength' , 'Length' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 1024 , )),
	(( 'RemoveHiddenLines' , 'bRemoval' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 64 , )),
	(( 'RemoveHiddenLines' , 'bRemoval' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 64 , )),
	(( 'Target' , 'targetPoint' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 1024 , )),
	(( 'Target' , 'targetPoint' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 1024 , )),
	(( 'ArcSmoothness' , 'arcSmooth' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 1024 , )),
	(( 'ArcSmoothness' , 'arcSmooth' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 1024 , )),
	(( 'VisualStyle' , 'pVisualStyleIndex' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'VisualStyle' , 'pVisualStyleIndex' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'ShadePlot' , 'pShadePlotIndex' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'ShadePlot' , 'pShadePlotIndex' , ), 29, (29, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'ModelView' , 'View' , ), 32, (32, (), [ (16393, 10, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'ModelView' , 'View' , ), 32, (32, (), [ (9, 1, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'SheetView' , 'View' , ), 33, (33, (), [ (16393, 10, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'SheetView' , 'View' , ), 33, (33, (), [ (9, 1, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'LabelBlockId' , 'ObjectID' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'LabelBlockId' , 'ObjectID' , ), 34, (34, (), [ (16387, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'HasSheetView' , 'bSheetView' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'SyncModelView' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
]

IAcadPViewport2_vtables_dispatch_ = 1
IAcadPViewport2_vtables_ = [
	(( 'LayerPropertyOverrides' , 'bOverrides' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
]

IAcadPaperSpace_vtables_dispatch_ = 1
IAcadPaperSpace_vtables_ = [
	(( 'AddPViewport' , 'Center' , 'Width' , 'Height' , 'pPViewport' , 
			 ), 1, (1, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadPaperSpace2_vtables_dispatch_ = 1
IAcadPaperSpace2_vtables_ = [
	(( 'AddMLeader' , 'PointsArray' , 'leaderLineIndex' , 'pMLeader' , ), 2, (2, (), [ 
			 (12, 1, None, None) , (16387, 2, None, None) , (16393, 10, None, "IID('{B125D293-E039-4D19-B975-1C4A8841C5AB}')") , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
]

IAcadPlaneSurface_vtables_dispatch_ = 1
IAcadPlaneSurface_vtables_ = [
]

IAcadPlot_vtables_dispatch_ = 1
IAcadPlot_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'QuietErrorMode' , 'bErrorMode' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'QuietErrorMode' , 'bErrorMode' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfCopies' , 'numCopies' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfCopies' , 'numCopies' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BatchPlotProgress' , 'bProgressStatus' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BatchPlotProgress' , 'bProgressStatus' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DisplayPlotPreview' , 'Preview' , ), 1610743815, (1610743815, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PlotToFile' , 'plotFile' , 'plotConfig' , 'success' , ), 1610743816, (1610743816, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PlotToDevice' , 'plotConfig' , 'success' , ), 1610743817, (1610743817, (), [ (12, 17, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetLayoutsToPlot' , 'layoutList' , ), 1610743818, (1610743818, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'StartBatchMode' , 'entryCount' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadPlotConfiguration_vtables_dispatch_ = 1
IAcadPlotConfiguration_vtables_ = [
	(( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ConfigName' , 'pName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ConfigName' , 'pName' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CanonicalMediaName' , 'pName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CanonicalMediaName' , 'pName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PaperUnits' , 'pPaperUnits' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PaperUnits' , 'pPaperUnits' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PlotViewportBorders' , 'pViewportBorders' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PlotViewportBorders' , 'pViewportBorders' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShowPlotStyles' , 'pStyles' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ShowPlotStyles' , 'pStyles' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PlotRotation' , 'pRotation' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PlotRotation' , 'pRotation' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CenterPlot' , 'pCentered' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'CenterPlot' , 'pCentered' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PlotHidden' , 'pHidden' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PlotHidden' , 'pHidden' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PlotType' , 'pType' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PlotType' , 'pType' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ViewToPlot' , 'pName' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ViewToPlot' , 'pName' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'UseStandardScale' , 'pUseStdScale' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'UseStandardScale' , 'pUseStdScale' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'StandardScale' , 'pStdScale' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'StandardScale' , 'pStdScale' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'GetCustomScale' , 'Numerator' , 'Denominator' , ), 17, (17, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'SetCustomScale' , 'Numerator' , 'Denominator' , ), 18, (18, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ScaleLineweights' , 'pScale' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ScaleLineweights' , 'pScale' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'PlotWithLineweights' , 'pPlot' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'PlotWithLineweights' , 'pPlot' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PlotViewportsFirst' , 'pViewportsFirst' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'PlotViewportsFirst' , 'pViewportsFirst' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pName' , ), 25, (25, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pName' , ), 25, (25, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'GetPaperMargins' , 'LowerLeft' , 'UpperRight' , ), 26, (26, (), [ (16396, 2, None, None) , 
			 (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'GetPaperSize' , 'Width' , 'Height' , ), 28, (28, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'PlotOrigin' , 'pOrigin' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'PlotOrigin' , 'pOrigin' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'GetWindowToPlot' , 'LowerLeft' , 'UpperRight' , ), 31, (31, (), [ (16396, 2, None, None) , 
			 (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'SetWindowToPlot' , 'LowerLeft' , 'UpperRight' , ), 32, (32, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'PlotWithPlotStyles' , 'pStyles' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'PlotWithPlotStyles' , 'pStyles' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'ModelType' , 'pType' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'CopyFrom' , 'pPlotConfig' , ), 35, (35, (), [ (9, 1, None, "IID('{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')") , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'GetCanonicalMediaNames' , 'pNames' , ), 36, (36, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'GetPlotDeviceNames' , 'pNames' , ), 37, (37, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'GetPlotStyleTableNames' , 'pNames' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'RefreshPlotDeviceInfo' , ), 39, (39, (), [ ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'GetLocaleMediaName' , 'Name' , 'pLocalName' , ), 40, (40, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
]

IAcadPlotConfigurations_vtables_dispatch_ = 1
IAcadPlotConfigurations_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'ModelType' , 'pPlotConfig' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}')") , ], 1 , 1 , 4 , 1 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadPoint_vtables_dispatch_ = 1
IAcadPoint_vtables_ = [
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
]

IAcadPolyfaceMesh_vtables_dispatch_ = 1
IAcadPolyfaceMesh_vtables_ = [
	(( 'Coordinates' , 'Vertices' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Vertices' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'NumberOfVertices' , 'NumVertices' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfFaces' , 'NumFaces' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , ), 80, (80, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
]

IAcadPolygonMesh_vtables_dispatch_ = 1
IAcadPolygonMesh_vtables_ = [
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'MClose' , 'bClose' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'MClose' , 'bClose' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'NClose' , 'bClose' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'NClose' , 'bClose' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'MDensity' , 'density' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'MDensity' , 'density' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'NDensity' , 'density' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'NDensity' , 'density' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'MVertexCount' , 'Count' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'NVertexCount' , 'Count' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'AppendVertex' , 'vertex' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Explode' , 'pArrayObjs' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 1024 , )),
]

IAcadPolyline_vtables_dispatch_ = 1
IAcadPolyline_vtables_ = [
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'AppendVertex' , 'vertex' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Explode' , 'pArrayObjs' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'GetBulge' , 'Index' , 'bulge' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'SetBulge' , 'Index' , 'bulge' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'GetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 8, (8, (), [ 
			 (3, 1, None, None) , (16389, 2, None, None) , (16389, 0, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'SetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 9, (9, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 0, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 11, (11, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'fClose' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'fClose' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeGeneration' , 'bLinetypeGen' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeGeneration' , 'bLinetypeGen' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'Area' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 1024 , )),
	(( 'Length' , 'Length' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenu_vtables_dispatch_ = 1
IAcadPopupMenu_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NameNoMnemonic' , 'bstrName' , ), 1610743815, (1610743815, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ShortcutMenu' , 'bFlag' , ), 1610743816, (1610743816, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OnMenuBar' , 'bFlag' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddMenuItem' , 'Index' , 'Label' , 'Macro' , 'pItem' , 
			 ), 1610743818, (1610743818, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AddSubMenu' , 'Index' , 'Label' , 'pMenu' , ), 1610743819, (1610743819, (), [ 
			 (12, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AddSeparator' , 'Index' , 'pItem' , ), 1610743820, (1610743820, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'InsertInMenuBar' , 'Index' , ), 1610743821, (1610743821, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RemoveFromMenuBar' , ), 1610743822, (1610743822, (), [ ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenuItem_vtables_dispatch_ = 1
IAcadPopupMenuItem_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Label' , 'bstrLabel' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Label' , 'bstrLabel' , ), 1610743810, (1610743810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'bFlag' , ), 1610743814, (1610743814, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'bFlag' , ), 1610743814, (1610743814, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Check' , 'bFlag' , ), 1610743816, (1610743816, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Check' , 'bFlag' , ), 1610743816, (1610743816, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'itemType' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SubMenu' , 'pMenu' , ), 1610743819, (1610743819, (), [ (16393, 10, None, "IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Macro' , 'bstrMacro' , ), 1610743820, (1610743820, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Macro' , 'bstrMacro' , ), 1610743820, (1610743820, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'nIndex' , ), 1610743822, (1610743822, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'bstrCaption' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'HelpString' , 'bstrHelp' , ), 1610743824, (1610743824, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'HelpString' , 'bstrHelp' , ), 1610743824, (1610743824, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 1610743826, (1610743826, (), [ ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'EndSubMenuLevel' , 'Level' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'EndSubMenuLevel' , 'Level' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenus_vtables_dispatch_ = 1
IAcadPopupMenus_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{D6261081-12FD-49ED-A359-D990DF71949D}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'MenuName' , 'pMenu' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'InsertMenuInMenuBar' , 'MenuName' , 'Index' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RemoveMenuFromMenuBar' , 'Index' , ), 1610743815, (1610743815, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadPreferences_vtables_dispatch_ = 1
IAcadPreferences_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Files' , 'pObj' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{E988F6D8-E009-4C4B-B20F-937E3349B7F5}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Display' , 'pObj' , ), 1610743810, (1610743810, (), [ (16393, 10, None, "IID('{470F310B-CA4B-4664-B8BA-2A56745331C3}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OpenSave' , 'pObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{DA7E4927-7A26-4409-A515-F4F9E67EB0C3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Output' , 'pObj' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{E985D85D-2438-4979-8BB3-0CF1C0806140}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'System' , 'pObj' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{42370369-A258-4EAD-96C6-F78702E57374}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'User' , 'pObj' , ), 1610743814, (1610743814, (), [ (16393, 10, None, "IID('{4149C4B5-CA42-4ED0-B8CB-EBBE87F83912}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Drafting' , 'pObj' , ), 1610743815, (1610743815, (), [ (16393, 10, None, "IID('{1591419F-43C2-4F66-BC6F-C0FF0EFFF074}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Selection' , 'pObj' , ), 1610743816, (1610743816, (), [ (16393, 10, None, "IID('{129B870F-5FEE-4EF2-9BE6-30BAD4B0CD1F}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Profiles' , 'pObj' , ), 1610743817, (1610743817, (), [ (16393, 10, None, "IID('{EB3A84E0-1069-4B35-8564-62441E5BEDC6}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesDisplay_vtables_dispatch_ = 1
IAcadPreferencesDisplay_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'LayoutDisplayMargins' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LayoutDisplayMargins' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LayoutDisplayPaper' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LayoutDisplayPaper' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayoutDisplayPaperShadow' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LayoutDisplayPaperShadow' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LayoutShowPlotSetup' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LayoutShowPlotSetup' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LayoutCreateViewport' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LayoutCreateViewport' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DisplayScrollBars' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DisplayScrollBars' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DisplayScreenMenu' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DisplayScreenMenu' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CursorSize' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CursorSize' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DockedVisibleLines' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DockedVisibleLines' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ShowRasterImage' , 'Path' , ), 1610743827, (1610743827, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ShowRasterImage' , 'Path' , ), 1610743827, (1610743827, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GraphicsWinModelBackgrndColor' , 'color' , ), 1610743829, (1610743829, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GraphicsWinModelBackgrndColor' , 'color' , ), 1610743829, (1610743829, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ModelCrosshairColor' , 'crossHairColor' , ), 1610743831, (1610743831, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ModelCrosshairColor' , 'crossHairColor' , ), 1610743831, (1610743831, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GraphicsWinLayoutBackgrndColor' , 'color' , ), 1610743833, (1610743833, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GraphicsWinLayoutBackgrndColor' , 'color' , ), 1610743833, (1610743833, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'TextWinBackgrndColor' , 'Path' , ), 1610743835, (1610743835, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'TextWinBackgrndColor' , 'Path' , ), 1610743835, (1610743835, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'TextWinTextColor' , 'Path' , ), 1610743837, (1610743837, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'TextWinTextColor' , 'Path' , ), 1610743837, (1610743837, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LayoutCrosshairColor' , 'crossHairColor' , ), 1610743839, (1610743839, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'LayoutCrosshairColor' , 'crossHairColor' , ), 1610743839, (1610743839, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AutoTrackingVecColor' , 'AutoTrackingVecColor' , ), 1610743841, (1610743841, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AutoTrackingVecColor' , 'AutoTrackingVecColor' , ), 1610743841, (1610743841, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'TextFont' , 'Path' , ), 1610743843, (1610743843, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'TextFont' , 'Path' , ), 1610743843, (1610743843, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'TextFontStyle' , 'Path' , ), 1610743845, (1610743845, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'TextFontStyle' , 'Path' , ), 1610743845, (1610743845, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'TextFontSize' , 'Path' , ), 1610743847, (1610743847, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TextFontSize' , 'Path' , ), 1610743847, (1610743847, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'HistoryLines' , 'Path' , ), 1610743849, (1610743849, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'HistoryLines' , 'Path' , ), 1610743849, (1610743849, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'MaxAutoCADWindow' , 'Path' , ), 1610743851, (1610743851, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'MaxAutoCADWindow' , 'Path' , ), 1610743851, (1610743851, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'DisplayLayoutTabs' , 'Path' , ), 1610743853, (1610743853, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'DisplayLayoutTabs' , 'Path' , ), 1610743853, (1610743853, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ImageFrameHighlight' , 'Path' , ), 1610743855, (1610743855, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ImageFrameHighlight' , 'Path' , ), 1610743855, (1610743855, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'TrueColorImages' , 'Path' , ), 1610743857, (1610743857, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'TrueColorImages' , 'Path' , ), 1610743857, (1610743857, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'XRefFadeIntensity' , 'Path' , ), 1610743859, (1610743859, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'XRefFadeIntensity' , 'Path' , ), 1610743859, (1610743859, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesDrafting_vtables_dispatch_ = 1
IAcadPreferencesDrafting_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMarker' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMarker' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMagnet' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMagnet' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapTooltip' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapTooltip' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapAperture' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapAperture' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapApertureSize' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapApertureSize' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMarkerColor' , 'Path' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMarkerColor' , 'Path' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMarkerSize' , 'Path' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AutoSnapMarkerSize' , 'Path' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PolarTrackingVector' , 'Path' , ), 1610743823, (1610743823, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PolarTrackingVector' , 'Path' , ), 1610743823, (1610743823, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FullScreenTrackingVector' , 'Path' , ), 1610743825, (1610743825, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FullScreenTrackingVector' , 'Path' , ), 1610743825, (1610743825, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AutoTrackTooltip' , 'Path' , ), 1610743827, (1610743827, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AutoTrackTooltip' , 'Path' , ), 1610743827, (1610743827, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AlignmentPointAcquisition' , 'Path' , ), 1610743829, (1610743829, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AlignmentPointAcquisition' , 'Path' , ), 1610743829, (1610743829, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesFiles_vtables_dispatch_ = 1
IAcadPreferencesFiles_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SupportPath' , 'orient' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SupportPath' , 'orient' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DriversPath' , 'Path' , ), 1610743811, (1610743811, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DriversPath' , 'Path' , ), 1610743811, (1610743811, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MenuFile' , 'Path' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MenuFile' , 'Path' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'EnterpriseMenuFile' , 'Path' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'EnterpriseMenuFile' , 'Path' , ), 1610743815, (1610743815, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CustomIconPath' , 'Path' , ), 1610743817, (1610743817, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CustomIconPath' , 'Path' , ), 1610743817, (1610743817, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'HelpFilePath' , 'Path' , ), 1610743819, (1610743819, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'HelpFilePath' , 'Path' , ), 1610743819, (1610743819, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DefaultInternetURL' , 'Path' , ), 1610743821, (1610743821, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DefaultInternetURL' , 'Path' , ), 1610743821, (1610743821, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ConfigFile' , 'ConfigFile' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'LicenseServer' , 'Path' , ), 1610743824, (1610743824, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'TextEditor' , 'Path' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TextEditor' , 'Path' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'MainDictionary' , 'Path' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'MainDictionary' , 'Path' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'CustomDictionary' , 'Path' , ), 1610743829, (1610743829, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CustomDictionary' , 'Path' , ), 1610743829, (1610743829, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AltFontFile' , 'fontFile' , ), 1610743831, (1610743831, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AltFontFile' , 'fontFile' , ), 1610743831, (1610743831, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'FontFileMap' , 'Path' , ), 1610743833, (1610743833, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'FontFileMap' , 'Path' , ), 1610743833, (1610743833, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PrintFile' , 'Path' , ), 1610743835, (1610743835, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PrintFile' , 'Path' , ), 1610743835, (1610743835, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PrintSpoolExecutable' , 'Path' , ), 1610743837, (1610743837, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PrintSpoolExecutable' , 'Path' , ), 1610743837, (1610743837, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PostScriptPrologFile' , 'Path' , ), 1610743839, (1610743839, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PostScriptPrologFile' , 'Path' , ), 1610743839, (1610743839, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PrintSpoolerPath' , 'Path' , ), 1610743841, (1610743841, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PrintSpoolerPath' , 'Path' , ), 1610743841, (1610743841, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AutoSavePath' , 'AutoSavePath' , ), 1610743843, (1610743843, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AutoSavePath' , 'AutoSavePath' , ), 1610743843, (1610743843, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'TemplateDwgPath' , 'Path' , ), 1610743845, (1610743845, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'TemplateDwgPath' , 'Path' , ), 1610743845, (1610743845, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'LogFilePath' , 'Path' , ), 1610743847, (1610743847, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'LogFilePath' , 'Path' , ), 1610743847, (1610743847, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TempFilePath' , 'Path' , ), 1610743849, (1610743849, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'TempFilePath' , 'Path' , ), 1610743849, (1610743849, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'TempXrefPath' , 'Path' , ), 1610743851, (1610743851, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'TempXrefPath' , 'Path' , ), 1610743851, (1610743851, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'TextureMapPath' , 'Path' , ), 1610743853, (1610743853, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'TextureMapPath' , 'Path' , ), 1610743853, (1610743853, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'AltTabletMenuFile' , 'MenuFile' , ), 1610743855, (1610743855, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'AltTabletMenuFile' , 'MenuFile' , ), 1610743855, (1610743855, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'SetProjectFilePath' , 'ProjectName' , 'ProjectFilePath' , ), 1610743857, (1610743857, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'GetProjectFilePath' , 'ProjectName' , 'Path' , ), 1610743858, (1610743858, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'PrinterConfigPath' , 'Path' , ), 1610743859, (1610743859, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'PrinterConfigPath' , 'Path' , ), 1610743859, (1610743859, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'PrinterDescPath' , 'Path' , ), 1610743861, (1610743861, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'PrinterDescPath' , 'Path' , ), 1610743861, (1610743861, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'PrinterStyleSheetPath' , 'Path' , ), 1610743863, (1610743863, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'PrinterStyleSheetPath' , 'Path' , ), 1610743863, (1610743863, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'WorkspacePath' , 'Path' , ), 1610743865, (1610743865, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'WorkspacePath' , 'Path' , ), 1610743865, (1610743865, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ObjectARXPath' , 'Path' , ), 1610743867, (1610743867, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 64 , )),
	(( 'ObjectARXPath' , 'Path' , ), 1610743867, (1610743867, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 64 , )),
	(( 'ColorBookPath' , 'Path' , ), 1610743869, (1610743869, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ColorBookPath' , 'Path' , ), 1610743869, (1610743869, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ToolPalettePath' , 'Path' , ), 1610743871, (1610743871, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ToolPalettePath' , 'Path' , ), 1610743871, (1610743871, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'QNewTemplateFile' , 'templateFile' , ), 1610743873, (1610743873, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'QNewTemplateFile' , 'templateFile' , ), 1610743873, (1610743873, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'PlotLogFilePath' , 'templateFile' , ), 1610743875, (1610743875, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'PlotLogFilePath' , 'templateFile' , ), 1610743875, (1610743875, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'PageSetupOverridesTemplateFile' , 'templateFile' , ), 1610743877, (1610743877, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'PageSetupOverridesTemplateFile' , 'templateFile' , ), 1610743877, (1610743877, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesOpenSave_vtables_dispatch_ = 1
IAcadPreferencesOpenSave_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SavePreviewThumbnail' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SavePreviewThumbnail' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IncrementalSavePercent' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementalSavePercent' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AutoSaveInterval' , 'Path' , ), 1610743813, (1610743813, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AutoSaveInterval' , 'Path' , ), 1610743813, (1610743813, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CreateBackup' , 'CreateBackup' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CreateBackup' , 'CreateBackup' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FullCRCValidation' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FullCRCValidation' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'LogFileOn' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'LogFileOn' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'TempFileExtension' , 'Path' , ), 1610743821, (1610743821, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'TempFileExtension' , 'Path' , ), 1610743821, (1610743821, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'XrefDemandLoad' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'XrefDemandLoad' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DemandLoadARXApp' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DemandLoadARXApp' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ProxyImage' , 'Path' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ProxyImage' , 'Path' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ShowProxyDialogBox' , 'Path' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShowProxyDialogBox' , 'Path' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AutoAudit' , 'bAudit' , ), 1610743831, (1610743831, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AutoAudit' , 'bAudit' , ), 1610743831, (1610743831, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SaveAsType' , 'Path' , ), 1610743833, (1610743833, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SaveAsType' , 'Path' , ), 1610743833, (1610743833, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'MRUNumber' , 'Path' , ), 1610743835, (1610743835, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesOutput_vtables_dispatch_ = 1
IAcadPreferencesOutput_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DefaultOutputDevice' , 'Path' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DefaultOutputDevice' , 'Path' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PrinterSpoolAlert' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PrinterSpoolAlert' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PrinterPaperSizeAlert' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PrinterPaperSizeAlert' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PlotLegacy' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PlotLegacy' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OLEQuality' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OLEQuality' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UseLastPlotSettings' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'UseLastPlotSettings' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'PlotPolicy' , 'Path' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PlotPolicy' , 'Path' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotStyleTable' , 'Path' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotStyleTable' , 'Path' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotStyleForObjects' , 'Path' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotStyleForObjects' , 'Path' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotStyleForLayer' , 'Path' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotStyleForLayer' , 'Path' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ContinuousPlotLog' , 'Path' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ContinuousPlotLog' , 'Path' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AutomaticPlotLog' , 'Path' , ), 1610743831, (1610743831, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AutomaticPlotLog' , 'Path' , ), 1610743831, (1610743831, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotToFilePath' , 'Path' , ), 1610743833, (1610743833, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPlotToFilePath' , 'Path' , ), 1610743833, (1610743833, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesProfiles_vtables_dispatch_ = 1
IAcadPreferencesProfiles_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ActiveProfile' , 'Path' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ActiveProfile' , 'Path' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ImportProfile' , 'ProfileName' , 'RegFile' , 'IncludePathInfo' , ), 1610743811, (1610743811, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ExportProfile' , 'ProfileName' , 'RegFile' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DeleteProfile' , 'ProfileName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ResetProfile' , 'Profile' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RenameProfile' , 'origProfileName' , 'newProfileName' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CopyProfile' , 'oldProfileName' , 'newProfileName' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetAllProfileNames' , 'pNames' , ), 1610743817, (1610743817, (), [ (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesSelection_vtables_dispatch_ = 1
IAcadPreferencesSelection_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PickFirst' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PickFirst' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PickAdd' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PickAdd' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PickDrag' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PickDrag' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PickAuto' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PickAuto' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PickBoxSize' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PickBoxSize' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DisplayGrips' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DisplayGrips' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DisplayGripsWithinBlocks' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DisplayGripsWithinBlocks' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GripColorSelected' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GripColorSelected' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GripColorUnselected' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GripColorUnselected' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GripSize' , 'Path' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GripSize' , 'Path' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PickGroup' , 'pick' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PickGroup' , 'pick' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesSystem_vtables_dispatch_ = 1
IAcadPreferencesSystem_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SingleDocumentMode' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SingleDocumentMode' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DisplayOLEScale' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DisplayOLEScale' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'StoreSQLIndex' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StoreSQLIndex' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TablesReadOnly' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TablesReadOnly' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'EnableStartupDialog' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'EnableStartupDialog' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'BeepOnError' , 'BeepOnError' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'BeepOnError' , 'BeepOnError' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ShowWarningMessages' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ShowWarningMessages' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LoadAcadLspInAllDocuments' , 'pALID' , ), 1610743823, (1610743823, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'LoadAcadLspInAllDocuments' , 'pALID' , ), 1610743823, (1610743823, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesUser_vtables_dispatch_ = 1
IAcadPreferencesUser_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'KeyboardAccelerator' , 'Path' , ), 1610743809, (1610743809, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'KeyboardAccelerator' , 'Path' , ), 1610743809, (1610743809, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'KeyboardPriority' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'KeyboardPriority' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HyperlinkDisplayCursor' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'HyperlinkDisplayCursor' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'HyperlinkDisplayTooltip' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'HyperlinkDisplayTooltip' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ADCInsertUnitsDefaultSource' , 'pIU' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ADCInsertUnitsDefaultSource' , 'pIU' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ADCInsertUnitsDefaultTarget' , 'pSUunits' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ADCInsertUnitsDefaultTarget' , 'pSUunits' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ShortCutMenuDisplay' , 'pSCM' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ShortCutMenuDisplay' , 'pSCM' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SCMDefaultMode' , 'pSCM' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SCMDefaultMode' , 'pSCM' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SCMEditMode' , 'pSCM' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SCMEditMode' , 'pSCM' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SCMCommandMode' , 'pSCM' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SCMCommandMode' , 'pSCM' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SCMTimeMode' , 'time' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SCMTimeMode' , 'time' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SCMTimeValue' , 'time' , ), 1610743831, (1610743831, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SCMTimeValue' , 'time' , ), 1610743831, (1610743831, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IAcadRasterImage_vtables_dispatch_ = 1
IAcadRasterImage_vtables_ = [
	(( 'Brightness' , 'Brightness' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Brightness' , 'Brightness' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Contrast' , 'Contrast' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Contrast' , 'Contrast' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Fade' , 'Fade' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Fade' , 'Fade' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ImageWidth' , 'Width' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ImageWidth' , 'Width' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ImageHeight' , 'Height' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ImageHeight' , 'Height' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ImageFile' , 'imageFileName' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'ImageFile' , 'imageFileName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'ImageVisibility' , 'fVisible' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'ImageVisibility' , 'fVisible' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ClippingEnabled' , 'kClip' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ClippingEnabled' , 'kClip' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'bTransp' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'bTransp' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'ClipBoundary' , 'boundry' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'pixelHeight' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 1024 , )),
	(( 'Width' , 'pixelWidth' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 1024 , )),
	(( 'ShowRotation' , 'bShow' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 1024 , )),
	(( 'ShowRotation' , 'bShow' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 1024 , )),
	(( 'ScaleFactor' , 'ScaleFactor' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'ScaleFactor' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
]

IAcadRay_vtables_dispatch_ = 1
IAcadRay_vtables_ = [
	(( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
]

IAcadRegion_vtables_dispatch_ = 1
IAcadRegion_vtables_ = [
	(( 'Area' , 'Area' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Centroid' , 'Centroid' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'MomentOfInertia' , 'momentInertia' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'Perimeter' , 'Perimeter' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'PrincipalDirections' , 'prinDir' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'PrincipalMoments' , 'prinMoments' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 1024 , )),
	(( 'ProductOfInertia' , 'prodInertia' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 1024 , )),
	(( 'RadiiOfGyration' , 'radiiGyration' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 1024 , )),
	(( 'Boolean' , 'Operation' , 'Object' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Explode' , 'pArrayObjs' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
]

IAcadRegisteredApplication_vtables_dispatch_ = 1
IAcadRegisteredApplication_vtables_ = [
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcadRegisteredApplications_vtables_dispatch_ = 1
IAcadRegisteredApplications_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadRevolvedSurface_vtables_dispatch_ = 1
IAcadRevolvedSurface_vtables_ = [
	(( 'RevolutionAngle' , 'revAngle' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'RevolutionAngle' , 'revAngle' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'AxisPosition' , 'AxisPosition' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'AxisPosition' , 'AxisPosition' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'AxisDirection' , 'AxisDirection' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadSection_vtables_dispatch_ = 1
IAcadSection_vtables_ = [
	(( 'Name' , 'pbstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pbstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ViewingDirection' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ViewingDirection' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'VerticalDirection' , 'pVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'VerticalDirection' , 'pVal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'pVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'LiveSectionEnabled' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'LiveSectionEnabled' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'IndicatorTransparency' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'IndicatorTransparency' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'IndicatorFillColor' , 'pColor' , ), 8, (8, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'IndicatorFillColor' , 'pColor' , ), 8, (8, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'pVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'pVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'TopHeight' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'TopHeight' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'BottomHeight' , 'pVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'BottomHeight' , 'pVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'NumVertices' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'Vertices' , 'pVal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'Vertices' , 'pVal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'AddVertex' , 'nIndex' , 'val' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'RemoveVertex' , 'nIndex' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'HitTest' , 'varPtHit' , 'pHit' , 'pSegmentIndex' , 'pPtOnSegment' , 
			 'pSubItem' , ), 17, (17, (), [ (12, 1, None, None) , (16395, 2, None, None) , (16387, 2, None, None) , 
			 (16396, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'CreateJog' , 'varPt' , ), 18, (18, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'Settings' , 'pUnk' , ), 19, (19, (), [ (16393, 10, None, "IID('{BB124B3C-3174-4CB8-8157-E5EFD03347AD}')") , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'GenerateSectionGeometry' , 'pEntity' , 'pIntersectionBoundaryObjs' , 'pIntersectionFillObjs' , 'pBackgroudnObjs' , 
			 'pForegroudObjs' , 'pCurveTangencyObjs' , ), 20, (20, (), [ (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
]

IAcadSectionManager_vtables_dispatch_ = 1
IAcadSectionManager_vtables_ = [
	(( 'Item' , 'Index' , 'pSection' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4EE05AF2-D6B9-4D79-9734-C175AC445099}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetLiveSection' , 'pSection' , ), 2, (2, (), [ (16393, 10, None, "IID('{4EE05AF2-D6B9-4D79-9734-C175AC445099}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetUniqueSectionName' , 'pBaseName' , 'ppUniqueName' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadSectionSettings_vtables_dispatch_ = 1
IAcadSectionSettings_vtables_ = [
	(( 'CurrentSectionType' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CurrentSectionType' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetSectionTypeSettings' , 'secType' , 'pUnk' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{62E19FBE-3C3D-4377-9E2F-02F84B11980D}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadSectionTypeSettings_vtables_dispatch_ = 1
IAcadSectionTypeSettings_vtables_ = [
	(( 'GenerationOptions' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GenerationOptions' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SourceObjects' , 'pVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SourceObjects' , 'pVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DestinationBlock' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DestinationBlock' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DestinationFile' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DestinationFile' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryColor' , 'pColor' , ), 51, (51, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryColor' , 'pColor' , ), 51, (51, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLayer' , 'Layer' , ), 52, (52, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLayer' , 'Layer' , ), 52, (52, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLinetype' , 'Linetype' , ), 53, (53, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLinetype' , 'Linetype' , ), 53, (53, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLinetypeScale' , 'ltScale' , ), 54, (54, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLinetypeScale' , 'ltScale' , ), 54, (54, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryPlotStyleName' , 'plotStyle' , ), 55, (55, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryPlotStyleName' , 'plotStyle' , ), 55, (55, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLineweight' , 'Lineweight' , ), 56, (56, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryLineweight' , 'Lineweight' , ), 56, (56, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryDivisionLines' , 'pVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryDivisionLines' , 'pVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillVisible' , 'pVal' , ), 71, (71, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillVisible' , 'pVal' , ), 71, (71, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchPatternType' , 'pVal' , ), 72, (72, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchPatternType' , 'pVal' , ), 72, (72, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchPatternName' , 'pVal' , ), 73, (73, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchPatternName' , 'pVal' , ), 73, (73, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchAngle' , 'pVal' , ), 74, (74, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchAngle' , 'pVal' , ), 74, (74, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchScale' , 'pVal' , ), 75, (75, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchScale' , 'pVal' , ), 75, (75, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchSpacing' , 'pVal' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillHatchSpacing' , 'pVal' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillColor' , 'pColor' , ), 77, (77, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillColor' , 'pColor' , ), 77, (77, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLayer' , 'Layer' , ), 78, (78, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLayer' , 'Layer' , ), 78, (78, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLinetype' , 'Linetype' , ), 79, (79, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLinetype' , 'Linetype' , ), 79, (79, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLinetypeScale' , 'ltScale' , ), 80, (80, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLinetypeScale' , 'ltScale' , ), 80, (80, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillPlotStyleName' , 'plotStyle' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillPlotStyleName' , 'plotStyle' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLineweight' , 'Lineweight' , ), 82, (82, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillLineweight' , 'Lineweight' , ), 82, (82, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillFaceTransparency' , 'pVal' , ), 83, (83, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionFillFaceTransparency' , 'pVal' , ), 83, (83, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesVisible' , 'pVal' , ), 91, (91, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesVisible' , 'pVal' , ), 91, (91, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesHiddenLine' , 'pVal' , ), 92, (92, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesHiddenLine' , 'pVal' , ), 92, (92, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesColor' , 'pColor' , ), 93, (93, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesColor' , 'pColor' , ), 93, (93, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLayer' , 'Layer' , ), 94, (94, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLayer' , 'Layer' , ), 94, (94, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLinetype' , 'Linetype' , ), 95, (95, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLinetype' , 'Linetype' , ), 95, (95, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLinetypeScale' , 'ltScale' , ), 96, (96, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLinetypeScale' , 'ltScale' , ), 96, (96, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesPlotStyleName' , 'plotStyle' , ), 97, (97, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesPlotStyleName' , 'plotStyle' , ), 97, (97, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLineweight' , 'Lineweight' , ), 98, (98, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'BackgroundLinesLineweight' , 'Lineweight' , ), 98, (98, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesVisible' , 'pVal' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesVisible' , 'pVal' , ), 111, (111, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesHiddenLine' , 'pVal' , ), 112, (112, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesHiddenLine' , 'pVal' , ), 112, (112, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesColor' , 'pColor' , ), 113, (113, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesColor' , 'pColor' , ), 113, (113, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLayer' , 'Layer' , ), 114, (114, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLayer' , 'Layer' , ), 114, (114, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLinetype' , 'Linetype' , ), 115, (115, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLinetype' , 'Linetype' , ), 115, (115, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLinetypeScale' , 'ltScale' , ), 116, (116, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLinetypeScale' , 'ltScale' , ), 116, (116, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesPlotStyleName' , 'plotStyle' , ), 117, (117, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesPlotStyleName' , 'plotStyle' , ), 117, (117, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLineweight' , 'Lineweight' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesLineweight' , 'Lineweight' , ), 118, (118, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesFaceTransparency' , 'pVal' , ), 119, (119, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesFaceTransparency' , 'pVal' , ), 119, (119, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesEdgeTransparency' , 'pVal' , ), 120, (120, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'ForegroundLinesEdgeTransparency' , 'pVal' , ), 120, (120, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesVisible' , 'pVal' , ), 131, (131, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesVisible' , 'pVal' , ), 131, (131, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesColor' , 'pColor' , ), 132, (132, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesColor' , 'pColor' , ), 132, (132, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLayer' , 'Layer' , ), 133, (133, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLayer' , 'Layer' , ), 133, (133, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLinetype' , 'Linetype' , ), 134, (134, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLinetype' , 'Linetype' , ), 134, (134, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLinetypeScale' , 'ltScale' , ), 135, (135, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLinetypeScale' , 'ltScale' , ), 135, (135, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesPlotStyleName' , 'plotStyle' , ), 136, (136, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesPlotStyleName' , 'plotStyle' , ), 136, (136, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLineweight' , 'Lineweight' , ), 137, (137, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'CurveTangencyLinesLineweight' , 'Lineweight' , ), 137, (137, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
]

IAcadSectionTypeSettings2_vtables_dispatch_ = 1
IAcadSectionTypeSettings2_vtables_ = [
	(( 'IntersectionBoundaryVisible' , 'pVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'IntersectionBoundaryVisible' , 'pVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
]

IAcadSecurityParams_vtables_dispatch_ = 1
IAcadSecurityParams_vtables_ = [
	(( 'Action' , 'pOperations' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Action' , 'pOperations' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Password' , 'pSecret' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Password' , 'pSecret' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ProviderType' , 'pProvType' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ProviderType' , 'pProvType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ProviderName' , 'pProvName' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ProviderName' , 'pProvName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Algorithm' , 'pAlgId' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Algorithm' , 'pAlgId' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'KeyLength' , 'pKeyLen' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'KeyLength' , 'pKeyLen' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Subject' , 'pCertSubject' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Subject' , 'pCertSubject' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Issuer' , 'pCertIssuer' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Issuer' , 'pCertIssuer' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SerialNumber' , 'pSerialNum' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SerialNumber' , 'pSerialNum' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pText' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pText' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TimeServer' , 'pTimeServerName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'TimeServer' , 'pTimeServerName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadSelectionSet_vtables_dispatch_ = 1
IAcadSelectionSet_vtables_ = [
	(( 'Item' , 'Index' , 'pEntity' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Highlight' , 'bFlag' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Erase' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Update' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 6, (6, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddItems' , 'pSelSet' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RemoveItems' , 'Objects' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Select' , 'Mode' , 'Point1' , 'Point2' , 'FilterType' , 
			 'FilterData' , ), 10, (10, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 4 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SelectAtPoint' , 'Point' , 'FilterType' , 'FilterData' , ), 11, (11, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SelectByPolygon' , 'Mode' , 'PointsList' , 'FilterType' , 'FilterData' , 
			 ), 12, (12, (), [ (3, 1, None, None) , (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SelectOnScreen' , 'FilterType' , 'FilterData' , ), 13, (13, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadSelectionSets_vtables_dispatch_ = 1
IAcadSelectionSets_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pSet' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadShadowDisplay_vtables_dispatch_ = 0
IAcadShadowDisplay_vtables_ = [
	(( 'ShadowDisplay' , 'ShadowDisplay' , ), 1610678272, (1610678272, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
	(( 'ShadowDisplay' , 'ShadowDisplay' , ), 1610678272, (1610678272, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'EnableShadowDisplay' , 'ShadowDisplay' , ), 1610678274, (1610678274, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
]

IAcadShape_vtables_dispatch_ = 1
IAcadShape_vtables_ = [
	(( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
]

IAcadSolid_vtables_dispatch_ = 1
IAcadSolid_vtables_ = [
	(( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 1024 , )),
]

IAcadSortentsTable_vtables_dispatch_ = 1
IAcadSortentsTable_vtables_ = [
	(( 'MoveToBottom' , 'Objects' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'MoveToTop' , 'Objects' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MoveBelow' , 'Objects' , 'Target' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'MoveAbove' , 'Objects' , 'Target' , ), 4, (4, (), [ (12, 1, None, None) , 
			 (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SwapOrder' , 'Object1' , 'Object2' , ), 5, (5, (), [ (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , 
			 (9, 1, None, "IID('{E460D811-DFF0-4FCD-9D75-B440FA38263B}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Block' , 'pBlock' , ), 6, (6, (), [ (16393, 10, None, "IID('{165531B8-67A4-46D8-AC99-F8150FA7A412}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetFullDrawOrder' , 'Objects' , 'honorSortentsSysvar' , ), 7, (7, (), [ (16396, 2, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GetRelativeDrawOrder' , 'Objects' , 'honorSortentsSysvar' , ), 8, (8, (), [ (16396, 2, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SetRelativeDrawOrder' , 'Objects' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadSpline_vtables_dispatch_ = 1
IAcadSpline_vtables_ = [
	(( 'NumberOfControlPoints' , 'numCtrlPoints' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ControlPoints' , 'controlPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ControlPoints' , 'controlPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfFitPoints' , 'numFitPoints' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'FitPoints' , 'fitPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'FitPoints' , 'fitPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Degree' , 'Degree' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'fClose' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'IsPlanar' , 'fPlanar' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'IsRational' , 'fRational' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 1024 , )),
	(( 'IsPeriodic' , 'fPeriodic' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 1024 , )),
	(( 'StartTangent' , 'StartTangent' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'StartTangent' , 'StartTangent' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'EndTangent' , 'EndTangent' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'EndTangent' , 'EndTangent' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'FitTolerance' , 'fitTol' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'FitTolerance' , 'fitTol' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'Area' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'SetControlPoint' , 'Index' , 'controlPoint' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'GetControlPoint' , 'Index' , 'controlPoint' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'SetFitPoint' , 'Index' , 'fitPoint' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'GetFitPoint' , 'Index' , 'fitPoint' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'SetWeight' , 'Index' , 'weight' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'GetWeight' , 'Index' , 'weight' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'AddFitPoint' , 'Index' , 'fitPoint' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'DeleteFitPoint' , 'Index' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'ElevateOrder' , 'Order' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 23, (23, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'PurgeFitData' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'Reverse' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'Knots' , 'KnotValues' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 1024 , )),
	(( 'Knots' , 'KnotValues' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 1024 , )),
	(( 'Weights' , 'WeightValues' , ), 27, (27, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 1024 , )),
	(( 'Weights' , 'WeightValues' , ), 27, (27, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 1024 , )),
]

IAcadState_vtables_dispatch_ = 1
IAcadState_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsQuiescent' , 'pVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IAcadSubEntSolidEdge_vtables_dispatch_ = 1
IAcadSubEntSolidEdge_vtables_ = [
]

IAcadSubEntSolidFace_vtables_dispatch_ = 1
IAcadSubEntSolidFace_vtables_ = [
	(( 'Material' , 'Material' , ), 1399, (1399, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'Material' , ), 1399, (1399, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadSubEntSolidNode_vtables_dispatch_ = 1
IAcadSubEntSolidNode_vtables_ = [
]

IAcadSubEntSolidVertex_vtables_dispatch_ = 1
IAcadSubEntSolidVertex_vtables_ = [
]

IAcadSubEntity_vtables_dispatch_ = 1
IAcadSubEntity_vtables_ = [
	(( 'OnModified' , ), 1024, (1024, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 1024 , )),
	(( 'ObjectName' , 'ObjectName' , ), 1025, (1025, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 1024 , )),
	(( 'color' , 'pColor' , ), 1302, (1302, (), [ (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'color' , 'pColor' , ), 1302, (1302, (), [ (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Hyperlinks' , 'Hyperlinks' , ), 1301, (1301, (), [ (16393, 10, None, "IID('{FE28743E-1DAD-48F5-936B-6924E68AE3BE}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadSummaryInfo_vtables_dispatch_ = 1
IAcadSummaryInfo_vtables_ = [
	(( 'Author' , 'pAuthor' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Author' , 'pAuthor' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Comments' , 'pComments' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Comments' , 'pComments' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'HyperlinkBase' , 'pHyperlinkBase' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HyperlinkBase' , 'pHyperlinkBase' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Keywords' , 'pKeywords' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Keywords' , 'pKeywords' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LastSavedBy' , 'pLastSavedBy' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LastSavedBy' , 'pLastSavedBy' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'RevisionNumber' , 'pRevisionNumber' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'RevisionNumber' , 'pRevisionNumber' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Subject' , 'pSubject' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Subject' , 'pSubject' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Title' , 'pTitle' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Title' , 'pTitle' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'NumCustomInfo' , 'Index' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetCustomByIndex' , 'Index' , 'pKey' , 'pValue' , ), 10, (10, (), [ 
			 (3, 1, None, None) , (16392, 2, None, None) , (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetCustomByKey' , 'key' , 'pValue' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SetCustomByIndex' , 'Index' , 'key' , 'Value' , ), 12, (12, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SetCustomByKey' , 'key' , 'Value' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddCustomInfo' , 'key' , 'Value' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RemoveCustomByIndex' , 'Index' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RemoveCustomByKey' , 'key' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAcadSurface_vtables_dispatch_ = 1
IAcadSurface_vtables_ = [
	(( 'SurfaceType' , 'SurfaceType' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'UIsolineDensity' , 'density' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'UIsolineDensity' , 'density' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'VIsolineDensity' , 'density' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'VIsolineDensity' , 'density' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
]

IAcadSweptSurface_vtables_dispatch_ = 1
IAcadSweptSurface_vtables_ = [
	(( 'ProfileRotation' , 'profileRotationAngle' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ProfileRotation' , 'profileRotationAngle' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Bank' , 'bBank' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Bank' , 'bBank' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Twist' , 'TwistAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Twist' , 'TwistAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'scale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'scale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Length' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
]

IAcadTable_vtables_dispatch_ = 1
IAcadTable_vtables_ = [
	(( 'StyleName' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Rows' , 'pRows' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Rows' , 'pRows' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'pColumns' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'pColumns' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'pWidth' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'pWidth' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'pHeight' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'pHeight' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'VertCellMargin' , 'pGap' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'VertCellMargin' , 'pGap' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'HorzCellMargin' , 'pGap' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'HorzCellMargin' , 'pGap' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'GetColumnWidth' , 'col' , 'pWidth' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'SetColumnWidth' , 'col' , 'Width' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ColumnWidth' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'GetRowHeight' , 'row' , 'pHeight' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'SetRowHeight' , 'row' , 'Height' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'RowHeight' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'GetMinimumColumnWidth' , 'col' , 'pWidth' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'GetMinimumRowHeight' , 'row' , 'pHeight' , ), 27, (27, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'MinimumTableWidth' , 'pWidth' , ), 28, (28, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'MinimumTableHeight' , 'pHeight' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'DirectionVector' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'DirectionVector' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'TitleSuppressed' , 'bValue' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'TitleSuppressed' , 'bValue' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'HeaderSuppressed' , 'bValue' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'HeaderSuppressed' , 'bValue' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'GetAlignment' , 'rowType' , 'pCellAlignment' , ), 33, (33, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'SetAlignment' , 'rowTypes' , 'cellAlignment' , ), 34, (34, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'GetBackgroundColorNone' , 'rowType' , 'bValue' , ), 35, (35, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'SetBackgroundColorNone' , 'rowTypes' , 'bValue' , ), 36, (36, (), [ (3, 1, None, None) , 
			 (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'GetBackgroundColor' , 'rowType' , 'pColor' , ), 37, (37, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'SetBackgroundColor' , 'rowTypes' , 'pColor' , ), 38, (38, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'GetContentColor' , 'rowType' , 'pColor' , ), 39, (39, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'SetContentColor' , 'rowTypes' , 'pColor' , ), 40, (40, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'GetTextStyle' , 'rowType' , 'bstrName' , ), 41, (41, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'SetTextStyle' , 'rowTypes' , 'bstrName' , ), 42, (42, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'GetTextHeight' , 'rowType' , 'pTextHeight' , ), 43, (43, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'SetTextHeight' , 'rowTypes' , 'TextHeight' , ), 44, (44, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'GetGridLineWeight' , 'gridLineType' , 'rowType' , 'Lineweight' , ), 45, (45, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'SetGridLineWeight' , 'gridLineTypes' , 'rowTypes' , 'Lineweight' , ), 46, (46, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'GetGridColor' , 'gridLineType' , 'rowType' , 'pColor' , ), 47, (47, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'SetGridColor' , 'gridLineTypes' , 'rowTypes' , 'pColor' , ), 48, (48, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'GetGridVisibility' , 'gridLineType' , 'rowType' , 'bValue' , ), 49, (49, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'SetGridVisibility' , 'gridLineTypes' , 'rowTypes' , 'bValue' , ), 50, (50, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'TableStyleOverrides' , 'pIntArray' , ), 51, (51, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'ClearTableStyleOverrides' , 'flag' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'GetCellType' , 'row' , 'col' , 'pCellType' , ), 53, (53, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'SetCellType' , 'row' , 'col' , 'CellType' , ), 54, (54, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'GetCellExtents' , 'row' , 'col' , 'bOuterCell' , 'pPts' , 
			 ), 55, (55, (), [ (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'GetAttachmentPoint' , 'row' , 'col' , 'pAttachmentPoint' , ), 56, (56, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'GetCellAlignment' , 'row' , 'col' , 'pCellAlignment' , ), 58, (58, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'SetCellAlignment' , 'row' , 'col' , 'cellAlignment' , ), 59, (59, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'GetCellBackgroundColorNone' , 'row' , 'col' , 'bValue' , ), 60, (60, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'SetCellBackgroundColorNone' , 'row' , 'col' , 'bValue' , ), 61, (61, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'GetCellBackgroundColor' , 'row' , 'col' , 'pColor' , ), 62, (62, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'SetCellBackgroundColor' , 'row' , 'col' , 'pColor' , ), 63, (63, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'GetCellContentColor' , 'row' , 'col' , 'pColor' , ), 64, (64, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'SetCellContentColor' , 'row' , 'col' , 'pColor' , ), 65, (65, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'GetCellStyleOverrides' , 'row' , 'col' , 'pIntArray' , ), 66, (66, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCellContent' , 'row' , 'col' , ), 67, (67, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'GetRowType' , 'row' , 'pRowType' , ), 68, (68, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'GetText' , 'row' , 'col' , 'pStr' , ), 69, (69, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'SetText' , 'row' , 'col' , 'pStr' , ), 70, (70, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'GetCellTextStyle' , 'row' , 'col' , 'bstrName' , ), 71, (71, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'SetCellTextStyle' , 'row' , 'col' , 'bstrName' , ), 72, (72, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'GetCellTextHeight' , 'row' , 'col' , 'pTextHeight' , ), 73, (73, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'SetCellTextHeight' , 'row' , 'col' , 'TextHeight' , ), 74, (74, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'GetTextRotation' , 'row' , 'col' , 'TextRotation' , ), 75, (75, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'SetTextRotation' , 'row' , 'col' , 'TextRotation' , ), 76, (76, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'GetAutoScale' , 'row' , 'col' , 'bValue' , ), 77, (77, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'SetAutoScale' , 'row' , 'col' , 'bValue' , ), 78, (78, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockTableRecordId' , 'row' , 'col' , 'blkId' , ), 79, (79, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockTableRecordId' , 'row' , 'col' , 'blkId' , 'bAutoFit' , 
			 ), 80, (80, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockScale' , 'row' , 'col' , 'blkScale' , ), 81, (81, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockScale' , 'row' , 'col' , 'blkScale' , ), 82, (82, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockRotation' , 'row' , 'col' , 'blkRotation' , ), 83, (83, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockRotation' , 'row' , 'col' , 'blkRotation' , ), 84, (84, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockAttributeValue' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
			 ), 112, (112, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockAttributeValue' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
			 ), 113, (113, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'GetCellGridLineWeight' , 'row' , 'col' , 'edge' , 'plineweight' , 
			 ), 85, (85, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'SetCellGridLineWeight' , 'row' , 'col' , 'edges' , 'Lineweight' , 
			 ), 86, (86, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'GetCellGridColor' , 'row' , 'col' , 'edge' , 'pColor' , 
			 ), 87, (87, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'SetCellGridColor' , 'row' , 'col' , 'edges' , 'pColor' , 
			 ), 88, (88, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'GetCellGridVisibility' , 'row' , 'col' , 'edge' , 'bValue' , 
			 ), 89, (89, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'SetCellGridVisibility' , 'row' , 'col' , 'edges' , 'bValue' , 
			 ), 90, (90, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'InsertColumns' , 'col' , 'Width' , 'cols' , ), 95, (95, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'DeleteColumns' , 'col' , 'cols' , ), 96, (96, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'InsertRows' , 'row' , 'Height' , 'Rows' , ), 97, (97, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'DeleteRows' , 'row' , 'Rows' , ), 98, (98, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'MergeCells' , 'minRow' , 'maxRow' , 'minCol' , 'maxCol' , 
			 ), 99, (99, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'UnmergeCells' , 'minRow' , 'maxRow' , 'minCol' , 'maxCol' , 
			 ), 100, (100, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'IsMergedCell' , 'row' , 'col' , 'minRow' , 'maxRow' , 
			 'minCol' , 'maxCol' , 'pbValue' , ), 101, (101, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'GetFieldId' , 'row' , 'col' , 'fieldId' , ), 114, (114, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'SetFieldId' , 'row' , 'col' , 'fieldId' , ), 115, (115, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'GenerateLayout' , ), 102, (102, (), [ ], 1 , 1 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'RecomputeTableBlock' , 'bForceUpdate' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'HitTest' , 'wpt' , 'wviewVec' , 'resultRowIndex' , 'resultColumnIndex' , 
			 'bReturn' , ), 104, (104, (), [ (12, 1, None, None) , (12, 1, None, None) , (16387, 2, None, None) , 
			 (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'Select' , 'wpt' , 'wvwVec' , 'wvwxVec' , 'wxaper' , 
			 'wyaper' , 'allowOutside' , 'resultRowIndex' , 'resultColumnIndex' , ), 105, (105, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'SelectSubRegion' , 'wpt1' , 'wpt2' , 'wvwVec' , 'wvwxVec' , 
			 'seltype' , 'bIncludeCurrentSelection' , 'rowMin' , 'rowMax' , 'colMin' , 
			 'colMax' , ), 106, (106, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'ReselectSubRegion' , ), 107, (107, (), [ ], 1 , 1 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'GetSubSelection' , 'rowMin' , 'rowMax' , 'colMin' , 'colMax' , 
			 ), 108, (108, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'SetSubSelection' , 'rowMin' , 'rowMax' , 'colMin' , 'colMax' , 
			 ), 109, (109, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'ClearSubSelection' , ), 110, (110, (), [ ], 1 , 1 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'HasSubSelection' , 'pbValue' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'RegenerateTableSuppressed' , 'bValue' , ), 116, (116, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'RegenerateTableSuppressed' , 'bValue' , ), 116, (116, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'GetDataType' , 'rowType' , 'pDataType' , 'pUnitType' , ), 117, (117, (), [ 
			 (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'SetDataType' , 'rowTypes' , 'dataType' , 'unitType' , ), 118, (118, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'GetFormat' , 'rowType' , 'pFormat' , ), 119, (119, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'SetFormat' , 'rowTypes' , 'pFormat' , ), 120, (120, (), [ (3, 1, None, None) , 
			 (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'FormatValue' , 'row' , 'col' , 'nOption' , 'pVal' , 
			 ), 121, (121, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 0, None, None) , (16392, 0, None, None) , ], 1 , 1 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'GetCellDataType' , 'row' , 'col' , 'pDataType' , 'pUnitType' , 
			 ), 1946, (1946, (), [ (3, 1, None, None) , (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'SetCellDataType' , 'row' , 'col' , 'dataType' , 'unitType' , 
			 ), 1947, (1947, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 0, None, None) , (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'GetCellFormat' , 'row' , 'col' , 'pFormat' , ), 1948, (1948, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'SetCellFormat' , 'row' , 'col' , 'pFormat' , ), 1949, (1949, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'GetCellValue' , 'row' , 'col' , 'pVal' , ), 1950, (1950, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'SetCellValue' , 'row' , 'col' , 'val' , ), 1951, (1951, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 0, None, None) , ], 1 , 1 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'SetCellValueFromText' , 'row' , 'col' , 'val' , 'nOption' , 
			 ), 2208, (2208, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'ResetCellValue' , 'row' , 'col' , ), 2209, (2209, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
]

IAcadTable2_vtables_dispatch_ = 1
IAcadTable2_vtables_ = [
	(( 'IsEmpty' , 'nRow' , 'nCol' , 'bValue' , ), 2210, (2210, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'CreateContent' , 'nRow' , 'nCol' , 'nIndex' , 'pInt' , 
			 ), 2213, (2213, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'MoveContent' , 'nRow' , 'nCol' , 'nFromIndex' , 'nToIndex' , 
			 ), 2214, (2214, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'DeleteContent' , 'nRow' , 'nCol' , ), 2215, (2215, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'GetValue' , 'nRow' , 'nCol' , 'nContent' , 'pAcValue' , 
			 ), 2217, (2217, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'SetValue' , 'nRow' , 'nCol' , 'nContent' , 'acValue' , 
			 ), 2224, (2224, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'SetValueFromText' , 'nRow' , 'nCol' , 'nContent' , 'szText' , 
			 'nOption' , ), 2225, (2225, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (8, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'GetDataFormat' , 'nRow' , 'nCol' , 'nContent' , 'pValue' , 
			 ), 2227, (2227, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'SetDataFormat' , 'nRow' , 'nCol' , 'nContent' , 'szFormat' , 
			 ), 2228, (2228, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'GetTextString' , 'nRow' , 'nCol' , 'nContent' , 'pTextString' , 
			 ), 2229, (2229, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'SetTextString' , 'nRow' , 'nCol' , 'nContent' , 'Text' , 
			 ), 2231, (2231, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'GetFieldId2' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
			 ), 2232, (2232, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'SetFieldId2' , 'nRow' , 'nCol' , 'nContent' , 'acDbObjectId' , 
			 'nflag' , ), 2233, (2233, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockTableRecordId2' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
			 ), 2241, (2241, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockTableRecordId2' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
			 'autoFit' , ), 2242, (2242, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'GetBlockAttributeValue2' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
			 'Value' , ), 2243, (2243, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'SetBlockAttributeValue2' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
			 'Value' , ), 2244, (2244, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'GetCustomData' , 'nRow' , 'nCol' , 'szKey' , 'pData' , 
			 ), 2247, (2247, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'SetCustomData' , 'nRow' , 'nCol' , 'szKey' , 'data' , 
			 ), 2248, (2248, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'GetCellStyle' , 'nRow' , 'nCol' , 'pCellStyle' , ), 2249, (2249, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'SetCellStyle' , 'nRow' , 'nCol' , 'szCellStyle' , ), 2256, (2256, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'GetContentColor2' , 'nRow' , 'nCol' , 'nContent' , 'pColor' , 
			 ), 2260, (2260, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'SetContentColor2' , 'nRow' , 'nCol' , 'nContent' , 'pColor' , 
			 ), 2261, (2261, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
	(( 'GetDataType2' , 'nRow' , 'nCol' , 'nContent' , 'pDataType' , 
			 'pUnitType' , ), 2262, (2262, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
	(( 'SetDataType2' , 'nRow' , 'nCol' , 'nContent' , 'dataType' , 
			 'unitType' , ), 2263, (2263, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
	(( 'GetTextStyle2' , 'nRow' , 'nCol' , 'nContent' , 'pbstrStyleName' , 
			 ), 2264, (2264, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
	(( 'SetTextStyle2' , 'nRow' , 'nCol' , 'nContent' , 'bstrStyleName' , 
			 ), 2265, (2265, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
	(( 'GetTextHeight2' , 'nRow' , 'nCol' , 'nContent' , 'pHeight' , 
			 ), 2272, (2272, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
	(( 'SetTextHeight2' , 'nRow' , 'nCol' , 'nContent' , 'Height' , 
			 ), 2273, (2273, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
	(( 'GetRotation' , 'nRow' , 'nCol' , 'nContent' , 'pValue' , 
			 ), 36322, (36322, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
	(( 'SetRotation' , 'nRow' , 'nCol' , 'nContent' , 'Value' , 
			 ), 2275, (2275, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'GetAutoScale2' , 'nRow' , 'nCol' , 'nContent' , 'bAutoScale' , 
			 ), 2276, (2276, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'SetAutoScale2' , 'nRow' , 'nCol' , 'nContent' , 'bAutoFit' , 
			 ), 36325, (36325, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
	(( 'GetScale' , 'nRow' , 'nCol' , 'nContent' , 'pScale' , 
			 ), 2278, (2278, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
	(( 'SetScale' , 'nRow' , 'nCol' , 'nContent' , 'scale' , 
			 ), 2279, (2279, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
	(( 'RemoveAllOverrides' , 'nRow' , 'nCol' , ), 2280, (2280, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
	(( 'GetGridLineWeight2' , 'nRow' , 'nCol' , 'nGridLineType' , 'plineweight' , 
			 ), 2281, (2281, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
	(( 'SetGridLineWeight2' , 'nRow' , 'nCol' , 'nGridLineType' , 'Lineweight' , 
			 ), 2288, (2288, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'GetGridLinetype' , 'nRow' , 'nCol' , 'nGridLineType' , 'pacDbObjId' , 
			 ), 2289, (2289, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
	(( 'SetGridLinetype' , 'nRow' , 'nCol' , 'nGridLineType' , 'idLinetype' , 
			 ), 2290, (2290, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
	(( 'GetGridColor2' , 'nRow' , 'nCol' , 'nGridLineType' , 'pColor' , 
			 ), 2291, (2291, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
	(( 'SetGridColor2' , 'nRow' , 'nCol' , 'nGridLineType' , 'pColor' , 
			 ), 2292, (2292, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
	(( 'GetGridVisibility2' , 'nRow' , 'nCol' , 'nGridLineType' , 'bVisible' , 
			 ), 2293, (2293, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
	(( 'SetGridVisibility2' , 'nRow' , 'nCol' , 'nGridLineType' , 'bVisible' , 
			 ), 2294, (2294, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
	(( 'GetGridDoubleLineSpacing' , 'nRow' , 'nCol' , 'nGridLineType' , 'pValue' , 
			 ), 2295, (2295, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
	(( 'SetGridDoubleLineSpacing' , 'nRow' , 'nCol' , 'nGridLineType' , 'fSpacing' , 
			 ), 2296, (2296, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
	(( 'EnableBreak' , ), 2308, (2308, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
	(( 'GetBreakHeight' , 'nIndex' , 'pHeight' , ), 2309, (2309, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
	(( 'SetBreakHeight' , 'nIndex' , 'Height' , ), 2310, (2310, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
	(( 'GetContentType' , 'nRow' , 'nCol' , 'pType' , ), 2311, (2311, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
	(( 'GetMargin' , 'nRow' , 'nCol' , 'nMargin' , 'pValue' , 
			 ), 2324, (2324, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
	(( 'SetMargin' , 'nRow' , 'nCol' , 'nMargins' , 'fMargin' , 
			 ), 2326, (2326, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
	(( 'GetContentLayout' , 'row' , 'col' , 'pLayout' , ), 2327, (2327, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
	(( 'SetContentLayout' , 'row' , 'col' , 'nLayout' , ), 2328, (2328, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
	(( 'GetOverride' , 'nRow' , 'nCol' , 'nContent' , 'pValue' , 
			 ), 2338, (2338, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
	(( 'SetOverride' , 'nRow' , 'nCol' , 'nContent' , 'nProp' , 
			 ), 2339, (2339, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
	(( 'GetGridLineStyle' , 'nRow' , 'nCol' , 'nGridLineType' , 'pStyle' , 
			 ), 2340, (2340, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
	(( 'SetGridLineStyle' , 'nRow' , 'nCol' , 'nGridLineTypes' , 'nLineStyle' , 
			 ), 2341, (2341, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
	(( 'InsertRowsAndInherit' , 'nIndex' , 'nInheritFrom' , 'nNumRows' , ), 2345, (2345, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
	(( 'InsertColumnsAndInherit' , 'col' , 'nInheritFrom' , 'nNumCols' , ), 2353, (2353, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
	(( 'GetHasFormula' , 'nRow' , 'nCol' , 'nContent' , 'bValue' , 
			 ), 2354, (2354, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
	(( 'GetFormula' , 'nRow' , 'nCol' , 'nContent' , 'pszFormula' , 
			 ), 2355, (2355, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
	(( 'SetFormula' , 'nRow' , 'nCol' , 'nContent' , 'pszFormula' , 
			 ), 2356, (2356, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
	(( 'IsContentEditable' , 'nRow' , 'nCol' , 'bValue' , ), 2358, (2358, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
	(( 'IsFormatEditable' , 'nRow' , 'nCol' , 'bValue' , ), 2359, (2359, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
	(( 'GetCellState' , 'nRow' , 'nCol' , 'pCellState' , ), 2360, (2360, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1976 , (3, 0, None, None) , 0 , )),
	(( 'SetCellState' , 'nRow' , 'nCol' , 'nLock' , ), 2361, (2361, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
	(( 'EnableMergeAll' , 'nRow' , 'nCol' , 'bEnable' , ), 2368, (2368, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
	(( 'IsMergeAllEnabled' , 'nRow' , 'nCol' , 'bValue' , ), 2369, (2369, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
	(( 'BreaksEnabled' , 'bEnabled' , ), 65520, (65520, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
	(( 'BreaksEnabled' , 'bEnabled' , ), 65520, (65520, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2016 , (3, 0, None, None) , 0 , )),
	(( 'RepeatTopLabels' , 'bEnabled' , ), 65521, (65521, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2024 , (3, 0, None, None) , 0 , )),
	(( 'RepeatTopLabels' , 'bEnabled' , ), 65521, (65521, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2032 , (3, 0, None, None) , 0 , )),
	(( 'RepeatBottomLabels' , 'bEnabled' , ), 65522, (65522, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2040 , (3, 0, None, None) , 0 , )),
	(( 'RepeatBottomLabels' , 'bEnabled' , ), 65522, (65522, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2048 , (3, 0, None, None) , 0 , )),
	(( 'TableBreakFlowDirection' , 'pDir' , ), 65523, (65523, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2056 , (3, 0, None, None) , 0 , )),
	(( 'TableBreakFlowDirection' , 'pDir' , ), 65523, (65523, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2064 , (3, 0, None, None) , 0 , )),
	(( 'AllowManualPositions' , 'bEnabled' , ), 65524, (65524, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2072 , (3, 0, None, None) , 0 , )),
	(( 'AllowManualPositions' , 'bEnabled' , ), 65524, (65524, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2080 , (3, 0, None, None) , 0 , )),
	(( 'AllowManualHeights' , 'bEnabled' , ), 65525, (65525, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2088 , (3, 0, None, None) , 0 , )),
	(( 'AllowManualHeights' , 'bEnabled' , ), 65525, (65525, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2096 , (3, 0, None, None) , 0 , )),
	(( 'TableBreakHeight' , 'pHeight' , ), 65526, (65526, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2104 , (3, 0, None, None) , 0 , )),
	(( 'TableBreakHeight' , 'pHeight' , ), 65526, (65526, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2112 , (3, 0, None, None) , 0 , )),
	(( 'BreakSpacing' , 'pSpacing' , ), 65527, (65527, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2120 , (3, 0, None, None) , 0 , )),
	(( 'BreakSpacing' , 'pSpacing' , ), 65527, (65527, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2128 , (3, 0, None, None) , 0 , )),
	(( 'GetColumnName' , 'nIndex' , 'Name' , ), 65528, (65528, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 2136 , (3, 0, None, None) , 0 , )),
	(( 'SetColumnName' , 'nIndex' , 'Name' , ), 65529, (65529, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 2144 , (3, 0, None, None) , 0 , )),
	(( 'SetToolTip' , 'nRow' , 'nCol' , 'tip' , ), 65530, (65530, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 2152 , (3, 0, None, None) , 0 , )),
]

IAcadTableStyle_vtables_dispatch_ = 1
IAcadTableStyle_vtables_ = [
	(( 'Name' , 'bstrValue' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrValue' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'bstr' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'bstr' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'HorzCellMargin' , 'dHorzCellMargin' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'HorzCellMargin' , 'dHorzCellMargin' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'VertCellMargin' , 'dVertCellMargin' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'VertCellMargin' , 'dVertCellMargin' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TitleSuppressed' , 'bValue' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TitleSuppressed' , 'bValue' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'HeaderSuppressed' , 'bValue' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'HeaderSuppressed' , 'bValue' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'GetTextStyle' , 'rowType' , 'bstrName' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SetTextStyle' , 'rowTypes' , 'bstrName' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'GetTextHeight' , 'rowType' , 'pTextHeight' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SetTextHeight' , 'rowTypes' , 'TextHeight' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'GetAlignment' , 'rowType' , 'pCellAlignment' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SetAlignment' , 'rowTypes' , 'cellAlignment' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'GetColor' , 'rowType' , 'pColor' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'SetColor' , 'rowTypes' , 'pColor' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'GetBackgroundColor' , 'rowType' , 'pColor' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SetBackgroundColor' , 'rowTypes' , 'pColor' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'GetBackgroundColorNone' , 'rowType' , 'bValue' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'SetBackgroundColorNone' , 'rowTypes' , 'bValue' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'GetGridLineWeight' , 'gridLineType' , 'rowType' , 'Lineweight' , ), 21, (21, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'SetGridLineWeight' , 'gridLineTypes' , 'rowTypes' , 'Lineweight' , ), 22, (22, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'GetGridColor' , 'gridLineType' , 'rowType' , 'pColor' , ), 23, (23, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'SetGridColor' , 'gridLineTypes' , 'rowTypes' , 'pColor' , ), 24, (24, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'GetGridVisibility' , 'gridLineType' , 'rowType' , 'bValue' , ), 25, (25, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'SetGridVisibility' , 'gridLineTypes' , 'rowTypes' , 'bValue' , ), 26, (26, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'GetDataType' , 'rowType' , 'pDataType' , 'pUnitType' , ), 27, (27, (), [ 
			 (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'SetDataType' , 'rowTypes' , 'nDataType' , 'nUnitType' , ), 28, (28, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'GetFormat' , 'rowType' , 'pVal' , ), 29, (29, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'SetFormat' , 'rowTypes' , 'val' , ), 30, (30, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
]

IAcadTableStyle2_vtables_dispatch_ = 1
IAcadTableStyle2_vtables_ = [
	(( 'CreateCellStyle' , 'bstrCellStyle' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'CreateCellStyleFromStyle' , 'bstrCellStyle' , 'bstrSourceCellStyle' , ), 32, (32, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'RenameCellStyle' , 'bstrOldName' , 'bstrNewName' , ), 33, (33, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCellStyle' , 'bstrCellStyle' , ), 34, (34, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'GetUniqueCellStyleName' , 'pszBaseName' , 'pbstrUniqueName' , ), 35, (35, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'GetIsCellStyleInUse' , 'pszCellStyle' , 'pVal' , ), 36, (36, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'NumCellStyles' , 'NumCellStyles' , ), 37, (37, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'GetCellStyles' , 'cellStylesArray' , ), 38, (38, (), [ (16396, 1, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'GetTextStyleId' , 'bstrCellStyle' , 'pVal' , ), 39, (39, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'SetTextStyleId' , 'bstrCellStyle' , 'val' , ), 40, (40, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'GetTextHeight2' , 'bstrCellStyle' , 'pHeight' , ), 41, (41, (), [ (8, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'SetTextHeight2' , 'bstrCellStyle' , 'Height' , ), 42, (42, (), [ (8, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'GetAlignment2' , 'bstrCellStyle' , 'pCellAlignment' , ), 43, (43, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'SetAlignment2' , 'bstrCellStyle' , 'cellAlignment' , ), 44, (44, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'GetColor2' , 'bstrCellStyle' , 'color' , ), 45, (45, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'SetColor2' , 'bstrCellStyle' , 'color' , ), 46, (46, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'GetBackgroundColor2' , 'bstrCellStyle' , 'color' , ), 47, (47, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'SetBackgroundColor2' , 'bstrCellStyle' , 'color' , ), 48, (48, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'GetDataType2' , 'bstrCellStyle' , 'pDataType' , 'pUnitType' , ), 51, (51, (), [ 
			 (8, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'SetDataType2' , 'bstrCellStyle' , 'nDataType' , 'nUnitType' , ), 52, (52, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'GetFormat2' , 'bstrCellStyle' , 'pbstrFormat' , ), 53, (53, (), [ (8, 1, None, None) , 
			 (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'SetFormat2' , 'bstrCellStyle' , 'bstrFormat' , ), 54, (54, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'GetCellClass' , 'bstrCellStyle' , 'cellClass' , ), 1610874902, (1610874902, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'SetCellClass' , 'bstrCellStyle' , 'cellClass' , ), 1610874903, (1610874903, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'GetRotation' , 'bstrCellStyle' , 'Rotation' , ), 1610874904, (1610874904, (), [ (8, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'SetRotation' , 'bstrCellStyle' , 'Rotation' , ), 1610874905, (1610874905, (), [ (8, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'GetIsMergeAllEnabled' , 'bstrCellStyle' , 'bEnable' , ), 1610874906, (1610874906, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'EnableMergeAll' , 'bstrCellStyle' , 'bEnable' , ), 1610874907, (1610874907, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'GetGridLineWeight2' , 'bstrCellStyle' , 'gridLineType' , 'Lineweight' , ), 55, (55, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'SetGridLineWeight2' , 'bstrCellStyle' , 'gridLineTypes' , 'Lineweight' , ), 56, (56, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'GetGridColor2' , 'bstrCellStyle' , 'gridLineType' , 'pColor' , ), 57, (57, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'SetGridColor2' , 'bstrCellStyle' , 'gridLineTypes' , 'pColor' , ), 58, (58, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{7382F647-BC48-456E-B877-D18F58BE6878}')") , ], 1 , 1 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'GetGridVisibility2' , 'bstrCellStyle' , 'gridLineType' , 'bValue' , ), 59, (59, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'SetGridVisibility2' , 'bstrCellStyle' , 'gridLineTypes' , 'bValue' , ), 60, (60, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'TemplateId' , 'pVal' , ), 61, (61, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'TemplateId' , 'pVal' , ), 61, (61, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'SetTemplateId' , 'val' , 'option' , ), 65, (65, (), [ (3, 1, None, None) , 
			 (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
]

IAcadText_vtables_dispatch_ = 1
IAcadText_vtables_ = [
	(( 'TextString' , 'bstrText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'align' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'align' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalAlignment' , 'horizAlign' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
	(( 'HorizontalAlignment' , 'horizAlign' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 64 , )),
	(( 'VerticalAlignment' , 'vertiAlign' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 64 , )),
	(( 'VerticalAlignment' , 'vertiAlign' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 64 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'scalFactor' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 1024 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 1024 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'UpsideDown' , 'UpsideDown' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'UpsideDown' , 'UpsideDown' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'Backward' , 'Backward' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'Backward' , 'Backward' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'FieldCode' , 'bstrText' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
]

IAcadTextStyle_vtables_dispatch_ = 1
IAcadTextStyle_vtables_ = [
	(( 'BigFontFile' , 'fontFile' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BigFontFile' , 'fontFile' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'fontFile' , 'fontFile' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'fontFile' , 'fontFile' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LastHeight' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LastHeight' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TextGenerationFlag' , 'textGenFlag' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'GetFont' , 'TypeFace' , 'Bold' , 'Italic' , 'Charset' , 
			 'PitchAndFamily' , ), 9, (9, (), [ (16392, 2, None, None) , (16395, 2, None, None) , (16395, 2, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SetFont' , 'TypeFace' , 'Bold' , 'Italic' , 'Charset' , 
			 'PitchAndFamily' , ), 16, (16, (), [ (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IAcadTextStyles_vtables_dispatch_ = 1
IAcadTextStyles_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BDF006CF-A063-40B0-912C-AF478B1CE15B}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pTextStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{BDF006CF-A063-40B0-912C-AF478B1CE15B}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadTolerance_vtables_dispatch_ = 1
IAcadTolerance_vtables_ = [
	(( 'DirectionVector' , 'dirVector' , ), 80, (80, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 1024 , )),
	(( 'DirectionVector' , 'dirVector' , ), 80, (80, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 1024 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 81, (81, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'InsertionPoint' , 'insPoint' , ), 81, (81, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 82, (82, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 82, (82, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 1024 , )),
	(( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TextColor' , 'color' , ), 1546, (1546, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TextColor' , 'color' , ), 1546, (1546, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 1541, (1541, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'bstrText' , ), 1541, (1541, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadToolbar_vtables_dispatch_ = 1
IAcadToolbar_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B0E04681-40F0-4BCB-A78F-03660DE0651A}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'bFlag' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'bFlag' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DockStatus' , 'nStatus' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LargeButtons' , 'bFlag' , ), 1610743818, (1610743818, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'left' , 'nLeft' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'left' , 'nLeft' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'top' , 'nTop' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'top' , 'nTop' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'nWidth' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'nHeight' , ), 1610743824, (1610743824, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FloatingRows' , 'nRows' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FloatingRows' , 'nRows' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'HelpString' , 'bstrHelp' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'HelpString' , 'bstrHelp' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddToolbarButton' , 'Index' , 'Name' , 'HelpString' , 'Macro' , 
			 'FlyoutButton' , 'pItem' , ), 1610743829, (1610743829, (), [ (12, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{B0E04681-40F0-4BCB-A78F-03660DE0651A}')") , ], 1 , 1 , 4 , 1 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AddSeparator' , 'Index' , 'pItem' , ), 1610743830, (1610743830, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B0E04681-40F0-4BCB-A78F-03660DE0651A}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Dock' , 'Side' , ), 1610743831, (1610743831, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Float' , 'top' , 'left' , 'NumberFloatRows' , ), 1610743832, (1610743832, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 1610743833, (1610743833, (), [ ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 1610743834, (1610743834, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadToolbarItem_vtables_dispatch_ = 1
IAcadToolbarItem_vtables_ = [
	(( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{0C961978-3209-499F-809C-CABA49EBCA97}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1610743810, (1610743810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'itemType' , ), 1610743814, (1610743814, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Flyout' , 'pTlbar' , ), 1610743815, (1610743815, (), [ (16393, 10, None, "IID('{0C961978-3209-499F-809C-CABA49EBCA97}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Macro' , 'bstrMacro' , ), 1610743816, (1610743816, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Macro' , 'bstrMacro' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'nIndex' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'HelpString' , 'bstrHelp' , ), 1610743819, (1610743819, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'HelpString' , 'bstrHelp' , ), 1610743819, (1610743819, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetBitmaps' , 'SmallIconName' , 'LargeIconName' , ), 1610743821, (1610743821, (), [ (16392, 2, None, None) , 
			 (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetBitmaps' , 'SmallIconName' , 'LargeIconName' , ), 1610743822, (1610743822, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AttachToolbarToFlyout' , 'MenuGroupName' , 'ToolbarName' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 1610743824, (1610743824, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadToolbars_vtables_dispatch_ = 1
IAcadToolbars_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0C961978-3209-499F-809C-CABA49EBCA97}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{D6261081-12FD-49ED-A359-D990DF71949D}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LargeButtons' , 'bFlag' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LargeButtons' , 'bFlag' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'ToolbarName' , 'pTlbar' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0C961978-3209-499F-809C-CABA49EBCA97}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadTrace_vtables_dispatch_ = 1
IAcadTrace_vtables_ = [
	(( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 1024 , )),
	(( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 1024 , )),
	(( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 1024 , )),
]

IAcadUCS_vtables_dispatch_ = 1
IAcadUCS_vtables_ = [
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Origin' , 'Origin' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'XVector' , 'XVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'XVector' , 'XVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'YVector' , 'YVector' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'YVector' , 'YVector' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetUCSMatrix' , 'transMatrix' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadUCSs_vtables_dispatch_ = 1
IAcadUCSs_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{78C244EF-F4CC-43C7-AA5D-91A496215310}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Origin' , 'XAxisPoint' , 'YAxisPoint' , 'Name' , 
			 'pUCS' , ), 2, (2, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (8, 1, None, None) , (16393, 10, None, "IID('{78C244EF-F4CC-43C7-AA5D-91A496215310}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadUnderlay_vtables_dispatch_ = 1
IAcadUnderlay_vtables_ = [
	(( 'Contrast' , 'Contrast' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Contrast' , 'Contrast' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Fade' , 'Fade' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Fade' , 'Fade' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'pos' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'pos' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'UnderlayName' , 'Name' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'UnderlayName' , 'Name' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ItemName' , 'sheetName' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ItemName' , 'sheetName' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Monochrome' , 'bMono' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Monochrome' , 'bMono' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'AdjustForBackground' , 'Value' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'AdjustForBackground' , 'Value' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ClipBoundary' , 'boundry' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'ScaleFactor' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'ScaleFactor' , 'ScaleFactor' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'File' , 'Name' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'File' , 'Name' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'UnderlayVisibility' , 'fVisible' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'UnderlayVisibility' , 'fVisible' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'ClippingEnabled' , 'kClip' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ClippingEnabled' , 'kClip' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
]

IAcadUnderlay2_vtables_dispatch_ = 1
IAcadUnderlay2_vtables_ = [
	(( 'UnderlayLayerOverrideApplied' , 'bOverride' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'UnderlayLayerOverrideApplied' , 'bOverride' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
]

IAcadUtility_vtables_dispatch_ = 1
IAcadUtility_vtables_ = [
	(( 'AngleToReal' , 'Angle' , 'Unit' , 'Value' , ), 1610743808, (1610743808, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AngleToString' , 'Angle' , 'Unit' , 'precision' , 'bstrValue' , 
			 ), 1610743809, (1610743809, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DistanceToReal' , 'Distance' , 'Unit' , 'Value' , ), 1610743810, (1610743810, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RealToString' , 'Value' , 'Unit' , 'precision' , 'bstrValue' , 
			 ), 1610743811, (1610743811, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TranslateCoordinates' , 'Point' , 'FromCoordSystem' , 'ToCoordSystem' , 'Displacement' , 
			 'OCSNormal' , 'transPt' , ), 1610743812, (1610743812, (), [ (12, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
	(( 'InitializeUserInput' , 'Bits' , 'KeyWordList' , ), 1610743813, (1610743813, (), [ (3, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetInteger' , 'Prompt' , 'Value' , ), 1610743814, (1610743814, (), [ (12, 17, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetReal' , 'Prompt' , 'Value' , ), 1610743815, (1610743815, (), [ (12, 17, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 1 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetInput' , 'Value' , ), 1610743816, (1610743816, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetKeyword' , 'Prompt' , 'bstrKeyword' , ), 1610743817, (1610743817, (), [ (12, 17, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetString' , 'HasSpaces' , 'Prompt' , 'bstrValue' , ), 1610743818, (1610743818, (), [ 
			 (3, 1, None, None) , (12, 17, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetAngle' , 'Point' , 'Prompt' , 'Angle' , ), 1610743819, (1610743819, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AngleFromXAxis' , 'StartPoint' , 'EndPoint' , 'Angle' , ), 1610743820, (1610743820, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetCorner' , 'Point' , 'Prompt' , 'corner' , ), 1610743821, (1610743821, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetDistance' , 'Point' , 'Prompt' , 'dist' , ), 1610743822, (1610743822, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetOrientation' , 'Point' , 'Prompt' , 'Angle' , ), 1610743823, (1610743823, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Point' , 'Prompt' , 'inputPoint' , ), 1610743824, (1610743824, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PolarPoint' , 'Point' , 'Angle' , 'Distance' , 'inputPoint' , 
			 ), 1610743825, (1610743825, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CreateTypedArray' , 'varArr' , 'Type' , 'inArgs' , ), 1610743826, (1610743826, (), [ 
			 (16396, 2, None, None) , (3, 1, None, None) , (8204, 1, None, None) , ], 1 , 1 , 4 , -1 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetEntity' , 'Object' , 'PickedPoint' , 'Prompt' , ), 1610743827, (1610743827, (), [ 
			 (16393, 2, None, None) , (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Prompt' , 'Message' , ), 1610743828, (1610743828, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetSubEntity' , 'Object' , 'PickedPoint' , 'transMatrix' , 'ContextData' , 
			 'Prompt' , ), 1610743829, (1610743829, (), [ (16393, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IsURL' , 'URL' , 'IsValidURL' , ), 1610743830, (1610743830, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetRemoteFile' , 'URL' , 'LocalFile' , 'IgnoreCache' , ), 1610743831, (1610743831, (), [ 
			 (8, 1, None, None) , (16392, 2, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'PutRemoteFile' , 'URL' , 'LocalFile' , ), 1610743832, (1610743832, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'IsRemoteFile' , 'LocalFile' , 'URL' , 'IsDownloadedFile' , ), 1610743833, (1610743833, (), [ 
			 (8, 1, None, None) , (16392, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'LaunchBrowserDialog' , 'SelectedURL' , 'DialogTitle' , 'OpenButtonCaption' , 'StartPageURL' , 
			 'RegistryRootKey' , 'OpenButtonAlwaysEnabled' , 'success' , ), 1610743834, (1610743834, (), [ (16392, 2, None, None) , 
			 (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SendModelessOperationStart' , 'Context' , ), 1610743835, (1610743835, (), [ (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SendModelessOperationEnded' , 'Context' , ), 1610743836, (1610743836, (), [ (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IAcadView_vtables_dispatch_ = 1
IAcadView_vtables_ = [
	(( 'Center' , 'Center' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'Center' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Target' , 'targetPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Target' , 'targetPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'dirVec' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'dirVec' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CategoryName' , 'category' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CategoryName' , 'category' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LayoutId' , 'ObjectID' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'LayoutId' , 'ObjectID' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'LayerState' , 'LayerState' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'LayerState' , 'LayerState' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'HasVpAssociation' , 'bVpAssoc' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'HasVpAssociation' , 'bVpAssoc' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IAcadViewport_vtables_dispatch_ = 1
IAcadViewport_vtables_ = [
	(( 'Center' , 'Center' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Center' , 'Center' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Target' , 'targetPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Target' , 'targetPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'dirVec' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'dirVec' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GridOn' , 'bGridOn' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GridOn' , 'bGridOn' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OrthoOn' , 'bOrthoOn' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'OrthoOn' , 'bOrthoOn' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SnapBasePoint' , 'lowLeft' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SnapBasePoint' , 'lowLeft' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SnapOn' , 'bSnapOn' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SnapOn' , 'bSnapOn' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SnapRotationAngle' , 'Angle' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SnapRotationAngle' , 'Angle' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'UCSIconOn' , 'bIconOn' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'UCSIconOn' , 'bIconOn' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'LowerLeftCorner' , 'lowLeft' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'UpperRightCorner' , 'UpperRight' , ), 16, (16, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Split' , 'NumWins' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'GetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 18, (18, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'SetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 19, (19, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'GetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 20, (20, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'SetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 21, (21, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'SetView' , 'View' , ), 22, (22, (), [ (9, 1, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ArcSmoothness' , 'arcSmooth' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ArcSmoothness' , 'arcSmooth' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
]

IAcadViewports_vtables_dispatch_ = 1
IAcadViewports_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DeleteConfiguration' , 'Name' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadViews_vtables_dispatch_ = 1
IAcadViews_vtables_ = [
	(( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
	(( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{B189A3C4-324E-4130-8516-381635BE10EF}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadXRecord_vtables_dispatch_ = 1
IAcadXRecord_vtables_ = [
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetXRecordData' , 'XRecordDataType' , 'XRecordDataValue' , ), 2, (2, (), [ (16396, 2, None, None) , 
			 (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SetXRecordData' , 'XRecordDataType' , 'XRecordDataValue' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TranslateIDs' , 'xlateIds' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TranslateIDs' , 'xlateIds' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadXline_vtables_dispatch_ = 1
IAcadXline_vtables_ = [
	(( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 4, (4, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
	'{EF942C4F-A848-4192-B7C2-94C680C264A1}' : IAcadObject,
	'{A9625062-DC43-4D1C-9FC6-8512123BB91B}' : IAcadDatabase,
	'{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}' : IAcadModelSpace,
	'{165531B8-67A4-46D8-AC99-F8150FA7A412}' : IAcadBlock,
	'{E460D811-DFF0-4FCD-9D75-B440FA38263B}' : IAcadEntity,
	'{7382F647-BC48-456E-B877-D18F58BE6878}' : IAcadAcCmColor,
	'{FE28743E-1DAD-48F5-936B-6924E68AE3BE}' : IAcadHyperlinks,
	'{82090F76-F6CB-4414-93E3-7A7EC8286BAC}' : IAcadHyperlink,
	'{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}' : IAcad3DFace,
	'{8436D08F-6B44-4B65-AECB-4B3F570E38E8}' : IAcadPolygonMesh,
	'{B89275F4-543E-4EAF-A931-DAB1341A2B67}' : IAcad3DPolyline,
	'{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}' : IAcadArc,
	'{090C78C3-33E1-451B-B00F-A58F7B62DA00}' : IAcadAttribute,
	'{DF94C736-F717-4469-A886-B9902747352D}' : IAcad3DSolid,
	'{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}' : IAcadRegion,
	'{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}' : IAcadCircle,
	'{AB6BA922-5284-4D66-8D31-6E732B1645CC}' : IAcadDimAligned,
	'{06B71947-9E46-4B8F-B277-812B172E02EA}' : IAcadDimension,
	'{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}' : IAcadDimAngular,
	'{CE984151-66ED-4500-B99D-85ACCEC10820}' : IAcadDimDiametric,
	'{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}' : IAcadDimRotated,
	'{8BBE360E-DC9A-4640-8597-C54166887E54}' : IAcadDimOrdinate,
	'{FC56A33B-1DC1-42FE-B848-D469E375FC44}' : IAcadDimRadial,
	'{F64246E5-206A-42C2-B3E7-A725B2C07CFB}' : IAcadEllipse,
	'{D035FBCB-313A-4165-86A7-AAD91DA820E5}' : IAcadLeader,
	'{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}' : IAcadMText,
	'{8F0BB516-7C5B-4BA4-820F-24B1E962D971}' : IAcadPoint,
	'{82DEE429-1C13-460B-88FA-C63E0CA33D21}' : IAcadLWPolyline,
	'{A09B5650-3A79-41F7-A459-1817D6F1797C}' : IAcadPolyline,
	'{BE71C3CD-270F-4A01-86F4-91694B267C19}' : IAcadRay,
	'{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}' : IAcadShape,
	'{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}' : IAcadSolid,
	'{D7727775-104A-4DBA-9CCF-0FBDC5B80872}' : IAcadSpline,
	'{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}' : IAcadText,
	'{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}' : IAcadTolerance,
	'{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}' : IAcadTrace,
	'{96FC51A1-B610-406F-990D-0652F53758A9}' : IAcadXline,
	'{17C1A78F-ECB3-4838-986C-FA92E17D41AB}' : IAcadBlockReference,
	'{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}' : IAcadHatch,
	'{EE3833FA-927E-4272-A918-8B487E445600}' : IAcadRasterImage,
	'{BB0A29C2-AA57-4A39-A771-DD9987890AF7}' : IAcadLine,
	'{0B119218-2411-46DD-B7B9-17C8C009222C}' : IAcadLayout,
	'{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}' : IAcadPlotConfiguration,
	'{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}' : IAcadMInsertBlock,
	'{60A35C35-64B5-4751-99E7-259879896519}' : IAcadPolyfaceMesh,
	'{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}' : IAcadMLine,
	'{BA16BE7C-0789-43DE-B371-8082AE3FA99A}' : IAcadDim3PointAngular,
	'{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}' : IAcadExternalReference,
	'{187D4409-BABE-43D8-8379-2AF11136DA16}' : IAcadTable,
	'{FFCEA1F0-1C70-4342-9C14-929923139F4C}' : IAcadDimArcLength,
	'{F0828C6C-9FF0-4DFF-A115-158FF79B241E}' : IAcadDimRadialLarge,
	'{4EE05AF2-D6B9-4D79-9734-C175AC445099}' : IAcadSection,
	'{BB124B3C-3174-4CB8-8157-E5EFD03347AD}' : IAcadSectionSettings,
	'{62E19FBE-3C3D-4377-9E2F-02F84B11980D}' : IAcadSectionTypeSettings,
	'{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}' : IAcadPaperSpace,
	'{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}' : IAcadPViewport,
	'{B189A3C4-324E-4130-8516-381635BE10EF}' : IAcadView,
	'{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}' : IAcadBlocks,
	'{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}' : IAcadGroups,
	'{9C09D413-9CA2-462A-9D29-03CE60738E36}' : IAcadGroup,
	'{C62F448E-753C-4DDF-B30D-873D0DAF9735}' : IAcadDimStyles,
	'{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}' : IAcadDimStyle,
	'{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}' : IAcadLayers,
	'{F3A8989F-5CAE-4E98-A185-E161FCF43127}' : IAcadLayer,
	'{943058F5-B25A-470F-84E6-C6364FEC2635}' : IAcadLineTypes,
	'{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}' : IAcadLineType,
	'{803BC722-4C89-4866-98B1-E4453C5F6287}' : IAcadDictionaries,
	'{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}' : IAcadDictionary,
	'{BD45EE03-5243-4466-813C-95E33F562665}' : IAcadXRecord,
	'{5A832756-01AF-4D2F-89A6-50E0121AFD1A}' : IAcadRegisteredApplications,
	'{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}' : IAcadRegisteredApplication,
	'{617040CF-4E9D-4CC3-9814-AD69E0AB9751}' : IAcadTextStyles,
	'{BDF006CF-A063-40B0-912C-AF478B1CE15B}' : IAcadTextStyle,
	'{BF4812B8-408D-4E07-B595-ACB8336B6A93}' : IAcadUCSs,
	'{78C244EF-F4CC-43C7-AA5D-91A496215310}' : IAcadUCS,
	'{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}' : IAcadViews,
	'{98558EDE-E8B4-4870-9D78-15BE6370E1C1}' : IAcadViewports,
	'{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}' : IAcadViewport,
	'{1636A05E-7F68-4CEE-B93B-8F56BA299293}' : IAcadLayouts,
	'{AD2543CB-31A8-4DDD-9162-845E11D7F72F}' : IAcadPlotConfigurations,
	'{96435877-2FB6-4842-BD4F-7334ADF4B707}' : IAcadDatabasePreferences,
	'{65156CBF-69F4-403C-AC21-682F839048DD}' : IAcadFileDependencies,
	'{F309A783-F98D-4B85-AE32-BE0470A8A370}' : IAcadFileDependency,
	'{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}' : IAcadSummaryInfo,
	'{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}' : IAcadSectionManager,
	'{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}' : IAcadMaterials,
	'{5E69D338-33B4-40D3-9D02-ADA45791E720}' : IAcadMaterial,
	'{21158918-4D1E-49F5-8E6A-E4DFF3386250}' : IAcadSectionTypeSettings2,
	'{988F4102-E6E3-4282-ACAC-55270827F2A8}' : AcadHyperlink,
	'{8607EF79-E042-46C4-8DF9-E96946D5C33D}' : IAcadDynamicBlockReferenceProperty,
	'{0215A4C0-5431-4FD0-9B06-46589B5C4939}' : AcadDynamicBlockReferenceProperty,
	'{C8C18F89-794D-466B-8B97-95634D9890EF}' : AcadAcCmColor,
	'{9A21C6C5-27FC-4442-8590-575E7AFD73BB}' : AcadObject,
	'{F5522F0C-962A-48AC-9992-E81B07628F1F}' : AcadXRecord,
	'{73166AEE-97AE-4F35-AD73-DFCD36E37C04}' : IAcadSortentsTable,
	'{048ED0E0-12CF-4C0F-9FFA-947C2FBE8C8E}' : AcadSortentsTable,
	'{B80687F9-FA4C-4735-9DC4-E5715F2BC698}' : AcadDimStyle,
	'{BAE5802A-CF21-4F9C-AE04-D98F4036AC31}' : AcadLayer,
	'{0D555CE0-304A-47A6-858B-B145209A3982}' : AcadLineType,
	'{76193B93-A799-44D6-96F2-76742437E097}' : AcadMaterial,
	'{CC23CA32-9892-4FBA-A108-FE31CA0F35A6}' : AcadRegisteredApplication,
	'{F868EAEC-1B73-4F5E-BA73-90EBA94E75BE}' : AcadTextStyle,
	'{849AFB5B-D6C9-4924-A712-F7118FF9611F}' : AcadUCS,
	'{C061C82C-D041-4214-BB07-B608107CEFCB}' : AcadView,
	'{1D625598-C876-4C51-8EF5-F9D8F96F62AA}' : AcadViewport,
	'{08A60FF7-BB37-44F4-9759-0ADA6C7B9CC9}' : AcadGroup,
	'{EA34A0C0-5CE7-4701-A6FA-117D25CD5EBB}' : AcadPlotConfiguration,
	'{4A756F5F-CBA4-428B-B17F-AF80C0C8502D}' : AcadLayout,
	'{AA1895FD-9DF5-4824-9597-8FB7EA336887}' : IAcadIdPair,
	'{14679E3B-C952-4998-8E13-4B1286E6DD99}' : AcadIdPair,
	'{C1EF838D-1F50-4313-9A42-B290F14470AB}' : IAcadTableStyle,
	'{AD9CE10C-535C-48A6-86F0-DB9B105BD292}' : IAcadTableStyle2,
	'{72EFC580-D085-4B81-8C55-26A79E445338}' : AcadTableStyle,
	'{26A325BD-C715-48C5-AE7D-8E9EBEE01922}' : AcadSectionSettings,
	'{F2A7D936-C8D3-4A96-B791-3DC0B718C507}' : AcadSectionTypeSettings,
	'{0B9235CA-21CD-4797-A219-62E752D9DFB8}' : IAcadMLeaderStyle,
	'{F3C3049A-AADC-4F4E-B35E-B15AA27DA2E7}' : AcadMLeaderStyle,
	'{1481B385-759A-4B00-9257-E96357563999}' : AcadHyperlinks,
	'{E70DE962-842A-4488-9481-1D0FD72A020F}' : AcadDictionary,
	'{E177A457-9EAA-43C3-A3CE-84874A28F6CA}' : AcadLayers,
	'{794199C5-827C-41C8-8CB2-3A1EA056AF5E}' : AcadDimStyles,
	'{89F0FC31-3B1D-494B-A75B-6BD4FA527B8A}' : AcadDictionaries,
	'{C8EC7647-1E79-4F13-81D7-2EED803D0D22}' : AcadLineTypes,
	'{1CFD327B-45B3-4FD5-90B2-F89A57052783}' : AcadMaterials,
	'{BF224DC3-B602-4EEE-BFE9-9E4E0AED6837}' : AcadTextStyles,
	'{1EA072EE-57FD-495E-889C-8243C3BDBDBC}' : AcadUCSs,
	'{713C0E8A-5AE8-4695-B442-5ED6C4FE5C42}' : AcadRegisteredApplications,
	'{0B38CACA-3D3C-48EA-BEB5-7D95F4F6EE15}' : AcadViews,
	'{2709544A-5B24-4F9F-A5DA-CEC7297D3A4E}' : AcadViewports,
	'{162EF0A1-5A33-46F2-ACCF-CA388B084A09}' : AcadGroups,
	'{64B99FDB-1D85-447F-98C7-569DBDA723DB}' : AcadBlocks,
	'{6BCE6F6E-C050-4F39-BD98-E2743949F724}' : AcadLayouts,
	'{12545889-6D32-4424-9967-1E1D7BD1F809}' : AcadPlotConfigurations,
	'{D66873EA-AAE5-41CC-8DD2-8CE3228E9F89}' : AcadEntity,
	'{3836C443-B84E-4F50-A3F5-D7DF6FF5366A}' : IAcadShadowDisplay,
	'{1FD7F53F-7ED5-439C-9A77-A3821CD09E98}' : AcadRasterImage,
	'{8AA16DFC-DFC6-4B51-8FA2-A5D812BE33BF}' : Acad3DFace,
	'{46C56738-39C6-4240-8B9B-008CCD769A84}' : Acad3DPolyline,
	'{38C8B14E-7879-4DA9-8C3F-8CAAC359293A}' : AcadRegion,
	'{70DBCAE8-8C2B-450C-9E1D-43E4686C6512}' : Acad3DSolid,
	'{EF01D98A-747B-4522-AD70-991B90855DBF}' : AcadArc,
	'{078BE9CC-452F-4ED8-81CF-017C7C6A3D14}' : IAcadAttribute2,
	'{E29F6C45-6927-4508-8F3F-34105FD3FC5F}' : AcadAttribute,
	'{A9930D00-3154-46E9-9101-E5E963F0D1FF}' : IAcadAttributeReference,
	'{04533CAF-7880-41D7-B4C7-0EEB9735DF22}' : IAcadAttributeReference2,
	'{40770568-0D5E-49D4-BE47-BC47A4F0B0A4}' : AcadAttributeReference,
	'{1E8A29BA-827D-4031-A4A3-AE7999B402F6}' : AcadBlockReference,
	'{F78DCF7C-043D-45FC-9D21-676FC307BA3F}' : AcadCircle,
	'{48FEFCD7-5D7C-4E4A-9F11-60E69A31D4B1}' : AcadEllipse,
	'{FE718E8F-C3AA-4F30-9103-432450CF1DA1}' : AcadHatch,
	'{FA97F7A7-FD19-4D55-ABF2-CFEFFF777426}' : AcadLeader,
	'{B125D293-E039-4D19-B975-1C4A8841C5AB}' : IAcadMLeader,
	'{643A46A9-997A-4E10-8117-0B887D0D435F}' : AcadMLeader,
	'{E9C07CEC-7B82-49E4-BBA2-7533B88E9D64}' : AcadLWPolyline,
	'{4BD03680-3C0F-4501-AFF7-3D008586917F}' : AcadLine,
	'{9906CDFC-DB2C-4126-9422-13139B148495}' : AcadMText,
	'{48270F9E-CCF6-4C79-B6FF-267C960E6425}' : AcadPoint,
	'{0C3393F8-94F5-4B79-8C01-49A2D0CC0FE9}' : AcadPolyline,
	'{DB207560-8449-4FAF-BDC2-61676EB012D4}' : AcadPolygonMesh,
	'{FD51ED8A-D518-4554-B236-B6E9D234FD03}' : AcadRay,
	'{AC5CECFA-F03A-41D2-A89C-704C44935941}' : AcadShape,
	'{A6A3D586-44CF-44C2-A92C-620BB713B4F2}' : AcadSolid,
	'{59A224A2-BEF8-4C89-96E0-83A5411ABB6C}' : AcadSpline,
	'{E4222C78-3670-4BB1-9AD4-7D8F3E581F2D}' : AcadText,
	'{F40E2FF0-4D77-40B2-9A44-A3AEECCE8EFF}' : AcadTolerance,
	'{071339A1-1946-44B2-B63E-50459B15DB86}' : AcadTrace,
	'{2BCA857B-A18B-4AFA-B183-CC0E49C12058}' : AcadXline,
	'{205DDA5F-EE89-4A11-8FCF-08826611B374}' : IAcadPViewport2,
	'{F196F03F-651A-43AF-BE34-D11942F24445}' : AcadPViewport,
	'{B1560245-190E-4BBD-81DF-9B642D0E5325}' : AcadMInsertBlock,
	'{622F6193-E4DD-46E6-BC66-2ED88E9FD28D}' : AcadPolyfaceMesh,
	'{87F5CF8F-A06D-498F-A05F-E520E6B570DB}' : AcadMLine,
	'{B2A579E0-A797-40B1-8AEE-A8F6404719F8}' : AcadExternalReference,
	'{109AA82B-2388-4431-B488-42AE26505C8A}' : IAcadTable2,
	'{2C7D1157-7D50-4A88-9777-5EBBA3189AB8}' : AcadTable,
	'{83DA5978-433D-4873-B80A-E353D0AEC540}' : IAcadOle,
	'{475C7B4A-6964-4F9E-9708-05A16EAC31D0}' : AcadOle,
	'{E0D0377A-C3ED-4F5A-87CE-2AAC3C141D32}' : IAcadHelix,
	'{DE74F5AD-DA2F-429F-BAF9-850A2808D585}' : AcadHelix,
	'{59747640-33C2-4824-B942-57E893619124}' : IAcadSurface,
	'{8ED07FEF-E1B0-4CC3-B2BA-D354828AB952}' : AcadSurface,
	'{4C19880A-0BAF-4899-80DB-1F672CFBF5FC}' : IAcadPlaneSurface,
	'{6451051B-AD22-4C6A-ACCE-013A0E1DDBC3}' : AcadPlaneSurface,
	'{6069C4B0-6137-4076-B4F0-330CF31EE912}' : IAcadExtrudedSurface,
	'{C2D4ACCC-A3D1-4A0A-AD59-0DD8BA3D5EE1}' : AcadExtrudedSurface,
	'{0E305EE4-A4BB-4D14-A375-B3BAFC9D38C9}' : IAcadRevolvedSurface,
	'{9ECF83FB-23C5-43B6-83DE-93CFBDD74D4A}' : AcadRevolvedSurface,
	'{6F708280-7555-499F-B5E2-0248AB74AB2F}' : IAcadSweptSurface,
	'{FE054BB2-AF94-40AC-88AA-2F59F7018B1D}' : AcadSweptSurface,
	'{59FBE27D-91AF-4934-B454-BE0688ABA89D}' : IAcadLoftedSurface,
	'{3497C2EC-5684-4B21-AF74-F6760E0221DC}' : AcadLoftedSurface,
	'{7C239DAB-BC87-45F3-B7B1-FCC1541A235B}' : AcadSection,
	'{8795DA35-54AA-4DCB-A065-E7397C8568A9}' : AcadSectionManager,
	'{1140D7A3-E582-4599-B98D-2387DAF35A71}' : IAcadUnderlay,
	'{46CAAFD6-D918-45D5-AE5B-EB1334198980}' : IAcadUnderlay2,
	'{0D0CFF77-1350-4902-9AE0-8C9A3C22EE34}' : AcadDwfUnderlay,
	'{11EC23A0-50D1-4129-8D37-8D1148B800DE}' : AcadDgnUnderlay,
	'{FEF26B75-296F-4402-9210-EC80A9B39972}' : IAcadSubEntity,
	'{2B82582B-C683-49C2-AC5E-20105AD47CE9}' : AcadSubEntity,
	'{84822F99-8F0C-4F7C-8251-4344919CFEF3}' : IAcadSubEntSolidFace,
	'{4FC6CEE8-23F6-405F-8BA2-1F7036050715}' : AcadSubEntSolidFace,
	'{06619D36-FEC2-4CD3-97F1-84949FFD63C7}' : IAcadSubEntSolidEdge,
	'{559E3754-6F34-47AF-BC1F-E2BE712B16EB}' : AcadSubEntSolidEdge,
	'{DEF51352-1B14-465C-9183-A69B87A3D11C}' : IAcadSubEntSolidVertex,
	'{203D46FB-C6F0-4E95-B702-C1E01ADEBC04}' : AcadSubEntSolidVertex,
	'{699B4233-20E7-4638-8439-384D3CB00019}' : IAcadSubEntSolidNode,
	'{25F43C48-6A48-4646-8EC4-D34563D6A4F4}' : AcadSubEntSolidNode,
	'{6F56D7C9-18DD-4C15-9FA8-C54E3610EC40}' : AcadDimension,
	'{BF4CC07E-E9BB-40D6-873F-855B211033B9}' : AcadDimAligned,
	'{750AEC19-2E4C-4ED9-9B9F-F9CAFCD060F3}' : AcadDimAngular,
	'{85452F88-5071-492E-B850-2E3C586DCBD8}' : AcadDimDiametric,
	'{44A52280-AE56-490D-890C-89FB7279ED6B}' : AcadDimOrdinate,
	'{2C74F89E-7421-46B4-BA54-F86F1BD9F237}' : AcadDimRadial,
	'{BBF6A206-CB04-479D-96AE-349E1E83319A}' : AcadDimRotated,
	'{BC71DEA1-D6FB-48B8-AB06-D151C81BBCDD}' : AcadDim3PointAngular,
	'{ABBE3F83-D585-4A50-9B69-198B0F566F2E}' : AcadDimArcLength,
	'{D86B6C47-11F2-4D95-B635-EA575F0892FC}' : AcadDimRadialLarge,
	'{57D32359-5C1C-4783-B334-BC371687BDA8}' : IAcadBlock2,
	'{20E47D5B-529A-45BD-8E77-BF1A3064A008}' : AcadBlock,
	'{21F271F8-DBE9-4842-AB00-A4878F60255F}' : IAcadModelSpace2,
	'{B5EE2B68-9A23-4BCD-BB77-FEA6DFB24DD6}' : AcadModelSpace,
	'{9B075CA3-4499-40CC-A377-BC000455F59E}' : IAcadPaperSpace2,
	'{FE317223-8EDE-4684-B424-E48B9EA90220}' : AcadPaperSpace,
	'{CD865713-70D6-4E15-BB7B-9B99AD9DEB85}' : AcadFileDependency,
	'{834CE679-2E47-49DE-9E41-FEC87E9192EB}' : AcadFileDependencies,
	'{798391FE-4AF2-4851-9DDA-1F0D70C02A9E}' : AcadSummaryInfo,
	'{1D6DFD6A-9E16-435A-9327-6FFEC6BA372F}' : AcadDatabasePreferences,
	'{B53CEF4B-1A13-49DE-BBC5-A7100FB2F38C}' : AcadDatabase,
	'{805F5969-BFFD-4683-9821-CD5590FF2F4E}' : IAcadSecurityParams,
	'{DF6525C2-6358-4B07-813D-708120C5FE1A}' : AcadSecurityParams,
	'{46D38550-0080-484A-97B0-B3A1F5ED9824}' : IAcadLayerStateManager,
	'{4B40437B-8972-4444-BBE3-1588FF55F203}' : AcadLayerStateManager,
	'{E8D59748-B414-4BE6-AF82-870C62C0CF4C}' : _DAcadApplicationEvents,
	'{0EB66A59-8FF4-410B-B697-8813116B2C5F}' : IAcadDocument,
	'{DFF0942E-23C4-44B5-B67C-B511B5DD5A66}' : IAcadPlot,
	'{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}' : IAcadApplication,
	'{5A6047B5-55E8-456B-A5D1-D42C5DC90B96}' : IAcadPreferences,
	'{E988F6D8-E009-4C4B-B20F-937E3349B7F5}' : IAcadPreferencesFiles,
	'{470F310B-CA4B-4664-B8BA-2A56745331C3}' : IAcadPreferencesDisplay,
	'{DA7E4927-7A26-4409-A515-F4F9E67EB0C3}' : IAcadPreferencesOpenSave,
	'{E985D85D-2438-4979-8BB3-0CF1C0806140}' : IAcadPreferencesOutput,
	'{42370369-A258-4EAD-96C6-F78702E57374}' : IAcadPreferencesSystem,
	'{4149C4B5-CA42-4ED0-B8CB-EBBE87F83912}' : IAcadPreferencesUser,
	'{1591419F-43C2-4F66-BC6F-C0FF0EFFF074}' : IAcadPreferencesDrafting,
	'{129B870F-5FEE-4EF2-9BE6-30BAD4B0CD1F}' : IAcadPreferencesSelection,
	'{EB3A84E0-1069-4B35-8564-62441E5BEDC6}' : IAcadPreferencesProfiles,
	'{38931362-4638-4A2F-8201-E7B2AA52CA37}' : IAcadMenuGroups,
	'{D6261081-12FD-49ED-A359-D990DF71949D}' : IAcadMenuGroup,
	'{984C0B3E-F861-403A-A0FD-E332A7EC0CF3}' : IAcadPopupMenus,
	'{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}' : IAcadPopupMenu,
	'{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}' : IAcadPopupMenuItem,
	'{1081A53F-2A08-4767-A131-08831AE62035}' : IAcadToolbars,
	'{0C961978-3209-499F-809C-CABA49EBCA97}' : IAcadToolbar,
	'{B0E04681-40F0-4BCB-A78F-03660DE0651A}' : IAcadToolbarItem,
	'{BD7E485E-3CD1-4DD5-9959-EB76B03024A5}' : IAcadMenuBar,
	'{CDF18C05-94F9-4902-856D-137AC54CEADF}' : IAcadDocuments,
	'{144790A6-6C66-49EC-96B0-DC148D06DB98}' : IAcadState,
	'{913DBB03-9E39-4CA3-940E-BB7C4B88EF89}' : IAcadSelectionSets,
	'{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}' : IAcadSelectionSet,
	'{22C8E547-0D27-4793-BB9F-AC58D4F8E794}' : IAcadUtility,
	'{2D46F523-8E0C-4E6D-A4BB-68ACED0C676C}' : AcadState,
	'{28B7AA99-C0F9-4C47-995E-8A8D729603A1}' : AcadApplication,
	'{6AB55F46-2523-4701-A912-B226F46252BA}' : AcadApplicationMinorVersion1,
	'{B4D2D9F3-C5D1-44AF-913A-BAFB1F357950}' : AcadSelectionSet,
	'{2F6DB935-F865-4709-808C-ADA241F7E592}' : AcadSelectionSets,
	'{82F4F750-8BD9-4880-A71D-02FB08EBFAEA}' : AcadPlot,
	'{DBEE68F4-2BF2-43A2-BF9B-353FCDE16782}' : AcadPreferences,
	'{98780B52-05AD-4739-BC5C-B3BAD3D5296E}' : AcadPreferencesDrafting,
	'{26352416-E145-4D82-92E5-3EC921A4A58E}' : AcadPreferencesDisplay,
	'{CF7E7DCE-3696-4C9F-B29E-F8980C7650B0}' : AcadPreferencesFiles,
	'{6C6322F2-DB92-4304-8790-C6AD52685872}' : AcadPreferencesOpenSave,
	'{E6EAB939-E3AF-4FAB-AFDC-2A77D0D5B3B8}' : AcadPreferencesOutput,
	'{767E31F2-FCF8-478D-8836-223DFEE4D6B3}' : AcadPreferencesProfiles,
	'{2B4D4DEA-4EC2-4C06-ADC9-B4992734A757}' : AcadPreferencesSelection,
	'{06527FA0-74A3-4791-AA88-A63509AC82FB}' : AcadPreferencesSystem,
	'{FFDC2937-8113-401C-A224-E9A034287EA6}' : AcadPreferencesUser,
	'{E2DA6C15-C324-457C-A136-69279E9C394E}' : AcadMenuGroups,
	'{6BD98AF5-A2B2-46A2-87EE-C3CB29A5A9CC}' : AcadMenuGroup,
	'{64B283AE-0D0B-4C24-9E94-B2F26C210C0E}' : AcadMenuBar,
	'{8BA4FD46-2F7C-4220-987D-71DCDEC4E739}' : AcadPopupMenus,
	'{194C5C7B-FD4B-42B7-B3A7-A5F3DFFDC999}' : AcadPopupMenu,
	'{EA6F8E27-1BD3-468A-8A57-EE2E2116AAC4}' : AcadPopupMenuItem,
	'{30A1B04F-D62D-4925-96AC-9CB7478B910F}' : AcadUtility,
	'{C814C69D-A74B-494C-8EE6-23731B145CCB}' : _DAcadDocumentEvents,
	'{7AABBB95-79BE-4C0F-8024-EB6AF271231C}' : AcadDocument,
	'{CA6096C3-1A75-45FF-BCBF-A198769571CC}' : AcadDocuments,
	'{6DA5711F-DFD4-4D81-8D23-F7AEA68A920C}' : AcadToolbars,
	'{B002FDCB-B013-4654-ACE9-8256ABB240F9}' : AcadToolbar,
	'{1AAB334A-492D-4502-9F59-247C4966E705}' : AcadToolbarItem,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
	'{EF942C4F-A848-4192-B7C2-94C680C264A1}' : 'IAcadObject',
	'{A9625062-DC43-4D1C-9FC6-8512123BB91B}' : 'IAcadDatabase',
	'{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}' : 'IAcadModelSpace',
	'{165531B8-67A4-46D8-AC99-F8150FA7A412}' : 'IAcadBlock',
	'{E460D811-DFF0-4FCD-9D75-B440FA38263B}' : 'IAcadEntity',
	'{7382F647-BC48-456E-B877-D18F58BE6878}' : 'IAcadAcCmColor',
	'{FE28743E-1DAD-48F5-936B-6924E68AE3BE}' : 'IAcadHyperlinks',
	'{82090F76-F6CB-4414-93E3-7A7EC8286BAC}' : 'IAcadHyperlink',
	'{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}' : 'IAcad3DFace',
	'{8436D08F-6B44-4B65-AECB-4B3F570E38E8}' : 'IAcadPolygonMesh',
	'{B89275F4-543E-4EAF-A931-DAB1341A2B67}' : 'IAcad3DPolyline',
	'{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}' : 'IAcadArc',
	'{090C78C3-33E1-451B-B00F-A58F7B62DA00}' : 'IAcadAttribute',
	'{DF94C736-F717-4469-A886-B9902747352D}' : 'IAcad3DSolid',
	'{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}' : 'IAcadRegion',
	'{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}' : 'IAcadCircle',
	'{AB6BA922-5284-4D66-8D31-6E732B1645CC}' : 'IAcadDimAligned',
	'{06B71947-9E46-4B8F-B277-812B172E02EA}' : 'IAcadDimension',
	'{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}' : 'IAcadDimAngular',
	'{CE984151-66ED-4500-B99D-85ACCEC10820}' : 'IAcadDimDiametric',
	'{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}' : 'IAcadDimRotated',
	'{8BBE360E-DC9A-4640-8597-C54166887E54}' : 'IAcadDimOrdinate',
	'{FC56A33B-1DC1-42FE-B848-D469E375FC44}' : 'IAcadDimRadial',
	'{F64246E5-206A-42C2-B3E7-A725B2C07CFB}' : 'IAcadEllipse',
	'{D035FBCB-313A-4165-86A7-AAD91DA820E5}' : 'IAcadLeader',
	'{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}' : 'IAcadMText',
	'{8F0BB516-7C5B-4BA4-820F-24B1E962D971}' : 'IAcadPoint',
	'{82DEE429-1C13-460B-88FA-C63E0CA33D21}' : 'IAcadLWPolyline',
	'{A09B5650-3A79-41F7-A459-1817D6F1797C}' : 'IAcadPolyline',
	'{BE71C3CD-270F-4A01-86F4-91694B267C19}' : 'IAcadRay',
	'{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}' : 'IAcadShape',
	'{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}' : 'IAcadSolid',
	'{D7727775-104A-4DBA-9CCF-0FBDC5B80872}' : 'IAcadSpline',
	'{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}' : 'IAcadText',
	'{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}' : 'IAcadTolerance',
	'{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}' : 'IAcadTrace',
	'{96FC51A1-B610-406F-990D-0652F53758A9}' : 'IAcadXline',
	'{17C1A78F-ECB3-4838-986C-FA92E17D41AB}' : 'IAcadBlockReference',
	'{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}' : 'IAcadHatch',
	'{EE3833FA-927E-4272-A918-8B487E445600}' : 'IAcadRasterImage',
	'{BB0A29C2-AA57-4A39-A771-DD9987890AF7}' : 'IAcadLine',
	'{0B119218-2411-46DD-B7B9-17C8C009222C}' : 'IAcadLayout',
	'{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}' : 'IAcadPlotConfiguration',
	'{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}' : 'IAcadMInsertBlock',
	'{60A35C35-64B5-4751-99E7-259879896519}' : 'IAcadPolyfaceMesh',
	'{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}' : 'IAcadMLine',
	'{BA16BE7C-0789-43DE-B371-8082AE3FA99A}' : 'IAcadDim3PointAngular',
	'{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}' : 'IAcadExternalReference',
	'{187D4409-BABE-43D8-8379-2AF11136DA16}' : 'IAcadTable',
	'{FFCEA1F0-1C70-4342-9C14-929923139F4C}' : 'IAcadDimArcLength',
	'{F0828C6C-9FF0-4DFF-A115-158FF79B241E}' : 'IAcadDimRadialLarge',
	'{4EE05AF2-D6B9-4D79-9734-C175AC445099}' : 'IAcadSection',
	'{BB124B3C-3174-4CB8-8157-E5EFD03347AD}' : 'IAcadSectionSettings',
	'{62E19FBE-3C3D-4377-9E2F-02F84B11980D}' : 'IAcadSectionTypeSettings',
	'{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}' : 'IAcadPaperSpace',
	'{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}' : 'IAcadPViewport',
	'{B189A3C4-324E-4130-8516-381635BE10EF}' : 'IAcadView',
	'{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}' : 'IAcadBlocks',
	'{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}' : 'IAcadGroups',
	'{9C09D413-9CA2-462A-9D29-03CE60738E36}' : 'IAcadGroup',
	'{C62F448E-753C-4DDF-B30D-873D0DAF9735}' : 'IAcadDimStyles',
	'{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}' : 'IAcadDimStyle',
	'{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}' : 'IAcadLayers',
	'{F3A8989F-5CAE-4E98-A185-E161FCF43127}' : 'IAcadLayer',
	'{943058F5-B25A-470F-84E6-C6364FEC2635}' : 'IAcadLineTypes',
	'{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}' : 'IAcadLineType',
	'{803BC722-4C89-4866-98B1-E4453C5F6287}' : 'IAcadDictionaries',
	'{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}' : 'IAcadDictionary',
	'{BD45EE03-5243-4466-813C-95E33F562665}' : 'IAcadXRecord',
	'{5A832756-01AF-4D2F-89A6-50E0121AFD1A}' : 'IAcadRegisteredApplications',
	'{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}' : 'IAcadRegisteredApplication',
	'{617040CF-4E9D-4CC3-9814-AD69E0AB9751}' : 'IAcadTextStyles',
	'{BDF006CF-A063-40B0-912C-AF478B1CE15B}' : 'IAcadTextStyle',
	'{BF4812B8-408D-4E07-B595-ACB8336B6A93}' : 'IAcadUCSs',
	'{78C244EF-F4CC-43C7-AA5D-91A496215310}' : 'IAcadUCS',
	'{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}' : 'IAcadViews',
	'{98558EDE-E8B4-4870-9D78-15BE6370E1C1}' : 'IAcadViewports',
	'{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}' : 'IAcadViewport',
	'{1636A05E-7F68-4CEE-B93B-8F56BA299293}' : 'IAcadLayouts',
	'{AD2543CB-31A8-4DDD-9162-845E11D7F72F}' : 'IAcadPlotConfigurations',
	'{96435877-2FB6-4842-BD4F-7334ADF4B707}' : 'IAcadDatabasePreferences',
	'{65156CBF-69F4-403C-AC21-682F839048DD}' : 'IAcadFileDependencies',
	'{F309A783-F98D-4B85-AE32-BE0470A8A370}' : 'IAcadFileDependency',
	'{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}' : 'IAcadSummaryInfo',
	'{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}' : 'IAcadSectionManager',
	'{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}' : 'IAcadMaterials',
	'{5E69D338-33B4-40D3-9D02-ADA45791E720}' : 'IAcadMaterial',
	'{21158918-4D1E-49F5-8E6A-E4DFF3386250}' : 'IAcadSectionTypeSettings2',
	'{8607EF79-E042-46C4-8DF9-E96946D5C33D}' : 'IAcadDynamicBlockReferenceProperty',
	'{62998C8F-62F6-455F-806B-1604A1892F62}' : 'IAcadObjectEvents',
	'{73166AEE-97AE-4F35-AD73-DFCD36E37C04}' : 'IAcadSortentsTable',
	'{AA1895FD-9DF5-4824-9597-8FB7EA336887}' : 'IAcadIdPair',
	'{C1EF838D-1F50-4313-9A42-B290F14470AB}' : 'IAcadTableStyle',
	'{AD9CE10C-535C-48A6-86F0-DB9B105BD292}' : 'IAcadTableStyle2',
	'{0B9235CA-21CD-4797-A219-62E752D9DFB8}' : 'IAcadMLeaderStyle',
	'{3836C443-B84E-4F50-A3F5-D7DF6FF5366A}' : 'IAcadShadowDisplay',
	'{078BE9CC-452F-4ED8-81CF-017C7C6A3D14}' : 'IAcadAttribute2',
	'{A9930D00-3154-46E9-9101-E5E963F0D1FF}' : 'IAcadAttributeReference',
	'{04533CAF-7880-41D7-B4C7-0EEB9735DF22}' : 'IAcadAttributeReference2',
	'{B125D293-E039-4D19-B975-1C4A8841C5AB}' : 'IAcadMLeader',
	'{205DDA5F-EE89-4A11-8FCF-08826611B374}' : 'IAcadPViewport2',
	'{109AA82B-2388-4431-B488-42AE26505C8A}' : 'IAcadTable2',
	'{83DA5978-433D-4873-B80A-E353D0AEC540}' : 'IAcadOle',
	'{E0D0377A-C3ED-4F5A-87CE-2AAC3C141D32}' : 'IAcadHelix',
	'{59747640-33C2-4824-B942-57E893619124}' : 'IAcadSurface',
	'{4C19880A-0BAF-4899-80DB-1F672CFBF5FC}' : 'IAcadPlaneSurface',
	'{6069C4B0-6137-4076-B4F0-330CF31EE912}' : 'IAcadExtrudedSurface',
	'{0E305EE4-A4BB-4D14-A375-B3BAFC9D38C9}' : 'IAcadRevolvedSurface',
	'{6F708280-7555-499F-B5E2-0248AB74AB2F}' : 'IAcadSweptSurface',
	'{59FBE27D-91AF-4934-B454-BE0688ABA89D}' : 'IAcadLoftedSurface',
	'{1140D7A3-E582-4599-B98D-2387DAF35A71}' : 'IAcadUnderlay',
	'{46CAAFD6-D918-45D5-AE5B-EB1334198980}' : 'IAcadUnderlay2',
	'{FEF26B75-296F-4402-9210-EC80A9B39972}' : 'IAcadSubEntity',
	'{84822F99-8F0C-4F7C-8251-4344919CFEF3}' : 'IAcadSubEntSolidFace',
	'{06619D36-FEC2-4CD3-97F1-84949FFD63C7}' : 'IAcadSubEntSolidEdge',
	'{DEF51352-1B14-465C-9183-A69B87A3D11C}' : 'IAcadSubEntSolidVertex',
	'{699B4233-20E7-4638-8439-384D3CB00019}' : 'IAcadSubEntSolidNode',
	'{57D32359-5C1C-4783-B334-BC371687BDA8}' : 'IAcadBlock2',
	'{21F271F8-DBE9-4842-AB00-A4878F60255F}' : 'IAcadModelSpace2',
	'{9B075CA3-4499-40CC-A377-BC000455F59E}' : 'IAcadPaperSpace2',
	'{805F5969-BFFD-4683-9821-CD5590FF2F4E}' : 'IAcadSecurityParams',
	'{46D38550-0080-484A-97B0-B3A1F5ED9824}' : 'IAcadLayerStateManager',
	'{0EB66A59-8FF4-410B-B697-8813116B2C5F}' : 'IAcadDocument',
	'{DFF0942E-23C4-44B5-B67C-B511B5DD5A66}' : 'IAcadPlot',
	'{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}' : 'IAcadApplication',
	'{5A6047B5-55E8-456B-A5D1-D42C5DC90B96}' : 'IAcadPreferences',
	'{E988F6D8-E009-4C4B-B20F-937E3349B7F5}' : 'IAcadPreferencesFiles',
	'{470F310B-CA4B-4664-B8BA-2A56745331C3}' : 'IAcadPreferencesDisplay',
	'{DA7E4927-7A26-4409-A515-F4F9E67EB0C3}' : 'IAcadPreferencesOpenSave',
	'{E985D85D-2438-4979-8BB3-0CF1C0806140}' : 'IAcadPreferencesOutput',
	'{42370369-A258-4EAD-96C6-F78702E57374}' : 'IAcadPreferencesSystem',
	'{4149C4B5-CA42-4ED0-B8CB-EBBE87F83912}' : 'IAcadPreferencesUser',
	'{1591419F-43C2-4F66-BC6F-C0FF0EFFF074}' : 'IAcadPreferencesDrafting',
	'{129B870F-5FEE-4EF2-9BE6-30BAD4B0CD1F}' : 'IAcadPreferencesSelection',
	'{EB3A84E0-1069-4B35-8564-62441E5BEDC6}' : 'IAcadPreferencesProfiles',
	'{38931362-4638-4A2F-8201-E7B2AA52CA37}' : 'IAcadMenuGroups',
	'{D6261081-12FD-49ED-A359-D990DF71949D}' : 'IAcadMenuGroup',
	'{984C0B3E-F861-403A-A0FD-E332A7EC0CF3}' : 'IAcadPopupMenus',
	'{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}' : 'IAcadPopupMenu',
	'{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}' : 'IAcadPopupMenuItem',
	'{1081A53F-2A08-4767-A131-08831AE62035}' : 'IAcadToolbars',
	'{0C961978-3209-499F-809C-CABA49EBCA97}' : 'IAcadToolbar',
	'{B0E04681-40F0-4BCB-A78F-03660DE0651A}' : 'IAcadToolbarItem',
	'{BD7E485E-3CD1-4DD5-9959-EB76B03024A5}' : 'IAcadMenuBar',
	'{CDF18C05-94F9-4902-856D-137AC54CEADF}' : 'IAcadDocuments',
	'{144790A6-6C66-49EC-96B0-DC148D06DB98}' : 'IAcadState',
	'{913DBB03-9E39-4CA3-940E-BB7C4B88EF89}' : 'IAcadSelectionSets',
	'{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}' : 'IAcadSelectionSet',
	'{22C8E547-0D27-4793-BB9F-AC58D4F8E794}' : 'IAcadUtility',
}


NamesToIIDMap = {
	'IAcadObject' : '{EF942C4F-A848-4192-B7C2-94C680C264A1}',
	'IAcadDatabase' : '{A9625062-DC43-4D1C-9FC6-8512123BB91B}',
	'IAcadModelSpace' : '{2B0C6EF1-BEFA-4CCD-B408-1A274E825C39}',
	'IAcadBlock' : '{165531B8-67A4-46D8-AC99-F8150FA7A412}',
	'IAcadEntity' : '{E460D811-DFF0-4FCD-9D75-B440FA38263B}',
	'IAcadAcCmColor' : '{7382F647-BC48-456E-B877-D18F58BE6878}',
	'IAcadHyperlinks' : '{FE28743E-1DAD-48F5-936B-6924E68AE3BE}',
	'IAcadHyperlink' : '{82090F76-F6CB-4414-93E3-7A7EC8286BAC}',
	'IAcad3DFace' : '{C09A2DB0-CBD5-4106-A6EB-35736B3F5754}',
	'IAcadPolygonMesh' : '{8436D08F-6B44-4B65-AECB-4B3F570E38E8}',
	'IAcad3DPolyline' : '{B89275F4-543E-4EAF-A931-DAB1341A2B67}',
	'IAcadArc' : '{DD789CE5-850C-4FED-B9B7-34F4A7192DD7}',
	'IAcadAttribute' : '{090C78C3-33E1-451B-B00F-A58F7B62DA00}',
	'IAcad3DSolid' : '{DF94C736-F717-4469-A886-B9902747352D}',
	'IAcadRegion' : '{C9A07525-8E2B-4CEA-AE14-058FC16DB0E8}',
	'IAcadCircle' : '{8A7F2D00-0E8E-4228-8CB5-2E07B54ED2C4}',
	'IAcadDimAligned' : '{AB6BA922-5284-4D66-8D31-6E732B1645CC}',
	'IAcadDimension' : '{06B71947-9E46-4B8F-B277-812B172E02EA}',
	'IAcadDimAngular' : '{E0DA98A7-8B08-46A2-8B45-4BF873CB6CEF}',
	'IAcadDimDiametric' : '{CE984151-66ED-4500-B99D-85ACCEC10820}',
	'IAcadDimRotated' : '{D07DB6F3-DB36-4D70-BD1B-4B16CCD7B103}',
	'IAcadDimOrdinate' : '{8BBE360E-DC9A-4640-8597-C54166887E54}',
	'IAcadDimRadial' : '{FC56A33B-1DC1-42FE-B848-D469E375FC44}',
	'IAcadEllipse' : '{F64246E5-206A-42C2-B3E7-A725B2C07CFB}',
	'IAcadLeader' : '{D035FBCB-313A-4165-86A7-AAD91DA820E5}',
	'IAcadMText' : '{ED80FACC-C4E8-4370-B5F3-1EA7F3554324}',
	'IAcadPoint' : '{8F0BB516-7C5B-4BA4-820F-24B1E962D971}',
	'IAcadLWPolyline' : '{82DEE429-1C13-460B-88FA-C63E0CA33D21}',
	'IAcadPolyline' : '{A09B5650-3A79-41F7-A459-1817D6F1797C}',
	'IAcadRay' : '{BE71C3CD-270F-4A01-86F4-91694B267C19}',
	'IAcadShape' : '{822BD4B7-7F08-4871-80DD-FEA0C7E8BCD4}',
	'IAcadSolid' : '{23F23BC3-887A-4ED5-BDB7-8BAF1D820228}',
	'IAcadSpline' : '{D7727775-104A-4DBA-9CCF-0FBDC5B80872}',
	'IAcadText' : '{BA0222E2-D7FB-4BCB-BD71-714E7A598DAB}',
	'IAcadTolerance' : '{692212C8-D4A3-436A-ADE4-16C94BDC8A4C}',
	'IAcadTrace' : '{1CB82E58-CC76-4C8C-B1ED-D85C69B6A456}',
	'IAcadXline' : '{96FC51A1-B610-406F-990D-0652F53758A9}',
	'IAcadBlockReference' : '{17C1A78F-ECB3-4838-986C-FA92E17D41AB}',
	'IAcadHatch' : '{10D4F2FB-BEE7-47EB-B956-D5F51BC16221}',
	'IAcadRasterImage' : '{EE3833FA-927E-4272-A918-8B487E445600}',
	'IAcadLine' : '{BB0A29C2-AA57-4A39-A771-DD9987890AF7}',
	'IAcadLayout' : '{0B119218-2411-46DD-B7B9-17C8C009222C}',
	'IAcadPlotConfiguration' : '{9B36D1E0-C5B2-4E3F-8304-877E5E0557C4}',
	'IAcadMInsertBlock' : '{B56D093D-6BEA-4B50-A15B-34A3D5DFFFA0}',
	'IAcadPolyfaceMesh' : '{60A35C35-64B5-4751-99E7-259879896519}',
	'IAcadMLine' : '{61C46C50-B9BB-4B8E-9B10-E7AAABA3012B}',
	'IAcadDim3PointAngular' : '{BA16BE7C-0789-43DE-B371-8082AE3FA99A}',
	'IAcadExternalReference' : '{170C3BB6-7A0C-41DE-9872-7BDD7DD1174D}',
	'IAcadTable' : '{187D4409-BABE-43D8-8379-2AF11136DA16}',
	'IAcadDimArcLength' : '{FFCEA1F0-1C70-4342-9C14-929923139F4C}',
	'IAcadDimRadialLarge' : '{F0828C6C-9FF0-4DFF-A115-158FF79B241E}',
	'IAcadSection' : '{4EE05AF2-D6B9-4D79-9734-C175AC445099}',
	'IAcadSectionSettings' : '{BB124B3C-3174-4CB8-8157-E5EFD03347AD}',
	'IAcadSectionTypeSettings' : '{62E19FBE-3C3D-4377-9E2F-02F84B11980D}',
	'IAcadPaperSpace' : '{D9029681-BBAA-4436-B0F4-1EE43BF85BF9}',
	'IAcadPViewport' : '{A504EFDA-0C54-45F6-93B8-E127A92C3EA6}',
	'IAcadView' : '{B189A3C4-324E-4130-8516-381635BE10EF}',
	'IAcadBlocks' : '{D81C2652-A0CE-4302-BD1F-F8C4A4ADEABD}',
	'IAcadGroups' : '{10AA12FA-99E8-41B5-B4C3-BC7B54BC316D}',
	'IAcadGroup' : '{9C09D413-9CA2-462A-9D29-03CE60738E36}',
	'IAcadDimStyles' : '{C62F448E-753C-4DDF-B30D-873D0DAF9735}',
	'IAcadDimStyle' : '{9D568053-C3EF-41AD-9BE7-278F5DCDFF6D}',
	'IAcadLayers' : '{38ED835A-D1DE-42D6-A0FD-0A83A55885E7}',
	'IAcadLayer' : '{F3A8989F-5CAE-4E98-A185-E161FCF43127}',
	'IAcadLineTypes' : '{943058F5-B25A-470F-84E6-C6364FEC2635}',
	'IAcadLineType' : '{16DE7011-EE2C-4092-97C5-20A2CA6CDB25}',
	'IAcadDictionaries' : '{803BC722-4C89-4866-98B1-E4453C5F6287}',
	'IAcadDictionary' : '{C19C7CF6-CC9A-4C21-9B3D-C3ED22D5CF25}',
	'IAcadXRecord' : '{BD45EE03-5243-4466-813C-95E33F562665}',
	'IAcadRegisteredApplications' : '{5A832756-01AF-4D2F-89A6-50E0121AFD1A}',
	'IAcadRegisteredApplication' : '{0A1A95A8-60FB-4C44-8208-4E8ADCA32628}',
	'IAcadTextStyles' : '{617040CF-4E9D-4CC3-9814-AD69E0AB9751}',
	'IAcadTextStyle' : '{BDF006CF-A063-40B0-912C-AF478B1CE15B}',
	'IAcadUCSs' : '{BF4812B8-408D-4E07-B595-ACB8336B6A93}',
	'IAcadUCS' : '{78C244EF-F4CC-43C7-AA5D-91A496215310}',
	'IAcadViews' : '{65CD017C-09BF-4B8F-A7B3-0F797AF0E9BC}',
	'IAcadViewports' : '{98558EDE-E8B4-4870-9D78-15BE6370E1C1}',
	'IAcadViewport' : '{A62E3750-0A58-47D6-B84B-E3E337E5A2D2}',
	'IAcadLayouts' : '{1636A05E-7F68-4CEE-B93B-8F56BA299293}',
	'IAcadPlotConfigurations' : '{AD2543CB-31A8-4DDD-9162-845E11D7F72F}',
	'IAcadDatabasePreferences' : '{96435877-2FB6-4842-BD4F-7334ADF4B707}',
	'IAcadFileDependencies' : '{65156CBF-69F4-403C-AC21-682F839048DD}',
	'IAcadFileDependency' : '{F309A783-F98D-4B85-AE32-BE0470A8A370}',
	'IAcadSummaryInfo' : '{39EB94EF-3858-4DCF-8A69-3BEACBA10B7F}',
	'IAcadSectionManager' : '{ADB25D2B-4067-4D46-8B2B-6B9E9BA4D1AD}',
	'IAcadMaterials' : '{E2F7B997-2B44-4BD0-8EB6-16C819BE3EF3}',
	'IAcadMaterial' : '{5E69D338-33B4-40D3-9D02-ADA45791E720}',
	'IAcadSectionTypeSettings2' : '{21158918-4D1E-49F5-8E6A-E4DFF3386250}',
	'IAcadDynamicBlockReferenceProperty' : '{8607EF79-E042-46C4-8DF9-E96946D5C33D}',
	'IAcadSortentsTable' : '{73166AEE-97AE-4F35-AD73-DFCD36E37C04}',
	'IAcadIdPair' : '{AA1895FD-9DF5-4824-9597-8FB7EA336887}',
	'IAcadTableStyle' : '{C1EF838D-1F50-4313-9A42-B290F14470AB}',
	'IAcadTableStyle2' : '{AD9CE10C-535C-48A6-86F0-DB9B105BD292}',
	'IAcadMLeaderStyle' : '{0B9235CA-21CD-4797-A219-62E752D9DFB8}',
	'IAcadShadowDisplay' : '{3836C443-B84E-4F50-A3F5-D7DF6FF5366A}',
	'IAcadAttribute2' : '{078BE9CC-452F-4ED8-81CF-017C7C6A3D14}',
	'IAcadAttributeReference' : '{A9930D00-3154-46E9-9101-E5E963F0D1FF}',
	'IAcadAttributeReference2' : '{04533CAF-7880-41D7-B4C7-0EEB9735DF22}',
	'IAcadMLeader' : '{B125D293-E039-4D19-B975-1C4A8841C5AB}',
	'IAcadPViewport2' : '{205DDA5F-EE89-4A11-8FCF-08826611B374}',
	'IAcadTable2' : '{109AA82B-2388-4431-B488-42AE26505C8A}',
	'IAcadOle' : '{83DA5978-433D-4873-B80A-E353D0AEC540}',
	'IAcadHelix' : '{E0D0377A-C3ED-4F5A-87CE-2AAC3C141D32}',
	'IAcadSurface' : '{59747640-33C2-4824-B942-57E893619124}',
	'IAcadPlaneSurface' : '{4C19880A-0BAF-4899-80DB-1F672CFBF5FC}',
	'IAcadExtrudedSurface' : '{6069C4B0-6137-4076-B4F0-330CF31EE912}',
	'IAcadRevolvedSurface' : '{0E305EE4-A4BB-4D14-A375-B3BAFC9D38C9}',
	'IAcadSweptSurface' : '{6F708280-7555-499F-B5E2-0248AB74AB2F}',
	'IAcadLoftedSurface' : '{59FBE27D-91AF-4934-B454-BE0688ABA89D}',
	'IAcadUnderlay' : '{1140D7A3-E582-4599-B98D-2387DAF35A71}',
	'IAcadUnderlay2' : '{46CAAFD6-D918-45D5-AE5B-EB1334198980}',
	'IAcadSubEntity' : '{FEF26B75-296F-4402-9210-EC80A9B39972}',
	'IAcadSubEntSolidFace' : '{84822F99-8F0C-4F7C-8251-4344919CFEF3}',
	'IAcadSubEntSolidEdge' : '{06619D36-FEC2-4CD3-97F1-84949FFD63C7}',
	'IAcadSubEntSolidVertex' : '{DEF51352-1B14-465C-9183-A69B87A3D11C}',
	'IAcadSubEntSolidNode' : '{699B4233-20E7-4638-8439-384D3CB00019}',
	'IAcadBlock2' : '{57D32359-5C1C-4783-B334-BC371687BDA8}',
	'IAcadModelSpace2' : '{21F271F8-DBE9-4842-AB00-A4878F60255F}',
	'IAcadPaperSpace2' : '{9B075CA3-4499-40CC-A377-BC000455F59E}',
	'IAcadSecurityParams' : '{805F5969-BFFD-4683-9821-CD5590FF2F4E}',
	'IAcadLayerStateManager' : '{46D38550-0080-484A-97B0-B3A1F5ED9824}',
	'_DAcadApplicationEvents' : '{E8D59748-B414-4BE6-AF82-870C62C0CF4C}',
	'IAcadDocument' : '{0EB66A59-8FF4-410B-B697-8813116B2C5F}',
	'IAcadPlot' : '{DFF0942E-23C4-44B5-B67C-B511B5DD5A66}',
	'IAcadApplication' : '{8F17437C-2EFB-4FC4-8188-EEFA50FE7147}',
	'IAcadPreferences' : '{5A6047B5-55E8-456B-A5D1-D42C5DC90B96}',
	'IAcadPreferencesFiles' : '{E988F6D8-E009-4C4B-B20F-937E3349B7F5}',
	'IAcadPreferencesDisplay' : '{470F310B-CA4B-4664-B8BA-2A56745331C3}',
	'IAcadPreferencesOpenSave' : '{DA7E4927-7A26-4409-A515-F4F9E67EB0C3}',
	'IAcadPreferencesOutput' : '{E985D85D-2438-4979-8BB3-0CF1C0806140}',
	'IAcadPreferencesSystem' : '{42370369-A258-4EAD-96C6-F78702E57374}',
	'IAcadPreferencesUser' : '{4149C4B5-CA42-4ED0-B8CB-EBBE87F83912}',
	'IAcadPreferencesDrafting' : '{1591419F-43C2-4F66-BC6F-C0FF0EFFF074}',
	'IAcadPreferencesSelection' : '{129B870F-5FEE-4EF2-9BE6-30BAD4B0CD1F}',
	'IAcadPreferencesProfiles' : '{EB3A84E0-1069-4B35-8564-62441E5BEDC6}',
	'IAcadMenuGroups' : '{38931362-4638-4A2F-8201-E7B2AA52CA37}',
	'IAcadMenuGroup' : '{D6261081-12FD-49ED-A359-D990DF71949D}',
	'IAcadPopupMenus' : '{984C0B3E-F861-403A-A0FD-E332A7EC0CF3}',
	'IAcadPopupMenu' : '{19F1AEC4-8F70-4431-B5E3-1B3C681F0819}',
	'IAcadPopupMenuItem' : '{B7D20DD7-CB07-40A5-A611-1A62BA0806C7}',
	'IAcadToolbars' : '{1081A53F-2A08-4767-A131-08831AE62035}',
	'IAcadToolbar' : '{0C961978-3209-499F-809C-CABA49EBCA97}',
	'IAcadToolbarItem' : '{B0E04681-40F0-4BCB-A78F-03660DE0651A}',
	'IAcadMenuBar' : '{BD7E485E-3CD1-4DD5-9959-EB76B03024A5}',
	'IAcadDocuments' : '{CDF18C05-94F9-4902-856D-137AC54CEADF}',
	'IAcadState' : '{144790A6-6C66-49EC-96B0-DC148D06DB98}',
	'IAcadSelectionSets' : '{913DBB03-9E39-4CA3-940E-BB7C4B88EF89}',
	'IAcadSelectionSet' : '{3434ABBE-DCE0-446C-B763-E1ED8C2F7821}',
	'IAcadUtility' : '{22C8E547-0D27-4793-BB9F-AC58D4F8E794}',
	'_DAcadDocumentEvents' : '{C814C69D-A74B-494C-8EE6-23731B145CCB}',
	'IAcadObjectEvents' : '{62998C8F-62F6-455F-806B-1604A1892F62}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

